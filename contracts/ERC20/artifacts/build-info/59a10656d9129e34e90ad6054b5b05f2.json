{
	"id": "59a10656d9129e34e90ad6054b5b05f2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20/vSwapERC20.sol": {
				"content": "pragma solidity ^0.8.0;\n\n\nimport \"../interfaces/IvSwapERC20.sol\";\nimport \"../libraries/SafeMath.sol\";\n\n\n//FOR TEST ONLY\ncontract vSwapERC20 is IvSwapERC20 {\n    using SafeMath for uint256;\n\n    string public constant name = \"Virtuswap V1\";\n    string public constant symbol = \"VSWAP-V1\";\n    uint8 public constant decimals = 18;\n    uint256 override public totalSupply;\n    mapping(address => uint256) override public balanceOf;\n    mapping(address => mapping(address => uint256)) override public allowance;\n\n    constructor() {}\n\n    function _mint(address to, uint256 value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint256 value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value\n    ) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 value\n    ) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) external override returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n \n    function transfer(address to, uint256 value) external override returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external override returns (bool) {\n        if (allowance[from][msg.sender] != 0) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(\n                value\n            );\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n}\n"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}"
			},
			"contracts/interfaces/IvSwapERC20.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"../ERC20/IERC20.sol\";\ninterface IvSwapERC20 is IERC20 {}\n"
			},
			"contracts/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /// @notice Returns the balance of a token\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\n    /// @return The number of tokens held by the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\n    /// @param recipient The account that will receive the amount transferred\n    /// @param amount The number of tokens to send from the sender to the recipient\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /// @notice Returns the current allowance given to a spender by an owner\n    /// @param owner The account of the token owner\n    /// @param spender The account of the token spender\n    /// @return The current allowance granted by `owner` to `spender`\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\n    /// @param amount The amount of tokens allowed to be used by `spender`\n    /// @return Returns true for a successful approval, false for unsuccessful\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n    /// @param sender The account from which the transfer will be initiated\n    /// @param recipient The recipient of the transfer\n    /// @param amount The amount of the transfer\n    /// @return Returns true for a successful transfer, false for unsuccessful\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\n    /// @param value The amount of tokens that were transferred\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n    /// @param owner The account that approved spending of its tokens\n    /// @param spender The account for which the spending allowance was modified\n    /// @param value The new allowance from the owner to the spender\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x9c68bfd77adffd9844d42df6f11148a215b3498b97406b094a55fbaaa541b0d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f8bbe55530a7dcf1242e1b2c786dcb68b3634a9b6de1a7d4dad8dd93e455ba\",\"dweb:/ipfs/QmR42LuC14UJuRLTh83S3rq7E59pJ2ZTm7MowcYrY2WmKb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/ERC20/vSwapERC20.sol": {
				"vSwapERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"allowance": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"return": "The current allowance granted by `owner` to `spender`",
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"balanceOf": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"return": "The number of tokens held by the account",
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"totalSupply": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/vSwapERC20.sol\":120:2094  contract vSwapERC20 is IvSwapERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20/vSwapERC20.sol\":513:529  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/ERC20/vSwapERC20.sol\":120:2094  contract vSwapERC20 is IvSwapERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/vSwapERC20.sol\":120:2094  contract vSwapERC20 is IvSwapERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20/vSwapERC20.sol\":194:238  string public constant name = \"Virtuswap V1\" */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20.sol\":1415:1571  function approve(address spender, uint256 value) external override returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20.sol\":333:368  uint256 override public totalSupply */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20.sol\":1732:2092  function transferFrom(... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20.sol\":292:327  uint8 public constant decimals = 18 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20.sol\":374:427  mapping(address => uint256) override public balanceOf */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20.sol\":244:286  string public constant symbol = \"VSWAP-V1\" */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20.sol\":1578:1726  function transfer(address to, uint256 value) external override returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20.sol\":433:506  mapping(address => mapping(address => uint256)) override public allowance */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20.sol\":194:238  string public constant name = \"Virtuswap V1\" */\n    tag_14:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      0x5669727475737761702056310000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":1415:1571  function approve(address spender, uint256 value) external override returns (bool) {... */\n    tag_20:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1491:1495  bool */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1507:1543  _approve(msg.sender, spender, value) */\n      tag_54\n        /* \"contracts/ERC20/vSwapERC20.sol\":1516:1526  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20.sol\":1528:1535  spender */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20.sol\":1537:1542  value */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20.sol\":1507:1515  _approve */\n      tag_55\n        /* \"contracts/ERC20/vSwapERC20.sol\":1507:1543  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1560:1564  true */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20.sol\":1553:1564  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20/vSwapERC20.sol\":1415:1571  function approve(address spender, uint256 value) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":333:368  uint256 override public totalSupply */\n    tag_24:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":1732:2092  function transferFrom(... */\n    tag_30:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1852:1856  bool */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1903:1904  0 */\n      dup1\n        /* \"contracts/ERC20/vSwapERC20.sol\":1872:1881  allowance */\n      0x02\n        /* \"contracts/ERC20/vSwapERC20.sol\":1872:1887  allowance[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1882:1886  from */\n      dup7\n        /* \"contracts/ERC20/vSwapERC20.sol\":1872:1887  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20.sol\":1872:1899  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1888:1898  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20.sol\":1872:1899  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/vSwapERC20.sol\":1872:1904  allowance[from][msg.sender] != 0 */\n      eq\n        /* \"contracts/ERC20/vSwapERC20.sol\":1868:2029  if (allowance[from][msg.sender] != 0) {... */\n      tag_57\n      jumpi\n        /* \"contracts/ERC20/vSwapERC20.sol\":1950:2018  allowance[from][msg.sender].sub(... */\n      tag_58\n        /* \"contracts/ERC20/vSwapERC20.sol\":1999:2004  value */\n      dup3\n        /* \"contracts/ERC20/vSwapERC20.sol\":1950:1959  allowance */\n      0x02\n        /* \"contracts/ERC20/vSwapERC20.sol\":1950:1965  allowance[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1960:1964  from */\n      dup8\n        /* \"contracts/ERC20/vSwapERC20.sol\":1950:1965  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20.sol\":1950:1977  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1966:1976  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20.sol\":1950:1977  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/vSwapERC20.sol\":1950:1981  allowance[from][msg.sender].sub */\n      tag_59\n      swap1\n        /* \"contracts/ERC20/vSwapERC20.sol\":1950:2018  allowance[from][msg.sender].sub(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1920:1929  allowance */\n      0x02\n        /* \"contracts/ERC20/vSwapERC20.sol\":1920:1935  allowance[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1930:1934  from */\n      dup7\n        /* \"contracts/ERC20/vSwapERC20.sol\":1920:1935  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20.sol\":1920:1947  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1936:1946  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20.sol\":1920:1947  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20.sol\":1920:2018  allowance[from][msg.sender] = allowance[from][msg.sender].sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/vSwapERC20.sol\":1868:2029  if (allowance[from][msg.sender] != 0) {... */\n    tag_57:\n        /* \"contracts/ERC20/vSwapERC20.sol\":2038:2064  _transfer(from, to, value) */\n      tag_60\n        /* \"contracts/ERC20/vSwapERC20.sol\":2048:2052  from */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20.sol\":2054:2056  to */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20.sol\":2058:2063  value */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20.sol\":2038:2047  _transfer */\n      tag_61\n        /* \"contracts/ERC20/vSwapERC20.sol\":2038:2064  _transfer(from, to, value) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/ERC20/vSwapERC20.sol\":2081:2085  true */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20.sol\":2074:2085  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20/vSwapERC20.sol\":1732:2092  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":292:327  uint8 public constant decimals = 18 */\n    tag_33:\n        /* \"contracts/ERC20/vSwapERC20.sol\":325:327  18 */\n      0x12\n        /* \"contracts/ERC20/vSwapERC20.sol\":292:327  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":374:427  mapping(address => uint256) override public balanceOf */\n    tag_39:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":244:286  string public constant symbol = \"VSWAP-V1\" */\n    tag_42:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x56535741502d5631000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":1578:1726  function transfer(address to, uint256 value) external override returns (bool) {... */\n    tag_46:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1650:1654  bool */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1666:1698  _transfer(msg.sender, to, value) */\n      tag_63\n        /* \"contracts/ERC20/vSwapERC20.sol\":1676:1686  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20.sol\":1688:1690  to */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20.sol\":1692:1697  value */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20.sol\":1666:1675  _transfer */\n      tag_61\n        /* \"contracts/ERC20/vSwapERC20.sol\":1666:1698  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1715:1719  true */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20.sol\":1708:1719  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20/vSwapERC20.sol\":1578:1726  function transfer(address to, uint256 value) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":433:506  mapping(address => mapping(address => uint256)) override public allowance */\n    tag_51:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":955:1154  function _approve(... */\n    tag_55:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1096:1101  value */\n      dup1\n        /* \"contracts/ERC20/vSwapERC20.sol\":1068:1077  allowance */\n      0x02\n        /* \"contracts/ERC20/vSwapERC20.sol\":1068:1084  allowance[owner] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1078:1083  owner */\n      dup6\n        /* \"contracts/ERC20/vSwapERC20.sol\":1068:1084  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20.sol\":1068:1093  allowance[owner][spender] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1085:1092  spender */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20.sol\":1068:1093  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20.sol\":1068:1101  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/vSwapERC20.sol\":1132:1139  spender */\n      dup2\n        /* \"contracts/ERC20/vSwapERC20.sol\":1116:1147  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/vSwapERC20.sol\":1125:1130  owner */\n      dup4\n        /* \"contracts/ERC20/vSwapERC20.sol\":1116:1147  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20/vSwapERC20.sol\":1141:1146  value */\n      dup4\n        /* \"contracts/ERC20/vSwapERC20.sol\":1116:1147  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20/vSwapERC20.sol\":955:1154  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":3107:3203  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_59:\n        /* \"contracts/libraries/SafeMath.sol\":3165:3172  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":3195:3196  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":3191:3192  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":3191:3196  a - b */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/libraries/SafeMath.sol\":3184:3196  return a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":3107:3203  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20.sol\":1160:1409  function _transfer(... */\n    tag_61:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1286:1312  balanceOf[from].sub(value) */\n      tag_70\n        /* \"contracts/ERC20/vSwapERC20.sol\":1306:1311  value */\n      dup2\n        /* \"contracts/ERC20/vSwapERC20.sol\":1286:1295  balanceOf */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20.sol\":1286:1301  balanceOf[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1296:1300  from */\n      dup7\n        /* \"contracts/ERC20/vSwapERC20.sol\":1286:1301  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/vSwapERC20.sol\":1286:1305  balanceOf[from].sub */\n      tag_59\n      swap1\n        /* \"contracts/ERC20/vSwapERC20.sol\":1286:1312  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1268:1277  balanceOf */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20.sol\":1268:1283  balanceOf[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1278:1282  from */\n      dup6\n        /* \"contracts/ERC20/vSwapERC20.sol\":1268:1283  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20.sol\":1268:1312  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/vSwapERC20.sol\":1338:1362  balanceOf[to].add(value) */\n      tag_71\n        /* \"contracts/ERC20/vSwapERC20.sol\":1356:1361  value */\n      dup2\n        /* \"contracts/ERC20/vSwapERC20.sol\":1338:1347  balanceOf */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20.sol\":1338:1351  balanceOf[to] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1348:1350  to */\n      dup6\n        /* \"contracts/ERC20/vSwapERC20.sol\":1338:1351  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/vSwapERC20.sol\":1338:1355  balanceOf[to].add */\n      tag_72\n      swap1\n        /* \"contracts/ERC20/vSwapERC20.sol\":1338:1362  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"contracts/ERC20/vSwapERC20.sol\":1322:1331  balanceOf */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20.sol\":1322:1335  balanceOf[to] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20.sol\":1332:1334  to */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20.sol\":1322:1335  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20.sol\":1322:1362  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/vSwapERC20.sol\":1392:1394  to */\n      dup2\n        /* \"contracts/ERC20/vSwapERC20.sol\":1377:1402  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/vSwapERC20.sol\":1386:1390  from */\n      dup4\n        /* \"contracts/ERC20/vSwapERC20.sol\":1377:1402  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20/vSwapERC20.sol\":1396:1401  value */\n      dup4\n        /* \"contracts/ERC20/vSwapERC20.sol\":1377:1402  Transfer(from, to, value) */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20/vSwapERC20.sol\":1160:1409  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2740:2836  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_72:\n        /* \"contracts/libraries/SafeMath.sol\":2798:2805  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2828:2829  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2824:2825  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2824:2829  a + b */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"contracts/libraries/SafeMath.sol\":2817:2829  return a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2740:2836  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_78:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_80\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_82:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_84\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_38:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":373:492   */\n    tag_87:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_90\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_78\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_50:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_93\n      tag_89\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":725:844   */\n    tag_92:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_94\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_78\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_95\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_78\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_29:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_98\n      tag_89\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1222:1341   */\n    tag_97:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_99\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_78\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_100\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_78\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_101\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_82\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_19:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_104\n      tag_89\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1830:1949   */\n    tag_103:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_105\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_78\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_106\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_82\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_107:\n        /* \"#utility.yul\":2298:2319   */\n      tag_109\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_111:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_113\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2503:2574   */\n      tag_115\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_117\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2660:2689   */\n      tag_119\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:2820   */\n    tag_121:\n        /* \"#utility.yul\":2789:2813   */\n      tag_123\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2789:2813   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2784:2787   */\n      dup3\n        /* \"#utility.yul\":2777:2814   */\n      mstore\n        /* \"#utility.yul\":2702:2820   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:2938   */\n    tag_125:\n        /* \"#utility.yul\":2909:2931   */\n      tag_127\n        /* \"#utility.yul\":2925:2930   */\n      dup2\n        /* \"#utility.yul\":2909:2931   */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2904:2907   */\n      dup3\n        /* \"#utility.yul\":2897:2932   */\n      mstore\n        /* \"#utility.yul\":2826:2938   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2944:3154   */\n    tag_22:\n        /* \"#utility.yul\":3031:3035   */\n      0x00\n        /* \"#utility.yul\":3069:3071   */\n      0x20\n        /* \"#utility.yul\":3058:3067   */\n      dup3\n        /* \"#utility.yul\":3054:3072   */\n      add\n        /* \"#utility.yul\":3046:3072   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3147   */\n      tag_130\n        /* \"#utility.yul\":3144:3145   */\n      0x00\n        /* \"#utility.yul\":3133:3142   */\n      dup4\n        /* \"#utility.yul\":3129:3146   */\n      add\n        /* \"#utility.yul\":3120:3126   */\n      dup5\n        /* \"#utility.yul\":3082:3147   */\n      tag_107\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2944:3154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3160:3473   */\n    tag_16:\n        /* \"#utility.yul\":3273:3277   */\n      0x00\n        /* \"#utility.yul\":3311:3313   */\n      0x20\n        /* \"#utility.yul\":3300:3309   */\n      dup3\n        /* \"#utility.yul\":3296:3314   */\n      add\n        /* \"#utility.yul\":3288:3314   */\n      swap1\n      pop\n        /* \"#utility.yul\":3360:3369   */\n      dup2\n        /* \"#utility.yul\":3354:3358   */\n      dup2\n        /* \"#utility.yul\":3350:3370   */\n      sub\n        /* \"#utility.yul\":3346:3347   */\n      0x00\n        /* \"#utility.yul\":3335:3344   */\n      dup4\n        /* \"#utility.yul\":3331:3348   */\n      add\n        /* \"#utility.yul\":3324:3371   */\n      mstore\n        /* \"#utility.yul\":3388:3466   */\n      tag_132\n        /* \"#utility.yul\":3461:3465   */\n      dup2\n        /* \"#utility.yul\":3452:3458   */\n      dup5\n        /* \"#utility.yul\":3388:3466   */\n      tag_111\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3380:3466   */\n      swap1\n      pop\n        /* \"#utility.yul\":3160:3473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3479:3701   */\n    tag_26:\n        /* \"#utility.yul\":3572:3576   */\n      0x00\n        /* \"#utility.yul\":3610:3612   */\n      0x20\n        /* \"#utility.yul\":3599:3608   */\n      dup3\n        /* \"#utility.yul\":3595:3613   */\n      add\n        /* \"#utility.yul\":3587:3613   */\n      swap1\n      pop\n        /* \"#utility.yul\":3623:3694   */\n      tag_134\n        /* \"#utility.yul\":3691:3692   */\n      0x00\n        /* \"#utility.yul\":3680:3689   */\n      dup4\n        /* \"#utility.yul\":3676:3693   */\n      add\n        /* \"#utility.yul\":3667:3673   */\n      dup5\n        /* \"#utility.yul\":3623:3694   */\n      tag_121\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3479:3701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3707:3921   */\n    tag_35:\n        /* \"#utility.yul\":3796:3800   */\n      0x00\n        /* \"#utility.yul\":3834:3836   */\n      0x20\n        /* \"#utility.yul\":3823:3832   */\n      dup3\n        /* \"#utility.yul\":3819:3837   */\n      add\n        /* \"#utility.yul\":3811:3837   */\n      swap1\n      pop\n        /* \"#utility.yul\":3847:3914   */\n      tag_136\n        /* \"#utility.yul\":3911:3912   */\n      0x00\n        /* \"#utility.yul\":3900:3909   */\n      dup4\n        /* \"#utility.yul\":3896:3913   */\n      add\n        /* \"#utility.yul\":3887:3893   */\n      dup5\n        /* \"#utility.yul\":3847:3914   */\n      tag_125\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3707:3921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4008:4107   */\n    tag_114:\n        /* \"#utility.yul\":4060:4066   */\n      0x00\n        /* \"#utility.yul\":4094:4099   */\n      dup2\n        /* \"#utility.yul\":4088:4100   */\n      mload\n        /* \"#utility.yul\":4078:4100   */\n      swap1\n      pop\n        /* \"#utility.yul\":4008:4107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4113:4282   */\n    tag_116:\n        /* \"#utility.yul\":4197:4208   */\n      0x00\n        /* \"#utility.yul\":4231:4237   */\n      dup3\n        /* \"#utility.yul\":4226:4229   */\n      dup3\n        /* \"#utility.yul\":4219:4238   */\n      mstore\n        /* \"#utility.yul\":4271:4275   */\n      0x20\n        /* \"#utility.yul\":4266:4269   */\n      dup3\n        /* \"#utility.yul\":4262:4276   */\n      add\n        /* \"#utility.yul\":4247:4276   */\n      swap1\n      pop\n        /* \"#utility.yul\":4113:4282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4288:4593   */\n    tag_76:\n        /* \"#utility.yul\":4328:4331   */\n      0x00\n        /* \"#utility.yul\":4347:4367   */\n      tag_142\n        /* \"#utility.yul\":4365:4366   */\n      dup3\n        /* \"#utility.yul\":4347:4367   */\n      tag_124\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4342:4367   */\n      swap2\n      pop\n        /* \"#utility.yul\":4381:4401   */\n      tag_143\n        /* \"#utility.yul\":4399:4400   */\n      dup4\n        /* \"#utility.yul\":4381:4401   */\n      tag_124\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4376:4401   */\n      swap3\n      pop\n        /* \"#utility.yul\":4535:4536   */\n      dup3\n        /* \"#utility.yul\":4467:4533   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4463:4537   */\n      sub\n        /* \"#utility.yul\":4460:4461   */\n      dup3\n        /* \"#utility.yul\":4457:4538   */\n      gt\n        /* \"#utility.yul\":4454:4561   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":4541:4559   */\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4454:4561   */\n    tag_144:\n        /* \"#utility.yul\":4585:4586   */\n      dup3\n        /* \"#utility.yul\":4582:4583   */\n      dup3\n        /* \"#utility.yul\":4578:4587   */\n      add\n        /* \"#utility.yul\":4571:4587   */\n      swap1\n      pop\n        /* \"#utility.yul\":4288:4593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4599:4790   */\n    tag_68:\n        /* \"#utility.yul\":4639:4643   */\n      0x00\n        /* \"#utility.yul\":4659:4679   */\n      tag_148\n        /* \"#utility.yul\":4677:4678   */\n      dup3\n        /* \"#utility.yul\":4659:4679   */\n      tag_124\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4654:4679   */\n      swap2\n      pop\n        /* \"#utility.yul\":4693:4713   */\n      tag_149\n        /* \"#utility.yul\":4711:4712   */\n      dup4\n        /* \"#utility.yul\":4693:4713   */\n      tag_124\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4688:4713   */\n      swap3\n      pop\n        /* \"#utility.yul\":4732:4733   */\n      dup3\n        /* \"#utility.yul\":4729:4730   */\n      dup3\n        /* \"#utility.yul\":4726:4734   */\n      lt\n        /* \"#utility.yul\":4723:4757   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4737:4755   */\n      tag_151\n      tag_146\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4723:4757   */\n    tag_150:\n        /* \"#utility.yul\":4782:4783   */\n      dup3\n        /* \"#utility.yul\":4779:4780   */\n      dup3\n        /* \"#utility.yul\":4775:4784   */\n      sub\n        /* \"#utility.yul\":4767:4784   */\n      swap1\n      pop\n        /* \"#utility.yul\":4599:4790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4796:4892   */\n    tag_152:\n        /* \"#utility.yul\":4833:4840   */\n      0x00\n        /* \"#utility.yul\":4862:4886   */\n      tag_154\n        /* \"#utility.yul\":4880:4885   */\n      dup3\n        /* \"#utility.yul\":4862:4886   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4851:4886   */\n      swap1\n      pop\n        /* \"#utility.yul\":4796:4892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4898:4988   */\n    tag_110:\n        /* \"#utility.yul\":4932:4939   */\n      0x00\n        /* \"#utility.yul\":4975:4980   */\n      dup2\n        /* \"#utility.yul\":4968:4981   */\n      iszero\n        /* \"#utility.yul\":4961:4982   */\n      iszero\n        /* \"#utility.yul\":4950:4982   */\n      swap1\n      pop\n        /* \"#utility.yul\":4898:4988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4994:5120   */\n    tag_155:\n        /* \"#utility.yul\":5031:5038   */\n      0x00\n        /* \"#utility.yul\":5071:5113   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5064:5069   */\n      dup3\n        /* \"#utility.yul\":5060:5114   */\n      and\n        /* \"#utility.yul\":5049:5114   */\n      swap1\n      pop\n        /* \"#utility.yul\":4994:5120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5126:5203   */\n    tag_124:\n        /* \"#utility.yul\":5163:5170   */\n      0x00\n        /* \"#utility.yul\":5192:5197   */\n      dup2\n        /* \"#utility.yul\":5181:5197   */\n      swap1\n      pop\n        /* \"#utility.yul\":5126:5203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5209:5295   */\n    tag_128:\n        /* \"#utility.yul\":5244:5251   */\n      0x00\n        /* \"#utility.yul\":5284:5288   */\n      0xff\n        /* \"#utility.yul\":5277:5282   */\n      dup3\n        /* \"#utility.yul\":5273:5289   */\n      and\n        /* \"#utility.yul\":5262:5289   */\n      swap1\n      pop\n        /* \"#utility.yul\":5209:5295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5301:5608   */\n    tag_118:\n        /* \"#utility.yul\":5369:5370   */\n      0x00\n        /* \"#utility.yul\":5379:5492   */\n    tag_161:\n        /* \"#utility.yul\":5393:5399   */\n      dup4\n        /* \"#utility.yul\":5390:5391   */\n      dup2\n        /* \"#utility.yul\":5387:5400   */\n      lt\n        /* \"#utility.yul\":5379:5492   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":5478:5479   */\n      dup1\n        /* \"#utility.yul\":5473:5476   */\n      dup3\n        /* \"#utility.yul\":5469:5480   */\n      add\n        /* \"#utility.yul\":5463:5481   */\n      mload\n        /* \"#utility.yul\":5459:5460   */\n      dup2\n        /* \"#utility.yul\":5454:5457   */\n      dup5\n        /* \"#utility.yul\":5450:5461   */\n      add\n        /* \"#utility.yul\":5443:5482   */\n      mstore\n        /* \"#utility.yul\":5415:5417   */\n      0x20\n        /* \"#utility.yul\":5412:5413   */\n      dup2\n        /* \"#utility.yul\":5408:5418   */\n      add\n        /* \"#utility.yul\":5403:5418   */\n      swap1\n      pop\n        /* \"#utility.yul\":5379:5492   */\n      jump(tag_161)\n    tag_163:\n        /* \"#utility.yul\":5510:5516   */\n      dup4\n        /* \"#utility.yul\":5507:5508   */\n      dup2\n        /* \"#utility.yul\":5504:5517   */\n      gt\n        /* \"#utility.yul\":5501:5602   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":5590:5591   */\n      0x00\n        /* \"#utility.yul\":5581:5587   */\n      dup5\n        /* \"#utility.yul\":5576:5579   */\n      dup5\n        /* \"#utility.yul\":5572:5588   */\n      add\n        /* \"#utility.yul\":5565:5592   */\n      mstore\n        /* \"#utility.yul\":5501:5602   */\n    tag_164:\n        /* \"#utility.yul\":5350:5608   */\n      pop\n        /* \"#utility.yul\":5301:5608   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5614:5794   */\n    tag_146:\n        /* \"#utility.yul\":5662:5739   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5659:5660   */\n      0x00\n        /* \"#utility.yul\":5652:5740   */\n      mstore\n        /* \"#utility.yul\":5759:5763   */\n      0x11\n        /* \"#utility.yul\":5756:5757   */\n      0x04\n        /* \"#utility.yul\":5749:5764   */\n      mstore\n        /* \"#utility.yul\":5783:5787   */\n      0x24\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5773:5788   */\n      revert\n        /* \"#utility.yul\":5923:6040   */\n    tag_89:\n        /* \"#utility.yul\":6032:6033   */\n      0x00\n        /* \"#utility.yul\":6029:6030   */\n      dup1\n        /* \"#utility.yul\":6022:6034   */\n      revert\n        /* \"#utility.yul\":6046:6148   */\n    tag_120:\n        /* \"#utility.yul\":6087:6093   */\n      0x00\n        /* \"#utility.yul\":6138:6140   */\n      0x1f\n        /* \"#utility.yul\":6134:6141   */\n      not\n        /* \"#utility.yul\":6129:6131   */\n      0x1f\n        /* \"#utility.yul\":6122:6127   */\n      dup4\n        /* \"#utility.yul\":6118:6132   */\n      add\n        /* \"#utility.yul\":6114:6142   */\n      and\n        /* \"#utility.yul\":6104:6142   */\n      swap1\n      pop\n        /* \"#utility.yul\":6046:6148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6154:6276   */\n    tag_81:\n        /* \"#utility.yul\":6227:6251   */\n      tag_171\n        /* \"#utility.yul\":6245:6250   */\n      dup2\n        /* \"#utility.yul\":6227:6251   */\n      tag_152\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6220:6225   */\n      dup2\n        /* \"#utility.yul\":6217:6252   */\n      eq\n        /* \"#utility.yul\":6207:6270   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":6266:6267   */\n      0x00\n        /* \"#utility.yul\":6263:6264   */\n      dup1\n        /* \"#utility.yul\":6256:6268   */\n      revert\n        /* \"#utility.yul\":6207:6270   */\n    tag_172:\n        /* \"#utility.yul\":6154:6276   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6404   */\n    tag_85:\n        /* \"#utility.yul\":6355:6379   */\n      tag_174\n        /* \"#utility.yul\":6373:6378   */\n      dup2\n        /* \"#utility.yul\":6355:6379   */\n      tag_124\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6348:6353   */\n      dup2\n        /* \"#utility.yul\":6345:6380   */\n      eq\n        /* \"#utility.yul\":6335:6398   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":6394:6395   */\n      0x00\n        /* \"#utility.yul\":6391:6392   */\n      dup1\n        /* \"#utility.yul\":6384:6396   */\n      revert\n        /* \"#utility.yul\":6335:6398   */\n    tag_175:\n        /* \"#utility.yul\":6282:6404   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f021d811f0ea11684282884c7431eeea2c16c41d57dadcfdf8d23b2cfb45abe764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_114": {
									"entryPoint": null,
									"id": 114,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610b18806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906108e9565b60405180910390f35b6100d060048036038101906100cb9190610828565b610239565b6040516100dd91906108ce565b60405180910390f35b6100ee610250565b6040516100fb919061090b565b60405180910390f35b61011e600480360381019061011991906107d5565b610256565b60405161012b91906108ce565b60405180910390f35b61013c610401565b6040516101499190610926565b60405180910390f35b61016c60048036038101906101679190610768565b610406565b604051610179919061090b565b60405180910390f35b61018a61041e565b60405161019791906108e9565b60405180910390f35b6101ba60048036038101906101b59190610828565b610457565b6040516101c791906108ce565b60405180910390f35b6101ea60048036038101906101e59190610795565b61046e565b6040516101f7919061090b565b60405180910390f35b6040518060400160405280600c81526020017f566972747573776170205631000000000000000000000000000000000000000081525081565b6000610246338484610493565b6001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146103eb5761036a82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461057e90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6103f6848484610594565b600190509392505050565b601281565b60016020528060005260406000206000915090505481565b6040518060400160405280600881526020017f56535741502d563100000000000000000000000000000000000000000000000081525081565b6000610464338484610594565b6001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610571919061090b565b60405180910390a3505050565b6000818361058c91906109b3565b905092915050565b6105e681600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461057e90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061067b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461072890919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161071b919061090b565b60405180910390a3505050565b60008183610736919061095d565b905092915050565b60008135905061074d81610ab4565b92915050565b60008135905061076281610acb565b92915050565b60006020828403121561077e5761077d610a9e565b5b600061078c8482850161073e565b91505092915050565b600080604083850312156107ac576107ab610a9e565b5b60006107ba8582860161073e565b92505060206107cb8582860161073e565b9150509250929050565b6000806000606084860312156107ee576107ed610a9e565b5b60006107fc8682870161073e565b935050602061080d8682870161073e565b925050604061081e86828701610753565b9150509250925092565b6000806040838503121561083f5761083e610a9e565b5b600061084d8582860161073e565b925050602061085e85828601610753565b9150509250929050565b610871816109f9565b82525050565b600061088282610941565b61088c818561094c565b935061089c818560208601610a3c565b6108a581610aa3565b840191505092915050565b6108b981610a25565b82525050565b6108c881610a2f565b82525050565b60006020820190506108e36000830184610868565b92915050565b600060208201905081810360008301526109038184610877565b905092915050565b600060208201905061092060008301846108b0565b92915050565b600060208201905061093b60008301846108bf565b92915050565b600081519050919050565b600082825260208201905092915050565b600061096882610a25565b915061097383610a25565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109a8576109a7610a6f565b5b828201905092915050565b60006109be82610a25565b91506109c983610a25565b9250828210156109dc576109db610a6f565b5b828203905092915050565b60006109f282610a05565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610a5a578082015181840152602081019050610a3f565b83811115610a69576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b610abd816109e7565b8114610ac857600080fd5b50565b610ad481610a25565b8114610adf57600080fd5b5056fea2646970667358221220f021d811f0ea11684282884c7431eeea2c16c41d57dadcfdf8d23b2cfb45abe764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB18 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5669727475737761702056310000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 CALLER DUP5 DUP5 PUSH2 0x493 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x3EB JUMPI PUSH2 0x36A DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x57E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x3F6 DUP5 DUP5 DUP5 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x56535741502D5631000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x464 CALLER DUP5 DUP5 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E6 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x57E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x67B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x728 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x95D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0xAB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x762 DUP2 PUSH2 0xACB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH2 0x77D PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78C DUP5 DUP3 DUP6 ADD PUSH2 0x73E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AB PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7BA DUP6 DUP3 DUP7 ADD PUSH2 0x73E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7CB DUP6 DUP3 DUP7 ADD PUSH2 0x73E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7EE JUMPI PUSH2 0x7ED PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7FC DUP7 DUP3 DUP8 ADD PUSH2 0x73E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x80D DUP7 DUP3 DUP8 ADD PUSH2 0x73E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x81E DUP7 DUP3 DUP8 ADD PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x84D DUP6 DUP3 DUP7 ADD PUSH2 0x73E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x85E DUP6 DUP3 DUP7 ADD PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x871 DUP2 PUSH2 0x9F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x882 DUP3 PUSH2 0x941 JUMP JUMPDEST PUSH2 0x88C DUP2 DUP6 PUSH2 0x94C JUMP JUMPDEST SWAP4 POP PUSH2 0x89C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x8A5 DUP2 PUSH2 0xAA3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B9 DUP2 PUSH2 0xA25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8C8 DUP2 PUSH2 0xA2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x868 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x903 DUP2 DUP5 PUSH2 0x877 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x93B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x968 DUP3 PUSH2 0xA25 JUMP JUMPDEST SWAP2 POP PUSH2 0x973 DUP4 PUSH2 0xA25 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A7 PUSH2 0xA6F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BE DUP3 PUSH2 0xA25 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C9 DUP4 PUSH2 0xA25 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9DC JUMPI PUSH2 0x9DB PUSH2 0xA6F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F2 DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA5A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA3F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABD DUP2 PUSH2 0x9E7 JUMP JUMPDEST DUP2 EQ PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAD4 DUP2 PUSH2 0xA25 JUMP JUMPDEST DUP2 EQ PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0x21 0xD8 GT CREATE 0xEA GT PUSH9 0x4282884C7431EEEA2C AND 0xC4 SAR JUMPI 0xDA 0xDC REVERT 0xF8 0xD2 EXTCODESIZE 0x2C 0xFB GASLIMIT 0xAB 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "120:1974:1:-:0;;;513:16;;;;;;;;;;120:1974;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_208": {
									"entryPoint": 1171,
									"id": 208,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_246": {
									"entryPoint": 1428,
									"id": 246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_517": {
									"entryPoint": 1832,
									"id": 517,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_110": {
									"entryPoint": 1134,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_266": {
									"entryPoint": 569,
									"id": 266,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_103": {
									"entryPoint": 1030,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_95": {
									"entryPoint": 1025,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_89": {
									"entryPoint": 512,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_532": {
									"entryPoint": 1406,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_92": {
									"entryPoint": 1054,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_98": {
									"entryPoint": 592,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_334": {
									"entryPoint": 598,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_286": {
									"entryPoint": 1111,
									"id": 286,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2620,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6407:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:4"
															},
															"nodeType": "YulIf",
															"src": "725:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:4",
														"type": ""
													}
												],
												"src": "632:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:4"
															},
															"nodeType": "YulIf",
															"src": "1222:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:4",
														"type": ""
													}
												],
												"src": "1112:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:4"
															},
															"nodeType": "YulIf",
															"src": "1830:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:4",
														"type": ""
													}
												],
												"src": "1737:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:4",
														"type": ""
													}
												],
												"src": "2217:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:4",
														"type": ""
													}
												],
												"src": "2332:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2784:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2807:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2789:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2789:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2755:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2762:3:4",
														"type": ""
													}
												],
												"src": "2702:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2887:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2904:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2925:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2909:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2909:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2897:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2897:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2897:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2875:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2882:3:4",
														"type": ""
													}
												],
												"src": "2826:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3036:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3046:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3058:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3069:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3054:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3046:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3120:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3133:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3144:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3129:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3082:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3008:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3020:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3031:4:4",
														"type": ""
													}
												],
												"src": "2944:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3278:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3288:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3300:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3311:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3288:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3346:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3331:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3331:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3354:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3350:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3324:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3452:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3461:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3388:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3250:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3262:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3273:4:4",
														"type": ""
													}
												],
												"src": "3160:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3577:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3587:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3610:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3595:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3587:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3667:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3680:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3691:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3676:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3676:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3623:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3623:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3549:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3561:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3572:4:4",
														"type": ""
													}
												],
												"src": "3479:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3801:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3811:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3823:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3834:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3811:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3887:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3900:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3911:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3847:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3847:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3847:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3773:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3785:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3796:4:4",
														"type": ""
													}
												],
												"src": "3707:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3967:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3977:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3993:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3987:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3960:6:4",
														"type": ""
													}
												],
												"src": "3927:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4067:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4078:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4094:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4088:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4050:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4060:6:4",
														"type": ""
													}
												],
												"src": "4008:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4209:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4226:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4231:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4219:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4219:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4219:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4247:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4266:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4271:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4262:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4262:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4247:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4181:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4186:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4197:11:4",
														"type": ""
													}
												],
												"src": "4113:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4332:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4342:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4365:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4347:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4342:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4376:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4399:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4381:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4376:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4541:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4460:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4467:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4535:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4463:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4463:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4457:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:81:4"
															},
															"nodeType": "YulIf",
															"src": "4454:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4571:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4582:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4585:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4578:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4571:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4319:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4322:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4328:3:4",
														"type": ""
													}
												],
												"src": "4288:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4644:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4654:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4677:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4659:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4654:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4688:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4711:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4693:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4693:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4688:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4735:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4737:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4737:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4737:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4729:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4732:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4726:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4726:8:4"
															},
															"nodeType": "YulIf",
															"src": "4723:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4767:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4779:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4782:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4767:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4630:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4633:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4639:4:4",
														"type": ""
													}
												],
												"src": "4599:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4851:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4880:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4862:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4862:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4851:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4823:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4833:7:4",
														"type": ""
													}
												],
												"src": "4796:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4940:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4950:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4975:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4968:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4968:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4961:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4961:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4950:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4922:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4932:7:4",
														"type": ""
													}
												],
												"src": "4898:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5039:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5049:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5064:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5071:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5060:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5049:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5021:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5031:7:4",
														"type": ""
													}
												],
												"src": "4994:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5171:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5181:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5192:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5181:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5153:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5163:7:4",
														"type": ""
													}
												],
												"src": "5126:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5252:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5262:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5277:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5284:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5273:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5262:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5234:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5244:7:4",
														"type": ""
													}
												],
												"src": "5209:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5350:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5360:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5369:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5364:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5429:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5454:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5459:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5450:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5450:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5473:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5478:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5469:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5469:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5463:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5463:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5443:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5443:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5443:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5390:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5387:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5387:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5401:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5403:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5412:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5415:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5408:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5408:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5403:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5383:3:4",
																"statements": []
															},
															"src": "5379:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5526:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5576:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5581:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5572:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5572:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5590:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5565:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5565:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5565:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5507:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5510:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5504:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5504:13:4"
															},
															"nodeType": "YulIf",
															"src": "5501:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5332:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5337:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5342:6:4",
														"type": ""
													}
												],
												"src": "5301:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5642:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5659:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5662:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5652:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5652:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5652:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5756:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5759:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5749:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5749:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5749:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5780:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5783:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5773:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5614:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5889:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5906:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5909:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5899:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5899:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5899:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5800:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6012:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6029:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6032:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6022:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6022:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6022:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5923:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6094:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6104:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6122:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6129:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6118:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6118:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6138:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6134:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6134:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6114:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6114:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6104:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6077:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6087:6:4",
														"type": ""
													}
												],
												"src": "6046:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6197:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6254:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6263:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6266:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6256:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6256:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6256:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6220:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6245:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6227:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6227:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6217:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6217:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6210:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6210:43:4"
															},
															"nodeType": "YulIf",
															"src": "6207:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6190:5:4",
														"type": ""
													}
												],
												"src": "6154:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6325:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6382:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6391:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6394:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6384:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6384:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6384:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6348:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6373:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6355:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6355:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6345:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6345:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6338:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:43:4"
															},
															"nodeType": "YulIf",
															"src": "6335:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6318:5:4",
														"type": ""
													}
												],
												"src": "6282:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906108e9565b60405180910390f35b6100d060048036038101906100cb9190610828565b610239565b6040516100dd91906108ce565b60405180910390f35b6100ee610250565b6040516100fb919061090b565b60405180910390f35b61011e600480360381019061011991906107d5565b610256565b60405161012b91906108ce565b60405180910390f35b61013c610401565b6040516101499190610926565b60405180910390f35b61016c60048036038101906101679190610768565b610406565b604051610179919061090b565b60405180910390f35b61018a61041e565b60405161019791906108e9565b60405180910390f35b6101ba60048036038101906101b59190610828565b610457565b6040516101c791906108ce565b60405180910390f35b6101ea60048036038101906101e59190610795565b61046e565b6040516101f7919061090b565b60405180910390f35b6040518060400160405280600c81526020017f566972747573776170205631000000000000000000000000000000000000000081525081565b6000610246338484610493565b6001905092915050565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146103eb5761036a82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461057e90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6103f6848484610594565b600190509392505050565b601281565b60016020528060005260406000206000915090505481565b6040518060400160405280600881526020017f56535741502d563100000000000000000000000000000000000000000000000081525081565b6000610464338484610594565b6001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610571919061090b565b60405180910390a3505050565b6000818361058c91906109b3565b905092915050565b6105e681600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461057e90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061067b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461072890919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161071b919061090b565b60405180910390a3505050565b60008183610736919061095d565b905092915050565b60008135905061074d81610ab4565b92915050565b60008135905061076281610acb565b92915050565b60006020828403121561077e5761077d610a9e565b5b600061078c8482850161073e565b91505092915050565b600080604083850312156107ac576107ab610a9e565b5b60006107ba8582860161073e565b92505060206107cb8582860161073e565b9150509250929050565b6000806000606084860312156107ee576107ed610a9e565b5b60006107fc8682870161073e565b935050602061080d8682870161073e565b925050604061081e86828701610753565b9150509250925092565b6000806040838503121561083f5761083e610a9e565b5b600061084d8582860161073e565b925050602061085e85828601610753565b9150509250929050565b610871816109f9565b82525050565b600061088282610941565b61088c818561094c565b935061089c818560208601610a3c565b6108a581610aa3565b840191505092915050565b6108b981610a25565b82525050565b6108c881610a2f565b82525050565b60006020820190506108e36000830184610868565b92915050565b600060208201905081810360008301526109038184610877565b905092915050565b600060208201905061092060008301846108b0565b92915050565b600060208201905061093b60008301846108bf565b92915050565b600081519050919050565b600082825260208201905092915050565b600061096882610a25565b915061097383610a25565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109a8576109a7610a6f565b5b828201905092915050565b60006109be82610a25565b91506109c983610a25565b9250828210156109dc576109db610a6f565b5b828203905092915050565b60006109f282610a05565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610a5a578082015181840152602081019050610a3f565b83811115610a69576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b610abd816109e7565b8114610ac857600080fd5b50565b610ad481610a25565b8114610adf57600080fd5b5056fea2646970667358221220f021d811f0ea11684282884c7431eeea2c16c41d57dadcfdf8d23b2cfb45abe764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x8E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5669727475737761702056310000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 CALLER DUP5 DUP5 PUSH2 0x493 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x3EB JUMPI PUSH2 0x36A DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x57E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x3F6 DUP5 DUP5 DUP5 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x56535741502D5631000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x464 CALLER DUP5 DUP5 PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x571 SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E6 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x57E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x67B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x728 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x95D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0xAB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x762 DUP2 PUSH2 0xACB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH2 0x77D PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78C DUP5 DUP3 DUP6 ADD PUSH2 0x73E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AB PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7BA DUP6 DUP3 DUP7 ADD PUSH2 0x73E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7CB DUP6 DUP3 DUP7 ADD PUSH2 0x73E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7EE JUMPI PUSH2 0x7ED PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7FC DUP7 DUP3 DUP8 ADD PUSH2 0x73E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x80D DUP7 DUP3 DUP8 ADD PUSH2 0x73E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x81E DUP7 DUP3 DUP8 ADD PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0xA9E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x84D DUP6 DUP3 DUP7 ADD PUSH2 0x73E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x85E DUP6 DUP3 DUP7 ADD PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x871 DUP2 PUSH2 0x9F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x882 DUP3 PUSH2 0x941 JUMP JUMPDEST PUSH2 0x88C DUP2 DUP6 PUSH2 0x94C JUMP JUMPDEST SWAP4 POP PUSH2 0x89C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x8A5 DUP2 PUSH2 0xAA3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B9 DUP2 PUSH2 0xA25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8C8 DUP2 PUSH2 0xA2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8E3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x868 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x903 DUP2 DUP5 PUSH2 0x877 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x93B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x968 DUP3 PUSH2 0xA25 JUMP JUMPDEST SWAP2 POP PUSH2 0x973 DUP4 PUSH2 0xA25 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x9A7 PUSH2 0xA6F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9BE DUP3 PUSH2 0xA25 JUMP JUMPDEST SWAP2 POP PUSH2 0x9C9 DUP4 PUSH2 0xA25 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9DC JUMPI PUSH2 0x9DB PUSH2 0xA6F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F2 DUP3 PUSH2 0xA05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA5A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA3F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xABD DUP2 PUSH2 0x9E7 JUMP JUMPDEST DUP2 EQ PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAD4 DUP2 PUSH2 0xA25 JUMP JUMPDEST DUP2 EQ PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE 0x21 0xD8 GT CREATE 0xEA GT PUSH9 0x4282884C7431EEEA2C AND 0xC4 SAR JUMPI 0xDA 0xDC REVERT 0xF8 0xD2 EXTCODESIZE 0x2C 0xFB GASLIMIT 0xAB 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "120:1974:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1415:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;333:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1732:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;292:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;374:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;244:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1578:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;433:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;194:44;;;;;;;;;;;;;;;;;;;:::o;1415:156::-;1491:4;1507:36;1516:10;1528:7;1537:5;1507:8;:36::i;:::-;1560:4;1553:11;;1415:156;;;;:::o;333:35::-;;;;:::o;1732:360::-;1852:4;1903:1;1872:9;:15;1882:4;1872:15;;;;;;;;;;;;;;;:27;1888:10;1872:27;;;;;;;;;;;;;;;;:32;1868:161;;1950:68;1999:5;1950:9;:15;1960:4;1950:15;;;;;;;;;;;;;;;:27;1966:10;1950:27;;;;;;;;;;;;;;;;:31;;:68;;;;:::i;:::-;1920:9;:15;1930:4;1920:15;;;;;;;;;;;;;;;:27;1936:10;1920:27;;;;;;;;;;;;;;;:98;;;;1868:161;2038:26;2048:4;2054:2;2058:5;2038:9;:26::i;:::-;2081:4;2074:11;;1732:360;;;;;:::o;292:35::-;325:2;292:35;:::o;374:53::-;;;;;;;;;;;;;;;;;:::o;244:42::-;;;;;;;;;;;;;;;;;;;:::o;1578:148::-;1650:4;1666:32;1676:10;1688:2;1692:5;1666:9;:32::i;:::-;1715:4;1708:11;;1578:148;;;;:::o;433:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;955:199::-;1096:5;1068:9;:16;1078:5;1068:16;;;;;;;;;;;;;;;:25;1085:7;1068:25;;;;;;;;;;;;;;;:33;;;;1132:7;1116:31;;1125:5;1116:31;;;1141:5;1116:31;;;;;;:::i;:::-;;;;;;;;955:199;;;:::o;3107:96:3:-;3165:7;3195:1;3191;:5;;;;:::i;:::-;3184:12;;3107:96;;;;:::o;1160:249:1:-;1286:26;1306:5;1286:9;:15;1296:4;1286:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1268:9;:15;1278:4;1268:15;;;;;;;;;;;;;;;:44;;;;1338:24;1356:5;1338:9;:13;1348:2;1338:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1322:9;:13;1332:2;1322:13;;;;;;;;;;;;;;;:40;;;;1392:2;1377:25;;1386:4;1377:25;;;1396:5;1377:25;;;;;;:::i;:::-;;;;;;;;1160:249;;;:::o;2740:96:3:-;2798:7;2828:1;2824;:5;;;;:::i;:::-;2817:12;;2740:96;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:118::-;2789:24;2807:5;2789:24;:::i;:::-;2784:3;2777:37;2702:118;;:::o;2826:112::-;2909:22;2925:5;2909:22;:::i;:::-;2904:3;2897:35;2826:112;;:::o;2944:210::-;3031:4;3069:2;3058:9;3054:18;3046:26;;3082:65;3144:1;3133:9;3129:17;3120:6;3082:65;:::i;:::-;2944:210;;;;:::o;3160:313::-;3273:4;3311:2;3300:9;3296:18;3288:26;;3360:9;3354:4;3350:20;3346:1;3335:9;3331:17;3324:47;3388:78;3461:4;3452:6;3388:78;:::i;:::-;3380:86;;3160:313;;;;:::o;3479:222::-;3572:4;3610:2;3599:9;3595:18;3587:26;;3623:71;3691:1;3680:9;3676:17;3667:6;3623:71;:::i;:::-;3479:222;;;;:::o;3707:214::-;3796:4;3834:2;3823:9;3819:18;3811:26;;3847:67;3911:1;3900:9;3896:17;3887:6;3847:67;:::i;:::-;3707:214;;;;:::o;4008:99::-;4060:6;4094:5;4088:12;4078:22;;4008:99;;;:::o;4113:169::-;4197:11;4231:6;4226:3;4219:19;4271:4;4266:3;4262:14;4247:29;;4113:169;;;;:::o;4288:305::-;4328:3;4347:20;4365:1;4347:20;:::i;:::-;4342:25;;4381:20;4399:1;4381:20;:::i;:::-;4376:25;;4535:1;4467:66;4463:74;4460:1;4457:81;4454:107;;;4541:18;;:::i;:::-;4454:107;4585:1;4582;4578:9;4571:16;;4288:305;;;;:::o;4599:191::-;4639:4;4659:20;4677:1;4659:20;:::i;:::-;4654:25;;4693:20;4711:1;4693:20;:::i;:::-;4688:25;;4732:1;4729;4726:8;4723:34;;;4737:18;;:::i;:::-;4723:34;4782:1;4779;4775:9;4767:17;;4599:191;;;;:::o;4796:96::-;4833:7;4862:24;4880:5;4862:24;:::i;:::-;4851:35;;4796:96;;;:::o;4898:90::-;4932:7;4975:5;4968:13;4961:21;4950:32;;4898:90;;;:::o;4994:126::-;5031:7;5071:42;5064:5;5060:54;5049:65;;4994:126;;;:::o;5126:77::-;5163:7;5192:5;5181:16;;5126:77;;;:::o;5209:86::-;5244:7;5284:4;5277:5;5273:16;5262:27;;5209:86;;;:::o;5301:307::-;5369:1;5379:113;5393:6;5390:1;5387:13;5379:113;;;5478:1;5473:3;5469:11;5463:18;5459:1;5454:3;5450:11;5443:39;5415:2;5412:1;5408:10;5403:15;;5379:113;;;5510:6;5507:1;5504:13;5501:101;;;5590:1;5581:6;5576:3;5572:16;5565:27;5501:101;5350:258;5301:307;;;:::o;5614:180::-;5662:77;5659:1;5652:88;5759:4;5756:1;5749:15;5783:4;5780:1;5773:15;5923:117;6032:1;6029;6022:12;6046:102;6087:6;6138:2;6134:7;6129:2;6122:5;6118:14;6114:28;6104:38;;6046:102;;;:::o;6154:122::-;6227:24;6245:5;6227:24;:::i;:::-;6220:5;6217:35;6207:63;;6266:1;6263;6256:12;6207:63;6154:122;:::o;6282:::-;6355:24;6373:5;6355:24;:::i;:::-;6348:5;6345:35;6335:63;;6394:1;6391;6384:12;6335:63;6282:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "568000",
								"executionCost": "600",
								"totalCost": "568600"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2836",
								"decimals()": "335",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2474",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 2094,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 2094,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 2094,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 513,
									"end": 529,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 513,
									"end": 529,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 513,
									"end": 529,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 513,
									"end": 529,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 513,
									"end": 529,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 513,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 529,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 513,
									"end": 529,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 513,
									"end": 529,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 513,
									"end": 529,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 513,
									"end": 529,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 120,
									"end": 2094,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 2094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 120,
									"end": 2094,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 2094,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 2094,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 120,
									"end": 2094,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 2094,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f021d811f0ea11684282884c7431eeea2c16c41d57dadcfdf8d23b2cfb45abe764736f6c63430008070033",
									".code": [
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 2094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "PUSH",
											"source": 1,
											"value": "5669727475737761702056310000000000000000000000000000000000000000"
										},
										{
											"begin": 194,
											"end": 238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 194,
											"end": 238,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1516,
											"end": 1526,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1535,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1507,
											"end": 1543,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1507,
											"end": 1543,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1507,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1564,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1553,
											"end": 1564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1571,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 333,
											"end": 368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 333,
											"end": 368,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1886,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1898,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1899,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1904,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1868,
											"end": 2029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1959,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1964,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1965,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1976,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1977,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2018,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1950,
											"end": 2018,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2018,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1950,
											"end": 2018,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1950,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1935,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1946,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1947,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2018,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1868,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2038,
											"end": 2064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2038,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2038,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2085,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2074,
											"end": 2085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 2092,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 325,
											"end": 327,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 292,
											"end": 327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 292,
											"end": 327,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 374,
											"end": 427,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "56535741502D5631000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 244,
											"end": 286,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1666,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1676,
											"end": 1686,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1666,
											"end": 1698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1666,
											"end": 1698,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1666,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1719,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1708,
											"end": 1719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1726,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 433,
											"end": 506,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 955,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 955,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1083,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1093,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1101,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1141,
											"end": 1146,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1147,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1160,
											"end": 1409,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1160,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1306,
											"end": 1311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1300,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1301,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1286,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1283,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1312,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1350,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1338,
											"end": 1355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1335,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1362,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1392,
											"end": 1394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1390,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1396,
											"end": 1401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2798,
											"end": 2805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2925,
											"end": 2930,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2907,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3071,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3144,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3120,
											"end": 3126,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3313,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3370,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3461,
											"end": 3465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3458,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3612,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3673,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3911,
											"end": 3912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3887,
											"end": 3893,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4088,
											"end": 4100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4197,
											"end": 4208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4237,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4238,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4275,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4266,
											"end": 4269,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4262,
											"end": 4276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4342,
											"end": 4367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4342,
											"end": 4367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4399,
											"end": 4400,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4376,
											"end": 4401,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4376,
											"end": 4401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4463,
											"end": 4537,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4457,
											"end": 4538,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4582,
											"end": 4583,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4571,
											"end": 4587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4571,
											"end": 4587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4677,
											"end": 4678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4711,
											"end": 4712,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4713,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4732,
											"end": 4733,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4730,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4734,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4782,
											"end": 4783,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4880,
											"end": 4885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4851,
											"end": 4886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4851,
											"end": 4886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4981,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4961,
											"end": 4982,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5064,
											"end": 5069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5060,
											"end": 5114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5244,
											"end": 5251,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5277,
											"end": 5282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5289,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5400,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5478,
											"end": 5479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5476,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5480,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5459,
											"end": 5460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5450,
											"end": 5461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5443,
											"end": 5482,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5408,
											"end": 5418,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5507,
											"end": 5508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5517,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5587,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5576,
											"end": 5579,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5572,
											"end": 5588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5350,
											"end": 5608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5614,
											"end": 5794,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5614,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5739,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5659,
											"end": 5660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5740,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5759,
											"end": 5763,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5749,
											"end": 5764,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5923,
											"end": 6040,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5923,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6030,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6148,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 6046,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6087,
											"end": 6093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6138,
											"end": 6140,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6134,
											"end": 6141,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6129,
											"end": 6131,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6122,
											"end": 6127,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6118,
											"end": 6132,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6114,
											"end": 6142,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6104,
											"end": 6142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6104,
											"end": 6142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6148,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6148,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6154,
											"end": 6276,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 6154,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6245,
											"end": 6250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6227,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6227,
											"end": 6251,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6227,
											"end": 6251,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 6227,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6220,
											"end": 6225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6252,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6207,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6207,
											"end": 6270,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6264,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6256,
											"end": 6268,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6207,
											"end": 6270,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6207,
											"end": 6270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6154,
											"end": 6276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6154,
											"end": 6276,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6282,
											"end": 6404,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6282,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6355,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6373,
											"end": 6378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6355,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6355,
											"end": 6379,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6355,
											"end": 6379,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6355,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6345,
											"end": 6380,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6335,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6335,
											"end": 6398,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6391,
											"end": 6392,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6384,
											"end": 6396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6335,
											"end": 6398,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6335,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6404,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"allowance\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"return\":\"The current allowance granted by `owner` to `spender`\",\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"balanceOf\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"return\":\"The number of tokens held by the account\",\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/vSwapERC20.sol\":\"vSwapERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x9c68bfd77adffd9844d42df6f11148a215b3498b97406b094a55fbaaa541b0d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f8bbe55530a7dcf1242e1b2c786dcb68b3634a9b6de1a7d4dad8dd93e455ba\",\"dweb:/ipfs/QmR42LuC14UJuRLTh83S3rq7E59pJ2ZTm7MowcYrY2WmKb\"]},\"contracts/ERC20/vSwapERC20.sol\":{\"keccak256\":\"0xbc75671e94f73240106450cf6a0c9aadf1b0f9648760f6538b9398b8c37ff6f8\",\"urls\":[\"bzz-raw://d702ad7fff619f040c30b76b09cc5336121aac63a2f301d71ddb3dc0736c4b8e\",\"dweb:/ipfs/QmccSuddBFGtnNsfgvSYNZhpBHuVBE8vSm2eZASGuDJVFH\"]},\"contracts/interfaces/IvSwapERC20.sol\":{\"keccak256\":\"0xb86e118569a97d7abc96df6f6b44cecbc9ca83f11688d31da90f611466892dba\",\"urls\":[\"bzz-raw://0b22e7442ff04dc1bc8d5a0c5362b30acc20e48f5db435f70808bfac4150ab55\",\"dweb:/ipfs/QmNvWTSDsxH933P4Y7WyDsiDbGQrgTZxYjgzgqgt7dsDc8\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6eb8d3261b64ae6965528bfc2a38aad6f104deb7417751137dee1ecca372ad41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9912fafaa104512e52fb83a0a1d4a9f2f04addf06d0d26b4aa6ae35a4291a8af\",\"dweb:/ipfs/QmUKP5UDCk2yjUb23pohxyoF63UwM6dPrn7RTS2xW6bdoV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 98,
								"contract": "contracts/ERC20/vSwapERC20.sol:vSwapERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 103,
								"contract": "contracts/ERC20/vSwapERC20.sol:vSwapERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 110,
								"contract": "contracts/ERC20/vSwapERC20.sol:vSwapERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IvSwapERC20.sol": {
				"IvSwapERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IvSwapERC20.sol\":\"IvSwapERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x9c68bfd77adffd9844d42df6f11148a215b3498b97406b094a55fbaaa541b0d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f8bbe55530a7dcf1242e1b2c786dcb68b3634a9b6de1a7d4dad8dd93e455ba\",\"dweb:/ipfs/QmR42LuC14UJuRLTh83S3rq7E59pJ2ZTm7MowcYrY2WmKb\"]},\"contracts/interfaces/IvSwapERC20.sol\":{\"keccak256\":\"0xb86e118569a97d7abc96df6f6b44cecbc9ca83f11688d31da90f611466892dba\",\"urls\":[\"bzz-raw://0b22e7442ff04dc1bc8d5a0c5362b30acc20e48f5db435f70808bfac4150ab55\",\"dweb:/ipfs/QmNvWTSDsxH933P4Y7WyDsiDbGQrgTZxYjgzgqgt7dsDc8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":467:6767  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":467:6767  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202d56f358c245f5f74f908330580e1f5834eca17e527deb5c2dcc50d748f5677664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d56f358c245f5f74f908330580e1f5834eca17e527deb5c2dcc50d748f5677664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D JUMP RETURN PC 0xC2 GASLIMIT CREATE2 0xF7 0x4F SWAP1 DUP4 ADDRESS PC 0xE 0x1F PC CALLVALUE 0xEC LOG1 PUSH31 0x527DEB5C2DCC50D748F5677664736F6C634300080700330000000000000000 ",
							"sourceMap": "467:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d56f358c245f5f74f908330580e1f5834eca17e527deb5c2dcc50d748f5677664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D JUMP RETURN PC 0xC2 GASLIMIT CREATE2 0xF7 0x4F SWAP1 DUP4 ADDRESS PC 0xE 0x1F PC CALLVALUE 0xEC LOG1 PUSH31 0x527DEB5C2DCC50D748F5677664736F6C634300080700330000000000000000 ",
							"sourceMap": "467:6300:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d56f358c245f5f74f908330580e1f5834eca17e527deb5c2dcc50d748f5677664736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6eb8d3261b64ae6965528bfc2a38aad6f104deb7417751137dee1ecca372ad41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9912fafaa104512e52fb83a0a1d4a9f2f04addf06d0d26b4aa6ae35a4291a8af\",\"dweb:/ipfs/QmUKP5UDCk2yjUb23pohxyoF63UwM6dPrn7RTS2xW6bdoV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ERC20/vSwapERC20.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ERC20/vSwapERC20.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IvSwapERC20.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IvSwapERC20.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "197:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:0"
									},
									"scope": 77,
									"src": "281:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "342:201:0",
										"text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "607:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:9:0"
									},
									"scope": 77,
									"src": "548:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "622:333:0",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "969:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "986:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "978:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1005:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "997:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1047:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:6:0"
									},
									"scope": 77,
									"src": "960:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1059:250:0",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1323:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1341:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1333:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1356:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1348:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1412:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:9:0"
									},
									"scope": 77,
									"src": "1314:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1427:343:0",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1784:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1800:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1792:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1817:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1809:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1791:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1843:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1842:6:0"
									},
									"scope": 77,
									"src": "1775:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1855:371:0",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2240:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2270:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2262:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2294:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2286:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2321:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2313:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2352:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2351:6:0"
									},
									"scope": 77,
									"src": "2231:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2364:369:0",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2744:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2753:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2791:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2775:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:57:0"
									},
									"src": "2738:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2816:321:0",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "3148:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3182:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3166:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3213:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3197:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3238:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3230:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:93:0"
									},
									"src": "3142:108:0"
								}
							],
							"scope": 78,
							"src": "187:3065:0",
							"usedErrors": []
						}
					],
					"src": "91:3162:0"
				},
				"id": 0
			},
			"contracts/ERC20/vSwapERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20/vSwapERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IvSwapERC20": [
							341
						],
						"SafeMath": [
							653
						],
						"vSwapERC20": [
							335
						]
					},
					"id": 336,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "contracts/interfaces/IvSwapERC20.sol",
							"file": "../interfaces/IvSwapERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 342,
							"src": "26:39:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 336,
							"sourceUnit": 654,
							"src": "66:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 82,
										"name": "IvSwapERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 341,
										"src": "143:11:1"
									},
									"id": 83,
									"nodeType": "InheritanceSpecifier",
									"src": "143:11:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335,
								341,
								77
							],
							"name": "vSwapERC20",
							"nameLocation": "129:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 86,
									"libraryName": {
										"id": 84,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 653,
										"src": "167:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "161:27:1",
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "180:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 89,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "217:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "194:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 87,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "194:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "566972747573776170205631",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "224:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_3e08cac38971004006ca67b9967a6ce529e5927d7952ac2b0629340cdf063500",
											"typeString": "literal_string \"Virtuswap V1\""
										},
										"value": "Virtuswap V1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 92,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "267:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "244:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 90,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "244:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "56535741502d5631",
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "276:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f69f5cffb82c48f1d8b76c6c18fc7ab34af0c0399c57acb0dd868be81410a6b2",
											"typeString": "literal_string \"VSWAP-V1\""
										},
										"value": "VSWAP-V1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 95,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "314:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 335,
									"src": "292:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 93,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "292:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "325:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 98,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "357:11:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 97,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "341:8:1"
									},
									"scope": 335,
									"src": "333:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "333:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"constant": false,
									"functionSelector": "70a08231",
									"id": 103,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "418:9:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 102,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "402:8:1"
									},
									"scope": 335,
									"src": "374:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 101,
										"keyType": {
											"id": 99,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "382:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "374:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 100,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "393:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										36
									],
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 110,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "497:9:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "481:8:1"
									},
									"scope": 335,
									"src": "433:73:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 108,
										"keyType": {
											"id": 104,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "441:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "433:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 107,
											"keyType": {
												"id": 105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "460:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "452:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 106,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "471:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "527:2:1",
										"statements": []
									},
									"id": 114,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "527:0:1"
									},
									"scope": 335,
									"src": "513:16:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "586:149:1",
										"statements": [
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "596:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 124,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "626:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 122,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "610:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 517,
															"src": "610:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "610:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "596:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "596:36:1"
											},
											{
												"expression": {
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 128,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "642:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 130,
														"indexExpression": {
															"id": 129,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "652:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "642:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 135,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "676:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 131,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "658:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 133,
																"indexExpression": {
																	"id": 132,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "668:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "658:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 517,
															"src": "658:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "658:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "642:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "642:40:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "714:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "706:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 140,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "706:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "706:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "718:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 145,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "722:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 139,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "697:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "697:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 147,
												"nodeType": "EmitStatement",
												"src": "692:36:1"
											}
										]
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "544:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "558:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "550:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "570:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "562:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:27:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:1"
									},
									"scope": 335,
									"src": "535:200:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "794:155:1",
										"statements": [
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 156,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "804:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 158,
														"indexExpression": {
															"id": 157,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "814:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "804:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 163,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "842:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 159,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "822:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 161,
																"indexExpression": {
																	"id": 160,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 151,
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "822:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 532,
															"src": "822:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "822:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "804:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "804:44:1"
											},
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 167,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "858:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 170,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "888:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 168,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "872:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 532,
															"src": "872:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "872:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "858:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "858:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 175,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "918:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "932:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "924:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "924:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "924:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 180,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "936:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 174,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "909:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "EmitStatement",
												"src": "904:38:1"
											}
										]
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "750:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "764:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "756:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "778:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "770:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:29:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:0:1"
									},
									"scope": 335,
									"src": "741:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1058:96:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 193,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1068:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 196,
															"indexExpression": {
																"id": 194,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1078:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1068:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 197,
														"indexExpression": {
															"id": 195,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "1085:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1068:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1096:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1068:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1068:33:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 202,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1125:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 203,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "1132:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 204,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1141:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 201,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1116:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "EmitStatement",
												"src": "1111:36:1"
											}
										]
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "964:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "990:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "982:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1013:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1005:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1005:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1038:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1030:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:77:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1058:0:1"
									},
									"scope": 335,
									"src": "955:199:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1258:151:1",
										"statements": [
											{
												"expression": {
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 217,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1268:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 219,
														"indexExpression": {
															"id": 218,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "1278:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1268:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 224,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "1306:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 220,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "1286:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 222,
																"indexExpression": {
																	"id": 221,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1296:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1286:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 532,
															"src": "1286:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1286:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1268:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "1268:44:1"
											},
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 228,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1322:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 230,
														"indexExpression": {
															"id": 229,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "1332:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1322:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 235,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "1356:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 231,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "1338:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 233,
																"indexExpression": {
																	"id": 232,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "1348:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1338:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 517,
															"src": "1338:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1338:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1322:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "1322:40:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 240,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "1386:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 241,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "1392:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 242,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "1396:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 239,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "1377:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1377:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "EmitStatement",
												"src": "1372:30:1"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "1169:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1196:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1188:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1218:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1210:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1238:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1230:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:71:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1258:0:1"
									},
									"scope": 335,
									"src": "1160:249:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "1497:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1516:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1516:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 259,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "1528:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 260,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "1537:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 256,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1507:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1507:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "1507:36:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1560:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 255,
												"id": 264,
												"nodeType": "Return",
												"src": "1553:11:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1424:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 252,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1473:8:1"
									},
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1440:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1432:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1457:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1449:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:32:1"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "1491:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1491:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:6:1"
									},
									"scope": 335,
									"src": "1415:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "1656:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 277,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1676:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1676:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "1688:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "1692:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 276,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "1666:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1666:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1666:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1715:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 275,
												"id": 284,
												"nodeType": "Return",
												"src": "1708:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1587:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1632:8:1"
									},
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1604:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1596:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1616:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1608:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:27:1"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1650:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1650:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:6:1"
									},
									"scope": 335,
									"src": "1578:148:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "1858:234:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 298,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1872:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 300,
															"indexExpression": {
																"id": 299,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "1882:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1872:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 303,
														"indexExpression": {
															"expression": {
																"id": 301,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1888:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1888:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1872:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1903:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1872:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "1868:161:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "1906:123:1",
													"statements": [
														{
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 306,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 110,
																			"src": "1920:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 310,
																		"indexExpression": {
																			"id": 307,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "1930:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1920:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 311,
																	"indexExpression": {
																		"expression": {
																			"id": 308,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1936:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1936:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1920:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 319,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "1999:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 312,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 110,
																					"src": "1950:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 314,
																				"indexExpression": {
																					"id": 313,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 288,
																					"src": "1960:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1950:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 317,
																			"indexExpression": {
																				"expression": {
																					"id": 315,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1966:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1966:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1950:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 532,
																		"src": "1950:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1950:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1920:98:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 322,
															"nodeType": "ExpressionStatement",
															"src": "1920:98:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "2048:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "2054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "2058:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2038:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "2038:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2081:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 297,
												"id": 332,
												"nodeType": "Return",
												"src": "2074:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1741:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 294,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1834:8:1"
									},
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1771:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1763:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1793:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1785:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:71:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1852:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:6:1"
									},
									"scope": 335,
									"src": "1732:360:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 336,
							"src": "120:1974:1",
							"usedErrors": []
						}
					],
					"src": "0:2095:1"
				},
				"id": 1
			},
			"contracts/interfaces/IvSwapERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IvSwapERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IvSwapERC20": [
							341
						]
					},
					"id": 342,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "contracts/ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 78,
							"src": "25:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 339,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "80:6:2"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "80:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 341,
							"linearizedBaseContracts": [
								341,
								77
							],
							"name": "IvSwapERC20",
							"nameLocation": "65:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 342,
							"src": "55:34:2",
							"usedErrors": []
						}
					],
					"src": "0:90:2"
				},
				"id": 2
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							653
						]
					},
					"id": 654,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 344,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 653,
							"linearizedBaseContracts": [
								653
							],
							"name": "SafeMath",
							"nameLocation": "475:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "702:140:3",
										"statements": [
											{
												"id": 374,
												"nodeType": "UncheckedBlock",
												"src": "712:124:3",
												"statements": [
													{
														"assignments": [
															357
														],
														"declarations": [
															{
																"constant": false,
																"id": 357,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 374,
																"src": "736:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 356,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 361,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 358,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "748:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 359,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "752:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "771:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 363,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "775:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 369,
														"nodeType": "IfStatement",
														"src": "767:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 355,
															"id": 368,
															"nodeType": "Return",
															"src": "778:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 371,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "823:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 372,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 355,
														"id": 373,
														"nodeType": "Return",
														"src": "809:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "642:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "653:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:3"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "687:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:3"
									},
									"scope": 653,
									"src": "626:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "1063:113:3",
										"statements": [
											{
												"id": 402,
												"nodeType": "UncheckedBlock",
												"src": "1073:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 388,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "1101:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 389,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "1105:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1101:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 395,
														"nodeType": "IfStatement",
														"src": "1097:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1116:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1123:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1115:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 387,
															"id": 394,
															"nodeType": "Return",
															"src": "1108:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1147:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 397,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "1153:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 398,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "1157:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1153:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 400,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1146:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 387,
														"id": 401,
														"nodeType": "Return",
														"src": "1139:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "848:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "996:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1011:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1003:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1022:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1014:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:22:3"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1048:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1048:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1054:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:15:3"
									},
									"scope": 653,
									"src": "987:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1400:417:3",
										"statements": [
											{
												"id": 444,
												"nodeType": "UncheckedBlock",
												"src": "1410:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 416,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "1668:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1673:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1668:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 423,
														"nodeType": "IfStatement",
														"src": "1664:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1684:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1690:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1683:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 415,
															"id": 422,
															"nodeType": "Return",
															"src": "1676:16:3"
														}
													},
													{
														"assignments": [
															425
														],
														"declarations": [
															{
																"constant": false,
																"id": 425,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1714:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 444,
																"src": "1706:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 424,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1706:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 429,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "1718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 427,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "1722:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1718:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1706:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 430,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "1741:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 431,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "1745:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1741:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 433,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "1750:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1741:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 439,
														"nodeType": "IfStatement",
														"src": "1737:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1761:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1768:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 437,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1760:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 415,
															"id": 438,
															"nodeType": "Return",
															"src": "1753:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1792:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 441,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "1798:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 442,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1791:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 415,
														"id": 443,
														"nodeType": "Return",
														"src": "1784:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1182:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1333:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1348:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1340:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1359:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1351:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:22:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1385:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1385:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1391:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:15:3"
									},
									"scope": 653,
									"src": "1324:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2042:114:3",
										"statements": [
											{
												"id": 472,
												"nodeType": "UncheckedBlock",
												"src": "2052:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 458,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "2080:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2085:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2080:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 465,
														"nodeType": "IfStatement",
														"src": "2076:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2096:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2103:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 463,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2095:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 457,
															"id": 464,
															"nodeType": "Return",
															"src": "2088:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2127:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 467,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "2133:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 468,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "2137:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2133:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 470,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2126:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 457,
														"id": 471,
														"nodeType": "Return",
														"src": "2119:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1823:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1975:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1990:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "1982:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2001:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "1993:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:22:3"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2027:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2033:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:15:3"
									},
									"scope": 653,
									"src": "1966:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "2391:114:3",
										"statements": [
											{
												"id": 500,
												"nodeType": "UncheckedBlock",
												"src": "2401:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "2429:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2434:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2429:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 493,
														"nodeType": "IfStatement",
														"src": "2425:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2445:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2452:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 491,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2444:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 485,
															"id": 492,
															"nodeType": "Return",
															"src": "2437:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2476:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 495,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "2482:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 496,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2486:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2482:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 498,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2475:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 485,
														"id": 499,
														"nodeType": "Return",
														"src": "2468:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "2162:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2324:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2339:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2331:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2350:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2342:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2330:22:3"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2382:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:15:3"
									},
									"scope": 653,
									"src": "2315:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "2807:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 512,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "2824:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 513,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "2828:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2824:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 511,
												"id": 515,
												"nodeType": "Return",
												"src": "2817:12:3"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2511:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2749:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2761:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2753:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2772:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2764:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:22:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2798:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:9:3"
									},
									"scope": 653,
									"src": "2740:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "3174:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3191:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 528,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3195:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3191:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 530,
												"nodeType": "Return",
												"src": "3184:12:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "2842:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3116:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3128:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3120:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3139:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3131:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:22:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "3165:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:9:3"
									},
									"scope": 653,
									"src": "3107:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "3517:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 542,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "3534:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 543,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "3538:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3534:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 545,
												"nodeType": "Return",
												"src": "3527:12:3"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3209:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3459:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3471:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3463:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3482:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3474:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3462:22:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3508:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:9:3"
									},
									"scope": 653,
									"src": "3450:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "3902:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "3919:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 558,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "3923:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3919:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 556,
												"id": 560,
												"nodeType": "Return",
												"src": "3912:12:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "3552:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3844:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3856:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "3848:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3867:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "3859:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3859:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:22:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "3893:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:9:3"
									},
									"scope": 653,
									"src": "3835:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "4451:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "4468:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 573,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "4472:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4468:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 571,
												"id": 575,
												"nodeType": "Return",
												"src": "4461:12:3"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "3937:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4393:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4405:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4397:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4416:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4408:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4396:22:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4442:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4441:9:3"
									},
									"scope": 653,
									"src": "4384:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5069:106:3",
										"statements": [
											{
												"id": 600,
												"nodeType": "UncheckedBlock",
												"src": "5079:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 590,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "5111:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 591,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "5116:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5111:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 593,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "5119:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 589,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5103:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5103:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 595,
														"nodeType": "ExpressionStatement",
														"src": "5103:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "5153:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 597,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "5157:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5153:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 588,
														"id": 599,
														"nodeType": "Return",
														"src": "5146:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "4486:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4953:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4974:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "4966:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4966:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4993:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "4985:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5018:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5004:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5004:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:80:3"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5060:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5059:9:3"
									},
									"scope": 653,
									"src": "4944:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "5784:105:3",
										"statements": [
											{
												"id": 625,
												"nodeType": "UncheckedBlock",
												"src": "5794:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 615,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "5826:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5830:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5826:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 618,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "5833:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 614,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5818:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5818:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 620,
														"nodeType": "ExpressionStatement",
														"src": "5818:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 621,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "5867:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 622,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "5871:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5867:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 613,
														"id": 624,
														"nodeType": "Return",
														"src": "5860:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "5181:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5668:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5689:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5681:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5708:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5700:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5700:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5733:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5719:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 608,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5719:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5671:80:3"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "5775:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5774:9:3"
									},
									"scope": 653,
									"src": "5659:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "6660:105:3",
										"statements": [
											{
												"id": 650,
												"nodeType": "UncheckedBlock",
												"src": "6670:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 640,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "6702:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6706:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6702:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 643,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6709:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 639,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6694:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6694:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 645,
														"nodeType": "ExpressionStatement",
														"src": "6694:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "6743:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 647,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "6747:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 638,
														"id": 649,
														"nodeType": "Return",
														"src": "6736:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "5895:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6544:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6565:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6557:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6557:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6584:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6576:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6609:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6595:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 633,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6595:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6547:80:3"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "6651:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6651:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6650:9:3"
									},
									"scope": 653,
									"src": "6535:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 654,
							"src": "467:6300:3",
							"usedErrors": []
						}
					],
					"src": "92:6675:3"
				},
				"id": 3
			}
		}
	}
}