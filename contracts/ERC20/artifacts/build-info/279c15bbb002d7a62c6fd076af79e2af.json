{
	"id": "279c15bbb002d7a62c6fd076af79e2af",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20/vSwapERC20TEST.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"../interfaces/IvSwapERC20.sol\";\nimport \"../libraries/SafeMath.sol\";\n\n//FOR TEST ONLY\ncontract vSwapERC20TEST is IvSwapERC20 {\n    using SafeMath for uint256;\n\n    string public name;\n    string public symbol;\n    uint8 public constant decimals = 18;\n    uint256 override public totalSupply;\n    mapping(address => uint256) override public balanceOf;\n    mapping(address => mapping(address => uint256)) override public allowance;\n\n    constructor(\n        string memory _name,\n        string memory _sym,\n        uint256 _totalSupply\n    ) {\n        name = _name;\n        symbol = _sym;\n        _mint(msg.sender, _totalSupply);\n    }\n\n    function _mint(address to, uint256 value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint256 value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(\n        address owner,\n        address spender,\n        uint256 value\n    ) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(\n        address from,\n        address to,\n        uint256 value\n    ) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint256 value) external override returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint256 value) external override returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external override returns (bool) {\n        if (allowance[from][msg.sender] != 0) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(\n                value\n            );\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n}\n"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}"
			},
			"contracts/interfaces/IvSwapERC20.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"../ERC20/IERC20.sol\";\ninterface IvSwapERC20 is IERC20 {}\n"
			},
			"contracts/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.3.2 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /// @notice Returns the balance of a token\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\n    /// @return The number of tokens held by the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\n    /// @param recipient The account that will receive the amount transferred\n    /// @param amount The number of tokens to send from the sender to the recipient\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    /// @notice Returns the current allowance given to a spender by an owner\n    /// @param owner The account of the token owner\n    /// @param spender The account of the token spender\n    /// @return The current allowance granted by `owner` to `spender`\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\n    /// @param amount The amount of tokens allowed to be used by `spender`\n    /// @return Returns true for a successful approval, false for unsuccessful\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n    /// @param sender The account from which the transfer will be initiated\n    /// @param recipient The recipient of the transfer\n    /// @param amount The amount of the transfer\n    /// @return Returns true for a successful transfer, false for unsuccessful\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\n    /// @param value The amount of tokens that were transferred\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n    /// @param owner The account that approved spending of its tokens\n    /// @param spender The account for which the spending allowance was modified\n    /// @param value The new allowance from the owner to the spender\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x9c68bfd77adffd9844d42df6f11148a215b3498b97406b094a55fbaaa541b0d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f8bbe55530a7dcf1242e1b2c786dcb68b3634a9b6de1a7d4dad8dd93e455ba\",\"dweb:/ipfs/QmR42LuC14UJuRLTh83S3rq7E59pJ2ZTm7MowcYrY2WmKb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/ERC20/vSwapERC20TEST.sol": {
				"vSwapERC20TEST": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_sym",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"allowance": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"return": "The current allowance granted by `owner` to `spender`",
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"balanceOf": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"return": "The number of tokens held by the account",
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"totalSupply": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20/vSwapERC20TEST.sol\":118:2229  contract vSwapERC20TEST is IvSwapERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":467:665  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":589:594  _name */\n  dup3\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":582:586  name */\n  0x00\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":582:594  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":613:617  _sym */\n  dup2\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":604:610  symbol */\n  0x01\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":604:617  symbol = _sym */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":627:658  _mint(msg.sender, _totalSupply) */\n  tag_9\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":633:643  msg.sender */\n  caller\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":645:657  _totalSupply */\n  dup3\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":627:632  _mint */\n  shl(0x20, tag_10)\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":627:658  _mint(msg.sender, _totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":467:665  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":118:2229  contract vSwapERC20TEST is IvSwapERC20 {... */\n  jump(tag_11)\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":671:871  function _mint(address to, uint256 value) internal {... */\ntag_10:\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":746:768  totalSupply.add(value) */\n  tag_13\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":762:767  value */\n  dup2\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":746:757  totalSupply */\n  sload(0x02)\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":746:761  totalSupply.add */\n  or(tag_0_53, shl(0x20, tag_14))\n  swap1\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":746:768  totalSupply.add(value) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":732:743  totalSupply */\n  0x02\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":732:768  totalSupply = totalSupply.add(value) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":794:818  balanceOf[to].add(value) */\n  tag_15\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":812:817  value */\n  dup2\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":794:803  balanceOf */\n  0x03\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":794:807  balanceOf[to] */\n  0x00\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":804:806  to */\n  dup6\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":794:807  balanceOf[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":794:811  balanceOf[to].add */\n  or(tag_0_53, shl(0x20, tag_14))\n  swap1\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":794:818  balanceOf[to].add(value) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":778:787  balanceOf */\n  0x03\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":778:791  balanceOf[to] */\n  0x00\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":788:790  to */\n  dup5\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":778:791  balanceOf[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":778:818  balanceOf[to] = balanceOf[to].add(value) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":854:856  to */\n  dup2\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":833:864  Transfer(address(0), to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":850:851  0 */\n  0x00\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":833:864  Transfer(address(0), to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":858:863  value */\n  dup4\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":833:864  Transfer(address(0), to, value) */\n  mload(0x40)\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":671:871  function _mint(address to, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/libraries/SafeMath.sol\":2740:2836  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_14:\n    /* \"contracts/libraries/SafeMath.sol\":2798:2805  uint256 */\n  0x00\n    /* \"contracts/libraries/SafeMath.sol\":2828:2829  b */\n  dup2\n    /* \"contracts/libraries/SafeMath.sol\":2824:2825  a */\n  dup4\n    /* \"contracts/libraries/SafeMath.sol\":2824:2829  a + b */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/libraries/SafeMath.sol\":2817:2829  return a + b */\n  swap1\n  pop\n    /* \"contracts/libraries/SafeMath.sol\":2740:2836  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":118:2229  contract vSwapERC20TEST is IvSwapERC20 {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_24\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  0x1f\n  lt\n  tag_25\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_25:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_26:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_26)\ntag_27:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  pop\n  swap1\n  jump\t// out\ntag_29:\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_31\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_30)\ntag_31:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_33:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_35\n    /* \"#utility.yul\":137:186   */\n  tag_36\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":121:187   */\n  tag_38\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_40\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":262:374   */\ntag_39:\n    /* \"#utility.yul\":383:422   */\n  tag_42\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_44:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_47\n  tag_48\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":531:653   */\ntag_46:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_49\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_33\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:952   */\ntag_50:\n    /* \"#utility.yul\":866:871   */\n  0x00\n    /* \"#utility.yul\":897:903   */\n  dup2\n    /* \"#utility.yul\":891:904   */\n  mload\n    /* \"#utility.yul\":882:904   */\n  swap1\n  pop\n    /* \"#utility.yul\":913:946   */\n  tag_52\n    /* \"#utility.yul\":940:945   */\n  dup2\n    /* \"#utility.yul\":913:946   */\n  tag_53\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":809:952   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":958:1967   */\ntag_3:\n    /* \"#utility.yul\":1066:1072   */\n  0x00\n    /* \"#utility.yul\":1074:1080   */\n  dup1\n    /* \"#utility.yul\":1082:1088   */\n  0x00\n    /* \"#utility.yul\":1131:1133   */\n  0x60\n    /* \"#utility.yul\":1119:1128   */\n  dup5\n    /* \"#utility.yul\":1110:1117   */\n  dup7\n    /* \"#utility.yul\":1106:1129   */\n  sub\n    /* \"#utility.yul\":1102:1134   */\n  slt\n    /* \"#utility.yul\":1099:1218   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1137:1216   */\n  tag_56\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1099:1218   */\ntag_55:\n    /* \"#utility.yul\":1278:1279   */\n  0x00\n    /* \"#utility.yul\":1267:1276   */\n  dup5\n    /* \"#utility.yul\":1263:1280   */\n  add\n    /* \"#utility.yul\":1257:1281   */\n  mload\n    /* \"#utility.yul\":1308:1326   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1300:1306   */\n  dup2\n    /* \"#utility.yul\":1297:1327   */\n  gt\n    /* \"#utility.yul\":1294:1411   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1330:1409   */\n  tag_59\n  tag_60\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1294:1411   */\ntag_58:\n    /* \"#utility.yul\":1435:1509   */\n  tag_61\n    /* \"#utility.yul\":1501:1508   */\n  dup7\n    /* \"#utility.yul\":1492:1498   */\n  dup3\n    /* \"#utility.yul\":1481:1490   */\n  dup8\n    /* \"#utility.yul\":1477:1499   */\n  add\n    /* \"#utility.yul\":1435:1509   */\n  tag_44\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1425:1509   */\n  swap4\n  pop\n    /* \"#utility.yul\":1228:1519   */\n  pop\n    /* \"#utility.yul\":1579:1581   */\n  0x20\n    /* \"#utility.yul\":1568:1577   */\n  dup5\n    /* \"#utility.yul\":1564:1582   */\n  add\n    /* \"#utility.yul\":1558:1583   */\n  mload\n    /* \"#utility.yul\":1610:1628   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1602:1608   */\n  dup2\n    /* \"#utility.yul\":1599:1629   */\n  gt\n    /* \"#utility.yul\":1596:1713   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1632:1711   */\n  tag_63\n  tag_60\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1596:1713   */\ntag_62:\n    /* \"#utility.yul\":1737:1811   */\n  tag_64\n    /* \"#utility.yul\":1803:1810   */\n  dup7\n    /* \"#utility.yul\":1794:1800   */\n  dup3\n    /* \"#utility.yul\":1783:1792   */\n  dup8\n    /* \"#utility.yul\":1779:1801   */\n  add\n    /* \"#utility.yul\":1737:1811   */\n  tag_44\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1727:1811   */\n  swap3\n  pop\n    /* \"#utility.yul\":1529:1821   */\n  pop\n    /* \"#utility.yul\":1860:1862   */\n  0x40\n    /* \"#utility.yul\":1886:1950   */\n  tag_65\n    /* \"#utility.yul\":1942:1949   */\n  dup7\n    /* \"#utility.yul\":1933:1939   */\n  dup3\n    /* \"#utility.yul\":1922:1931   */\n  dup8\n    /* \"#utility.yul\":1918:1940   */\n  add\n    /* \"#utility.yul\":1886:1950   */\n  tag_50\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1876:1950   */\n  swap2\n  pop\n    /* \"#utility.yul\":1831:1960   */\n  pop\n    /* \"#utility.yul\":958:1967   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1973:2091   */\ntag_66:\n    /* \"#utility.yul\":2060:2084   */\n  tag_68\n    /* \"#utility.yul\":2078:2083   */\n  dup2\n    /* \"#utility.yul\":2060:2084   */\n  tag_69\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2055:2058   */\n  dup3\n    /* \"#utility.yul\":2048:2085   */\n  mstore\n    /* \"#utility.yul\":1973:2091   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2097:2319   */\ntag_17:\n    /* \"#utility.yul\":2190:2194   */\n  0x00\n    /* \"#utility.yul\":2228:2230   */\n  0x20\n    /* \"#utility.yul\":2217:2226   */\n  dup3\n    /* \"#utility.yul\":2213:2231   */\n  add\n    /* \"#utility.yul\":2205:2231   */\n  swap1\n  pop\n    /* \"#utility.yul\":2241:2312   */\n  tag_71\n    /* \"#utility.yul\":2309:2310   */\n  0x00\n    /* \"#utility.yul\":2298:2307   */\n  dup4\n    /* \"#utility.yul\":2294:2311   */\n  add\n    /* \"#utility.yul\":2285:2291   */\n  dup5\n    /* \"#utility.yul\":2241:2312   */\n  tag_66\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2097:2319   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2325:2454   */\ntag_38:\n    /* \"#utility.yul\":2359:2365   */\n  0x00\n    /* \"#utility.yul\":2386:2406   */\n  tag_73\n  tag_74\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2376:2406   */\n  swap1\n  pop\n    /* \"#utility.yul\":2415:2448   */\n  tag_75\n    /* \"#utility.yul\":2443:2447   */\n  dup3\n    /* \"#utility.yul\":2435:2441   */\n  dup3\n    /* \"#utility.yul\":2415:2448   */\n  tag_76\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2325:2454   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2460:2535   */\ntag_74:\n    /* \"#utility.yul\":2493:2499   */\n  0x00\n    /* \"#utility.yul\":2526:2528   */\n  0x40\n    /* \"#utility.yul\":2520:2529   */\n  mload\n    /* \"#utility.yul\":2510:2529   */\n  swap1\n  pop\n    /* \"#utility.yul\":2460:2535   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2541:2849   */\ntag_37:\n    /* \"#utility.yul\":2603:2607   */\n  0x00\n    /* \"#utility.yul\":2693:2711   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2685:2691   */\n  dup3\n    /* \"#utility.yul\":2682:2712   */\n  gt\n    /* \"#utility.yul\":2679:2735   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2715:2733   */\n  tag_80\n  tag_81\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2679:2735   */\ntag_79:\n    /* \"#utility.yul\":2753:2782   */\n  tag_82\n    /* \"#utility.yul\":2775:2781   */\n  dup3\n    /* \"#utility.yul\":2753:2782   */\n  tag_83\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2745:2782   */\n  swap1\n  pop\n    /* \"#utility.yul\":2837:2841   */\n  0x20\n    /* \"#utility.yul\":2831:2835   */\n  dup2\n    /* \"#utility.yul\":2827:2842   */\n  add\n    /* \"#utility.yul\":2819:2842   */\n  swap1\n  pop\n    /* \"#utility.yul\":2541:2849   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2855:3160   */\ntag_20:\n    /* \"#utility.yul\":2895:2898   */\n  0x00\n    /* \"#utility.yul\":2914:2934   */\n  tag_85\n    /* \"#utility.yul\":2932:2933   */\n  dup3\n    /* \"#utility.yul\":2914:2934   */\n  tag_69\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2909:2934   */\n  swap2\n  pop\n    /* \"#utility.yul\":2948:2968   */\n  tag_86\n    /* \"#utility.yul\":2966:2967   */\n  dup4\n    /* \"#utility.yul\":2948:2968   */\n  tag_69\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2943:2968   */\n  swap3\n  pop\n    /* \"#utility.yul\":3102:3103   */\n  dup3\n    /* \"#utility.yul\":3034:3100   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3030:3104   */\n  sub\n    /* \"#utility.yul\":3027:3028   */\n  dup3\n    /* \"#utility.yul\":3024:3105   */\n  gt\n    /* \"#utility.yul\":3021:3128   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3108:3126   */\n  tag_88\n  tag_89\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3021:3128   */\ntag_87:\n    /* \"#utility.yul\":3152:3153   */\n  dup3\n    /* \"#utility.yul\":3149:3150   */\n  dup3\n    /* \"#utility.yul\":3145:3154   */\n  add\n    /* \"#utility.yul\":3138:3154   */\n  swap1\n  pop\n    /* \"#utility.yul\":2855:3160   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3166:3243   */\ntag_69:\n    /* \"#utility.yul\":3203:3210   */\n  0x00\n    /* \"#utility.yul\":3232:3237   */\n  dup2\n    /* \"#utility.yul\":3221:3237   */\n  swap1\n  pop\n    /* \"#utility.yul\":3166:3243   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3249:3556   */\ntag_43:\n    /* \"#utility.yul\":3317:3318   */\n  0x00\n    /* \"#utility.yul\":3327:3440   */\ntag_92:\n    /* \"#utility.yul\":3341:3347   */\n  dup4\n    /* \"#utility.yul\":3338:3339   */\n  dup2\n    /* \"#utility.yul\":3335:3348   */\n  lt\n    /* \"#utility.yul\":3327:3440   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":3426:3427   */\n  dup1\n    /* \"#utility.yul\":3421:3424   */\n  dup3\n    /* \"#utility.yul\":3417:3428   */\n  add\n    /* \"#utility.yul\":3411:3429   */\n  mload\n    /* \"#utility.yul\":3407:3408   */\n  dup2\n    /* \"#utility.yul\":3402:3405   */\n  dup5\n    /* \"#utility.yul\":3398:3409   */\n  add\n    /* \"#utility.yul\":3391:3430   */\n  mstore\n    /* \"#utility.yul\":3363:3365   */\n  0x20\n    /* \"#utility.yul\":3360:3361   */\n  dup2\n    /* \"#utility.yul\":3356:3366   */\n  add\n    /* \"#utility.yul\":3351:3366   */\n  swap1\n  pop\n    /* \"#utility.yul\":3327:3440   */\n  jump(tag_92)\ntag_94:\n    /* \"#utility.yul\":3458:3464   */\n  dup4\n    /* \"#utility.yul\":3455:3456   */\n  dup2\n    /* \"#utility.yul\":3452:3465   */\n  gt\n    /* \"#utility.yul\":3449:3550   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3538:3539   */\n  0x00\n    /* \"#utility.yul\":3529:3535   */\n  dup5\n    /* \"#utility.yul\":3524:3527   */\n  dup5\n    /* \"#utility.yul\":3520:3536   */\n  add\n    /* \"#utility.yul\":3513:3540   */\n  mstore\n    /* \"#utility.yul\":3449:3550   */\ntag_95:\n    /* \"#utility.yul\":3298:3556   */\n  pop\n    /* \"#utility.yul\":3249:3556   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3562:3882   */\ntag_22:\n    /* \"#utility.yul\":3606:3612   */\n  0x00\n    /* \"#utility.yul\":3643:3644   */\n  0x02\n    /* \"#utility.yul\":3637:3641   */\n  dup3\n    /* \"#utility.yul\":3633:3645   */\n  div\n    /* \"#utility.yul\":3623:3645   */\n  swap1\n  pop\n    /* \"#utility.yul\":3690:3691   */\n  0x01\n    /* \"#utility.yul\":3684:3688   */\n  dup3\n    /* \"#utility.yul\":3680:3692   */\n  and\n    /* \"#utility.yul\":3711:3729   */\n  dup1\n    /* \"#utility.yul\":3701:3782   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3767:3771   */\n  0x7f\n    /* \"#utility.yul\":3759:3765   */\n  dup3\n    /* \"#utility.yul\":3755:3772   */\n  and\n    /* \"#utility.yul\":3745:3772   */\n  swap2\n  pop\n    /* \"#utility.yul\":3701:3782   */\ntag_97:\n    /* \"#utility.yul\":3829:3831   */\n  0x20\n    /* \"#utility.yul\":3821:3827   */\n  dup3\n    /* \"#utility.yul\":3818:3832   */\n  lt\n    /* \"#utility.yul\":3798:3816   */\n  dup2\n    /* \"#utility.yul\":3795:3833   */\n  eq\n    /* \"#utility.yul\":3792:3876   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3848:3866   */\n  tag_99\n  tag_100\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3792:3876   */\ntag_98:\n    /* \"#utility.yul\":3613:3882   */\n  pop\n    /* \"#utility.yul\":3562:3882   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3888:4169   */\ntag_76:\n    /* \"#utility.yul\":3971:3998   */\n  tag_102\n    /* \"#utility.yul\":3993:3997   */\n  dup3\n    /* \"#utility.yul\":3971:3998   */\n  tag_83\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3963:3969   */\n  dup2\n    /* \"#utility.yul\":3959:3999   */\n  add\n    /* \"#utility.yul\":4101:4107   */\n  dup2\n    /* \"#utility.yul\":4089:4099   */\n  dup2\n    /* \"#utility.yul\":4086:4108   */\n  lt\n    /* \"#utility.yul\":4065:4083   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4053:4063   */\n  dup3\n    /* \"#utility.yul\":4050:4084   */\n  gt\n    /* \"#utility.yul\":4047:4109   */\n  or\n    /* \"#utility.yul\":4044:4132   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4112:4130   */\n  tag_104\n  tag_81\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4044:4132   */\ntag_103:\n    /* \"#utility.yul\":4152:4162   */\n  dup1\n    /* \"#utility.yul\":4148:4150   */\n  0x40\n    /* \"#utility.yul\":4141:4163   */\n  mstore\n    /* \"#utility.yul\":3931:4169   */\n  pop\n    /* \"#utility.yul\":3888:4169   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4175:4355   */\ntag_89:\n    /* \"#utility.yul\":4223:4300   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4220:4221   */\n  0x00\n    /* \"#utility.yul\":4213:4301   */\n  mstore\n    /* \"#utility.yul\":4320:4324   */\n  0x11\n    /* \"#utility.yul\":4317:4318   */\n  0x04\n    /* \"#utility.yul\":4310:4325   */\n  mstore\n    /* \"#utility.yul\":4344:4348   */\n  0x24\n    /* \"#utility.yul\":4341:4342   */\n  0x00\n    /* \"#utility.yul\":4334:4349   */\n  revert\n    /* \"#utility.yul\":4361:4541   */\ntag_100:\n    /* \"#utility.yul\":4409:4486   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4406:4407   */\n  0x00\n    /* \"#utility.yul\":4399:4487   */\n  mstore\n    /* \"#utility.yul\":4506:4510   */\n  0x22\n    /* \"#utility.yul\":4503:4504   */\n  0x04\n    /* \"#utility.yul\":4496:4511   */\n  mstore\n    /* \"#utility.yul\":4530:4534   */\n  0x24\n    /* \"#utility.yul\":4527:4528   */\n  0x00\n    /* \"#utility.yul\":4520:4535   */\n  revert\n    /* \"#utility.yul\":4547:4727   */\ntag_81:\n    /* \"#utility.yul\":4595:4672   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4592:4593   */\n  0x00\n    /* \"#utility.yul\":4585:4673   */\n  mstore\n    /* \"#utility.yul\":4692:4696   */\n  0x41\n    /* \"#utility.yul\":4689:4690   */\n  0x04\n    /* \"#utility.yul\":4682:4697   */\n  mstore\n    /* \"#utility.yul\":4716:4720   */\n  0x24\n    /* \"#utility.yul\":4713:4714   */\n  0x00\n    /* \"#utility.yul\":4706:4721   */\n  revert\n    /* \"#utility.yul\":4733:4850   */\ntag_48:\n    /* \"#utility.yul\":4842:4843   */\n  0x00\n    /* \"#utility.yul\":4839:4840   */\n  dup1\n    /* \"#utility.yul\":4832:4844   */\n  revert\n    /* \"#utility.yul\":4856:4973   */\ntag_41:\n    /* \"#utility.yul\":4965:4966   */\n  0x00\n    /* \"#utility.yul\":4962:4963   */\n  dup1\n    /* \"#utility.yul\":4955:4967   */\n  revert\n    /* \"#utility.yul\":4979:5096   */\ntag_60:\n    /* \"#utility.yul\":5088:5089   */\n  0x00\n    /* \"#utility.yul\":5085:5086   */\n  dup1\n    /* \"#utility.yul\":5078:5090   */\n  revert\n    /* \"#utility.yul\":5102:5219   */\ntag_57:\n    /* \"#utility.yul\":5211:5212   */\n  0x00\n    /* \"#utility.yul\":5208:5209   */\n  dup1\n    /* \"#utility.yul\":5201:5213   */\n  revert\n    /* \"#utility.yul\":5225:5327   */\ntag_83:\n    /* \"#utility.yul\":5266:5272   */\n  0x00\n    /* \"#utility.yul\":5317:5319   */\n  0x1f\n    /* \"#utility.yul\":5313:5320   */\n  not\n    /* \"#utility.yul\":5308:5310   */\n  0x1f\n    /* \"#utility.yul\":5301:5306   */\n  dup4\n    /* \"#utility.yul\":5297:5311   */\n  add\n    /* \"#utility.yul\":5293:5321   */\n  and\n    /* \"#utility.yul\":5283:5321   */\n  swap1\n  pop\n    /* \"#utility.yul\":5225:5327   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5333:5455   */\ntag_53:\n    /* \"#utility.yul\":5406:5430   */\n  tag_114\n    /* \"#utility.yul\":5424:5429   */\n  dup2\n    /* \"#utility.yul\":5406:5430   */\n  tag_69\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5399:5404   */\n  dup2\n    /* \"#utility.yul\":5396:5431   */\n  eq\n    /* \"#utility.yul\":5386:5449   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":5445:5446   */\n  0x00\n    /* \"#utility.yul\":5442:5443   */\n  dup1\n    /* \"#utility.yul\":5435:5447   */\n  revert\n    /* \"#utility.yul\":5386:5449   */\ntag_115:\n    /* \"#utility.yul\":5333:5455   */\n  pop\n  jump\t// out\n    /* \"contracts/ERC20/vSwapERC20TEST.sol\":118:2229  contract vSwapERC20TEST is IvSwapERC20 {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":118:2229  contract vSwapERC20TEST is IvSwapERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":196:214  string public name */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1551:1707  function approve(address spender, uint256 value) external override returns (bool) {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":287:322  uint256 override public totalSupply */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1867:2227  function transferFrom(... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":246:281  uint8 public constant decimals = 18 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":328:381  mapping(address => uint256) override public balanceOf */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":220:240  string public symbol */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1713:1861  function transfer(address to, uint256 value) external override returns (bool) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":387:460  mapping(address => mapping(address => uint256)) override public allowance */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":196:214  string public name */\n    tag_14:\n      0x00\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_56\n      swap1\n      tag_55\n      jump\t// in\n    tag_56:\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1551:1707  function approve(address spender, uint256 value) external override returns (bool) {... */\n    tag_20:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1627:1631  bool */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1643:1679  _approve(msg.sender, spender, value) */\n      tag_61\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1652:1662  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1664:1671  spender */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1673:1678  value */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1643:1651  _approve */\n      tag_62\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1643:1679  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_61:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1696:1700  true */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1689:1700  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1551:1707  function approve(address spender, uint256 value) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":287:322  uint256 override public totalSupply */\n    tag_24:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1867:2227  function transferFrom(... */\n    tag_30:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1987:1991  bool */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2038:2039  0 */\n      dup1\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2007:2016  allowance */\n      0x04\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2007:2022  allowance[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2017:2021  from */\n      dup7\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2007:2022  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2007:2034  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2023:2033  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2007:2034  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2007:2039  allowance[from][msg.sender] != 0 */\n      eq\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2003:2164  if (allowance[from][msg.sender] != 0) {... */\n      tag_64\n      jumpi\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2085:2153  allowance[from][msg.sender].sub(... */\n      tag_65\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2134:2139  value */\n      dup3\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2085:2094  allowance */\n      0x04\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2085:2100  allowance[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2095:2099  from */\n      dup8\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2085:2100  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2085:2112  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2101:2111  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2085:2112  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2085:2116  allowance[from][msg.sender].sub */\n      tag_66\n      swap1\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2085:2153  allowance[from][msg.sender].sub(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2055:2064  allowance */\n      0x04\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2055:2070  allowance[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2065:2069  from */\n      dup7\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2055:2070  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2055:2082  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2071:2081  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2055:2082  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2055:2153  allowance[from][msg.sender] = allowance[from][msg.sender].sub(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2003:2164  if (allowance[from][msg.sender] != 0) {... */\n    tag_64:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2173:2199  _transfer(from, to, value) */\n      tag_67\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2183:2187  from */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2189:2191  to */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2193:2198  value */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2173:2182  _transfer */\n      tag_68\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2173:2199  _transfer(from, to, value) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2216:2220  true */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":2209:2220  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1867:2227  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":246:281  uint8 public constant decimals = 18 */\n    tag_33:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":279:281  18 */\n      0x12\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":246:281  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":328:381  mapping(address => uint256) override public balanceOf */\n    tag_39:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":220:240  string public symbol */\n    tag_42:\n      0x01\n      dup1\n      sload\n      tag_69\n      swap1\n      tag_55\n      jump\t// in\n    tag_69:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_55\n      jump\t// in\n    tag_70:\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_72\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_71)\n    tag_72:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1713:1861  function transfer(address to, uint256 value) external override returns (bool) {... */\n    tag_46:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1785:1789  bool */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1801:1833  _transfer(msg.sender, to, value) */\n      tag_75\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1811:1821  msg.sender */\n      caller\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1823:1825  to */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1827:1832  value */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1801:1810  _transfer */\n      tag_68\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1801:1833  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1850:1854  true */\n      0x01\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1843:1854  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1713:1861  function transfer(address to, uint256 value) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":387:460  mapping(address => mapping(address => uint256)) override public allowance */\n    tag_51:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":2740:2836  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_53:\n        /* \"contracts/libraries/SafeMath.sol\":2798:2805  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":2828:2829  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":2824:2825  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":2824:2829  a + b */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/libraries/SafeMath.sol\":2817:2829  return a + b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":2740:2836  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1091:1290  function _approve(... */\n    tag_62:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1232:1237  value */\n      dup1\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1204:1213  allowance */\n      0x04\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1204:1220  allowance[owner] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1214:1219  owner */\n      dup6\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1204:1220  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1204:1229  allowance[owner][spender] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1221:1228  spender */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1204:1229  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1204:1237  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1268:1275  spender */\n      dup2\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1252:1283  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1261:1266  owner */\n      dup4\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1252:1283  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1277:1282  value */\n      dup4\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1252:1283  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1091:1290  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":3107:3203  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_66:\n        /* \"contracts/libraries/SafeMath.sol\":3165:3172  uint256 */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":3195:3196  b */\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":3191:3192  a */\n      dup4\n        /* \"contracts/libraries/SafeMath.sol\":3191:3196  a - b */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/libraries/SafeMath.sol\":3184:3196  return a - b */\n      swap1\n      pop\n        /* \"contracts/libraries/SafeMath.sol\":3107:3203  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1296:1545  function _transfer(... */\n    tag_68:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1422:1448  balanceOf[from].sub(value) */\n      tag_85\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1442:1447  value */\n      dup2\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1422:1431  balanceOf */\n      0x03\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1422:1437  balanceOf[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1432:1436  from */\n      dup7\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1422:1437  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1422:1441  balanceOf[from].sub */\n      tag_66\n      swap1\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1422:1448  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1404:1413  balanceOf */\n      0x03\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1404:1419  balanceOf[from] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1414:1418  from */\n      dup6\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1404:1419  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1404:1448  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1474:1498  balanceOf[to].add(value) */\n      tag_86\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1492:1497  value */\n      dup2\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1474:1483  balanceOf */\n      0x03\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1474:1487  balanceOf[to] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1484:1486  to */\n      dup6\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1474:1487  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1474:1491  balanceOf[to].add */\n      tag_53\n      swap1\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1474:1498  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1458:1467  balanceOf */\n      0x03\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1458:1471  balanceOf[to] */\n      0x00\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1468:1470  to */\n      dup5\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1458:1471  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1458:1498  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1528:1530  to */\n      dup2\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1513:1538  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1522:1526  from */\n      dup4\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1513:1538  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1532:1537  value */\n      dup4\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1513:1538  Transfer(from, to, value) */\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC20/vSwapERC20TEST.sol\":1296:1545  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_89:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_91\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_93:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_95\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_38:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":373:492   */\n    tag_98:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_101\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_89\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_50:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_104\n      tag_100\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":725:844   */\n    tag_103:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_105\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_89\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_106\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_89\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_29:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_109\n      tag_100\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1222:1341   */\n    tag_108:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_110\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_89\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_111\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_89\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_112\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_93\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_19:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_115\n      tag_100\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1830:1949   */\n    tag_114:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_116\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_89\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_117\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_93\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_118:\n        /* \"#utility.yul\":2298:2319   */\n      tag_120\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_122:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_124\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2503:2574   */\n      tag_126\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_128\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2660:2689   */\n      tag_130\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:2820   */\n    tag_132:\n        /* \"#utility.yul\":2789:2813   */\n      tag_134\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2789:2813   */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2784:2787   */\n      dup3\n        /* \"#utility.yul\":2777:2814   */\n      mstore\n        /* \"#utility.yul\":2702:2820   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:2938   */\n    tag_136:\n        /* \"#utility.yul\":2909:2931   */\n      tag_138\n        /* \"#utility.yul\":2925:2930   */\n      dup2\n        /* \"#utility.yul\":2909:2931   */\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2904:2907   */\n      dup3\n        /* \"#utility.yul\":2897:2932   */\n      mstore\n        /* \"#utility.yul\":2826:2938   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2944:3154   */\n    tag_22:\n        /* \"#utility.yul\":3031:3035   */\n      0x00\n        /* \"#utility.yul\":3069:3071   */\n      0x20\n        /* \"#utility.yul\":3058:3067   */\n      dup3\n        /* \"#utility.yul\":3054:3072   */\n      add\n        /* \"#utility.yul\":3046:3072   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3147   */\n      tag_141\n        /* \"#utility.yul\":3144:3145   */\n      0x00\n        /* \"#utility.yul\":3133:3142   */\n      dup4\n        /* \"#utility.yul\":3129:3146   */\n      add\n        /* \"#utility.yul\":3120:3126   */\n      dup5\n        /* \"#utility.yul\":3082:3147   */\n      tag_118\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2944:3154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3160:3473   */\n    tag_16:\n        /* \"#utility.yul\":3273:3277   */\n      0x00\n        /* \"#utility.yul\":3311:3313   */\n      0x20\n        /* \"#utility.yul\":3300:3309   */\n      dup3\n        /* \"#utility.yul\":3296:3314   */\n      add\n        /* \"#utility.yul\":3288:3314   */\n      swap1\n      pop\n        /* \"#utility.yul\":3360:3369   */\n      dup2\n        /* \"#utility.yul\":3354:3358   */\n      dup2\n        /* \"#utility.yul\":3350:3370   */\n      sub\n        /* \"#utility.yul\":3346:3347   */\n      0x00\n        /* \"#utility.yul\":3335:3344   */\n      dup4\n        /* \"#utility.yul\":3331:3348   */\n      add\n        /* \"#utility.yul\":3324:3371   */\n      mstore\n        /* \"#utility.yul\":3388:3466   */\n      tag_143\n        /* \"#utility.yul\":3461:3465   */\n      dup2\n        /* \"#utility.yul\":3452:3458   */\n      dup5\n        /* \"#utility.yul\":3388:3466   */\n      tag_122\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3380:3466   */\n      swap1\n      pop\n        /* \"#utility.yul\":3160:3473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3479:3701   */\n    tag_26:\n        /* \"#utility.yul\":3572:3576   */\n      0x00\n        /* \"#utility.yul\":3610:3612   */\n      0x20\n        /* \"#utility.yul\":3599:3608   */\n      dup3\n        /* \"#utility.yul\":3595:3613   */\n      add\n        /* \"#utility.yul\":3587:3613   */\n      swap1\n      pop\n        /* \"#utility.yul\":3623:3694   */\n      tag_145\n        /* \"#utility.yul\":3691:3692   */\n      0x00\n        /* \"#utility.yul\":3680:3689   */\n      dup4\n        /* \"#utility.yul\":3676:3693   */\n      add\n        /* \"#utility.yul\":3667:3673   */\n      dup5\n        /* \"#utility.yul\":3623:3694   */\n      tag_132\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3479:3701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3707:3921   */\n    tag_35:\n        /* \"#utility.yul\":3796:3800   */\n      0x00\n        /* \"#utility.yul\":3834:3836   */\n      0x20\n        /* \"#utility.yul\":3823:3832   */\n      dup3\n        /* \"#utility.yul\":3819:3837   */\n      add\n        /* \"#utility.yul\":3811:3837   */\n      swap1\n      pop\n        /* \"#utility.yul\":3847:3914   */\n      tag_147\n        /* \"#utility.yul\":3911:3912   */\n      0x00\n        /* \"#utility.yul\":3900:3909   */\n      dup4\n        /* \"#utility.yul\":3896:3913   */\n      add\n        /* \"#utility.yul\":3887:3893   */\n      dup5\n        /* \"#utility.yul\":3847:3914   */\n      tag_136\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3707:3921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4008:4107   */\n    tag_125:\n        /* \"#utility.yul\":4060:4066   */\n      0x00\n        /* \"#utility.yul\":4094:4099   */\n      dup2\n        /* \"#utility.yul\":4088:4100   */\n      mload\n        /* \"#utility.yul\":4078:4100   */\n      swap1\n      pop\n        /* \"#utility.yul\":4008:4107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4113:4282   */\n    tag_127:\n        /* \"#utility.yul\":4197:4208   */\n      0x00\n        /* \"#utility.yul\":4231:4237   */\n      dup3\n        /* \"#utility.yul\":4226:4229   */\n      dup3\n        /* \"#utility.yul\":4219:4238   */\n      mstore\n        /* \"#utility.yul\":4271:4275   */\n      0x20\n        /* \"#utility.yul\":4266:4269   */\n      dup3\n        /* \"#utility.yul\":4262:4276   */\n      add\n        /* \"#utility.yul\":4247:4276   */\n      swap1\n      pop\n        /* \"#utility.yul\":4113:4282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4288:4593   */\n    tag_78:\n        /* \"#utility.yul\":4328:4331   */\n      0x00\n        /* \"#utility.yul\":4347:4367   */\n      tag_153\n        /* \"#utility.yul\":4365:4366   */\n      dup3\n        /* \"#utility.yul\":4347:4367   */\n      tag_135\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4342:4367   */\n      swap2\n      pop\n        /* \"#utility.yul\":4381:4401   */\n      tag_154\n        /* \"#utility.yul\":4399:4400   */\n      dup4\n        /* \"#utility.yul\":4381:4401   */\n      tag_135\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4376:4401   */\n      swap3\n      pop\n        /* \"#utility.yul\":4535:4536   */\n      dup3\n        /* \"#utility.yul\":4467:4533   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4463:4537   */\n      sub\n        /* \"#utility.yul\":4460:4461   */\n      dup3\n        /* \"#utility.yul\":4457:4538   */\n      gt\n        /* \"#utility.yul\":4454:4561   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":4541:4559   */\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4454:4561   */\n    tag_155:\n        /* \"#utility.yul\":4585:4586   */\n      dup3\n        /* \"#utility.yul\":4582:4583   */\n      dup3\n        /* \"#utility.yul\":4578:4587   */\n      add\n        /* \"#utility.yul\":4571:4587   */\n      swap1\n      pop\n        /* \"#utility.yul\":4288:4593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4599:4790   */\n    tag_83:\n        /* \"#utility.yul\":4639:4643   */\n      0x00\n        /* \"#utility.yul\":4659:4679   */\n      tag_159\n        /* \"#utility.yul\":4677:4678   */\n      dup3\n        /* \"#utility.yul\":4659:4679   */\n      tag_135\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4654:4679   */\n      swap2\n      pop\n        /* \"#utility.yul\":4693:4713   */\n      tag_160\n        /* \"#utility.yul\":4711:4712   */\n      dup4\n        /* \"#utility.yul\":4693:4713   */\n      tag_135\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4688:4713   */\n      swap3\n      pop\n        /* \"#utility.yul\":4732:4733   */\n      dup3\n        /* \"#utility.yul\":4729:4730   */\n      dup3\n        /* \"#utility.yul\":4726:4734   */\n      lt\n        /* \"#utility.yul\":4723:4757   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":4737:4755   */\n      tag_162\n      tag_157\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4723:4757   */\n    tag_161:\n        /* \"#utility.yul\":4782:4783   */\n      dup3\n        /* \"#utility.yul\":4779:4780   */\n      dup3\n        /* \"#utility.yul\":4775:4784   */\n      sub\n        /* \"#utility.yul\":4767:4784   */\n      swap1\n      pop\n        /* \"#utility.yul\":4599:4790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4796:4892   */\n    tag_163:\n        /* \"#utility.yul\":4833:4840   */\n      0x00\n        /* \"#utility.yul\":4862:4886   */\n      tag_165\n        /* \"#utility.yul\":4880:4885   */\n      dup3\n        /* \"#utility.yul\":4862:4886   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4851:4886   */\n      swap1\n      pop\n        /* \"#utility.yul\":4796:4892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4898:4988   */\n    tag_121:\n        /* \"#utility.yul\":4932:4939   */\n      0x00\n        /* \"#utility.yul\":4975:4980   */\n      dup2\n        /* \"#utility.yul\":4968:4981   */\n      iszero\n        /* \"#utility.yul\":4961:4982   */\n      iszero\n        /* \"#utility.yul\":4950:4982   */\n      swap1\n      pop\n        /* \"#utility.yul\":4898:4988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4994:5120   */\n    tag_166:\n        /* \"#utility.yul\":5031:5038   */\n      0x00\n        /* \"#utility.yul\":5071:5113   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5064:5069   */\n      dup3\n        /* \"#utility.yul\":5060:5114   */\n      and\n        /* \"#utility.yul\":5049:5114   */\n      swap1\n      pop\n        /* \"#utility.yul\":4994:5120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5126:5203   */\n    tag_135:\n        /* \"#utility.yul\":5163:5170   */\n      0x00\n        /* \"#utility.yul\":5192:5197   */\n      dup2\n        /* \"#utility.yul\":5181:5197   */\n      swap1\n      pop\n        /* \"#utility.yul\":5126:5203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5209:5295   */\n    tag_139:\n        /* \"#utility.yul\":5244:5251   */\n      0x00\n        /* \"#utility.yul\":5284:5288   */\n      0xff\n        /* \"#utility.yul\":5277:5282   */\n      dup3\n        /* \"#utility.yul\":5273:5289   */\n      and\n        /* \"#utility.yul\":5262:5289   */\n      swap1\n      pop\n        /* \"#utility.yul\":5209:5295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5301:5608   */\n    tag_129:\n        /* \"#utility.yul\":5369:5370   */\n      0x00\n        /* \"#utility.yul\":5379:5492   */\n    tag_172:\n        /* \"#utility.yul\":5393:5399   */\n      dup4\n        /* \"#utility.yul\":5390:5391   */\n      dup2\n        /* \"#utility.yul\":5387:5400   */\n      lt\n        /* \"#utility.yul\":5379:5492   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":5478:5479   */\n      dup1\n        /* \"#utility.yul\":5473:5476   */\n      dup3\n        /* \"#utility.yul\":5469:5480   */\n      add\n        /* \"#utility.yul\":5463:5481   */\n      mload\n        /* \"#utility.yul\":5459:5460   */\n      dup2\n        /* \"#utility.yul\":5454:5457   */\n      dup5\n        /* \"#utility.yul\":5450:5461   */\n      add\n        /* \"#utility.yul\":5443:5482   */\n      mstore\n        /* \"#utility.yul\":5415:5417   */\n      0x20\n        /* \"#utility.yul\":5412:5413   */\n      dup2\n        /* \"#utility.yul\":5408:5418   */\n      add\n        /* \"#utility.yul\":5403:5418   */\n      swap1\n      pop\n        /* \"#utility.yul\":5379:5492   */\n      jump(tag_172)\n    tag_174:\n        /* \"#utility.yul\":5510:5516   */\n      dup4\n        /* \"#utility.yul\":5507:5508   */\n      dup2\n        /* \"#utility.yul\":5504:5517   */\n      gt\n        /* \"#utility.yul\":5501:5602   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5590:5591   */\n      0x00\n        /* \"#utility.yul\":5581:5587   */\n      dup5\n        /* \"#utility.yul\":5576:5579   */\n      dup5\n        /* \"#utility.yul\":5572:5588   */\n      add\n        /* \"#utility.yul\":5565:5592   */\n      mstore\n        /* \"#utility.yul\":5501:5602   */\n    tag_175:\n        /* \"#utility.yul\":5350:5608   */\n      pop\n        /* \"#utility.yul\":5301:5608   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5614:5934   */\n    tag_55:\n        /* \"#utility.yul\":5658:5664   */\n      0x00\n        /* \"#utility.yul\":5695:5696   */\n      0x02\n        /* \"#utility.yul\":5689:5693   */\n      dup3\n        /* \"#utility.yul\":5685:5697   */\n      div\n        /* \"#utility.yul\":5675:5697   */\n      swap1\n      pop\n        /* \"#utility.yul\":5742:5743   */\n      0x01\n        /* \"#utility.yul\":5736:5740   */\n      dup3\n        /* \"#utility.yul\":5732:5744   */\n      and\n        /* \"#utility.yul\":5763:5781   */\n      dup1\n        /* \"#utility.yul\":5753:5834   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5819:5823   */\n      0x7f\n        /* \"#utility.yul\":5811:5817   */\n      dup3\n        /* \"#utility.yul\":5807:5824   */\n      and\n        /* \"#utility.yul\":5797:5824   */\n      swap2\n      pop\n        /* \"#utility.yul\":5753:5834   */\n    tag_177:\n        /* \"#utility.yul\":5881:5883   */\n      0x20\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5870:5884   */\n      lt\n        /* \"#utility.yul\":5850:5868   */\n      dup2\n        /* \"#utility.yul\":5847:5885   */\n      eq\n        /* \"#utility.yul\":5844:5928   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":5900:5918   */\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5844:5928   */\n    tag_178:\n        /* \"#utility.yul\":5665:5934   */\n      pop\n        /* \"#utility.yul\":5614:5934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5940:6120   */\n    tag_157:\n        /* \"#utility.yul\":5988:6065   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5985:5986   */\n      0x00\n        /* \"#utility.yul\":5978:6066   */\n      mstore\n        /* \"#utility.yul\":6085:6089   */\n      0x11\n        /* \"#utility.yul\":6082:6083   */\n      0x04\n        /* \"#utility.yul\":6075:6090   */\n      mstore\n        /* \"#utility.yul\":6109:6113   */\n      0x24\n        /* \"#utility.yul\":6106:6107   */\n      0x00\n        /* \"#utility.yul\":6099:6114   */\n      revert\n        /* \"#utility.yul\":6126:6306   */\n    tag_180:\n        /* \"#utility.yul\":6174:6251   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6171:6172   */\n      0x00\n        /* \"#utility.yul\":6164:6252   */\n      mstore\n        /* \"#utility.yul\":6271:6275   */\n      0x22\n        /* \"#utility.yul\":6268:6269   */\n      0x04\n        /* \"#utility.yul\":6261:6276   */\n      mstore\n        /* \"#utility.yul\":6295:6299   */\n      0x24\n        /* \"#utility.yul\":6292:6293   */\n      0x00\n        /* \"#utility.yul\":6285:6300   */\n      revert\n        /* \"#utility.yul\":6435:6552   */\n    tag_100:\n        /* \"#utility.yul\":6544:6545   */\n      0x00\n        /* \"#utility.yul\":6541:6542   */\n      dup1\n        /* \"#utility.yul\":6534:6546   */\n      revert\n        /* \"#utility.yul\":6558:6660   */\n    tag_131:\n        /* \"#utility.yul\":6599:6605   */\n      0x00\n        /* \"#utility.yul\":6650:6652   */\n      0x1f\n        /* \"#utility.yul\":6646:6653   */\n      not\n        /* \"#utility.yul\":6641:6643   */\n      0x1f\n        /* \"#utility.yul\":6634:6639   */\n      dup4\n        /* \"#utility.yul\":6630:6644   */\n      add\n        /* \"#utility.yul\":6626:6654   */\n      and\n        /* \"#utility.yul\":6616:6654   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6666:6788   */\n    tag_92:\n        /* \"#utility.yul\":6739:6763   */\n      tag_188\n        /* \"#utility.yul\":6757:6762   */\n      dup2\n        /* \"#utility.yul\":6739:6763   */\n      tag_163\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6732:6737   */\n      dup2\n        /* \"#utility.yul\":6729:6764   */\n      eq\n        /* \"#utility.yul\":6719:6782   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":6778:6779   */\n      0x00\n        /* \"#utility.yul\":6775:6776   */\n      dup1\n        /* \"#utility.yul\":6768:6780   */\n      revert\n        /* \"#utility.yul\":6719:6782   */\n    tag_189:\n        /* \"#utility.yul\":6666:6788   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6794:6916   */\n    tag_96:\n        /* \"#utility.yul\":6867:6891   */\n      tag_191\n        /* \"#utility.yul\":6885:6890   */\n      dup2\n        /* \"#utility.yul\":6867:6891   */\n      tag_135\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6860:6865   */\n      dup2\n        /* \"#utility.yul\":6857:6892   */\n      eq\n        /* \"#utility.yul\":6847:6910   */\n      tag_192\n      jumpi\n        /* \"#utility.yul\":6906:6907   */\n      0x00\n        /* \"#utility.yul\":6903:6904   */\n      dup1\n        /* \"#utility.yul\":6896:6908   */\n      revert\n        /* \"#utility.yul\":6847:6910   */\n    tag_192:\n        /* \"#utility.yul\":6794:6916   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203630a2e27ddcbd4e938135b6c80b3408ae055844b13ec230c0392c90967f028664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_132": {
									"entryPoint": null,
									"id": 132,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_167": {
									"entryPoint": 132,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_535": {
									"entryPoint": 430,
									"id": 535,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1339,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1495,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5458:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:4"
															},
															"nodeType": "YulIf",
															"src": "262:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:4",
														"type": ""
													}
												],
												"src": "7:421:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:4"
															},
															"nodeType": "YulIf",
															"src": "531:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:4",
														"type": ""
													}
												],
												"src": "448:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "882:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "897:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "891:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "882:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "940:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "913:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "913:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "850:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "858:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "866:5:4",
														"type": ""
													}
												],
												"src": "809:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1089:878:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1135:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1137:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1137:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1137:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1110:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1119:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1106:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1131:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1102:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:32:4"
															},
															"nodeType": "YulIf",
															"src": "1099:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1228:291:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1243:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1267:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1278:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1263:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1263:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1257:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1257:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1247:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1328:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1330:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1330:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1330:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1300:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1308:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1297:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1294:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1425:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1481:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1492:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1477:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1477:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1501:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1435:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1425:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1529:292:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1544:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1568:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1579:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1564:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1564:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1558:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1548:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1630:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1632:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1632:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1632:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1602:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1610:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1599:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1599:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1596:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1727:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1783:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1794:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1779:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1737:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1737:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1727:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1831:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1846:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1860:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1850:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1876:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1922:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1933:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1918:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1918:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1942:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1886:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1886:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1876:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1043:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1054:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1066:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1074:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1082:6:4",
														"type": ""
													}
												],
												"src": "958:1009:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2055:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2078:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2060:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2048:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2026:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2033:3:4",
														"type": ""
													}
												],
												"src": "1973:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2195:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2205:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2217:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2213:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2205:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2285:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2298:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2309:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2241:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2241:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2167:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2179:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2190:4:4",
														"type": ""
													}
												],
												"src": "2097:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2366:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2376:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2386:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2386:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2376:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2443:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2415:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2350:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2359:6:4",
														"type": ""
													}
												],
												"src": "2325:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2500:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2510:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2526:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2520:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2510:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2493:6:4",
														"type": ""
													}
												],
												"src": "2460:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2608:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2713:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2715:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2715:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2715:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2685:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2693:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2682:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2682:30:4"
															},
															"nodeType": "YulIf",
															"src": "2679:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2745:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2775:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2753:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2745:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2819:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2827:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2819:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2592:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2603:4:4",
														"type": ""
													}
												],
												"src": "2541:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2899:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2909:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2932:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2914:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2909:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2943:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2966:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2948:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2943:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3106:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3108:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3108:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3108:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3027:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3034:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3030:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3024:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:81:4"
															},
															"nodeType": "YulIf",
															"src": "3021:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3138:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3149:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3152:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3138:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2886:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2889:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2895:3:4",
														"type": ""
													}
												],
												"src": "2855:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3211:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3221:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3232:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3221:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3193:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3203:7:4",
														"type": ""
													}
												],
												"src": "3166:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3298:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3308:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3317:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3312:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3377:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3402:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3407:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3398:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3398:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3421:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3426:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3417:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3417:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3411:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3411:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3391:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3391:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3391:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3338:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3341:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3335:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3335:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3349:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3351:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3360:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3363:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3356:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3356:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3351:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3331:3:4",
																"statements": []
															},
															"src": "3327:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3474:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3524:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3529:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3520:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3520:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3538:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3513:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3513:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3513:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3455:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3458:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3452:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:13:4"
															},
															"nodeType": "YulIf",
															"src": "3449:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3280:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3285:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3290:6:4",
														"type": ""
													}
												],
												"src": "3249:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3613:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3623:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3637:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3643:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3633:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3654:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3684:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3690:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3680:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3658:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3731:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3745:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3759:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3767:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3755:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3755:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3745:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3711:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3704:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3704:26:4"
															},
															"nodeType": "YulIf",
															"src": "3701:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3834:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3848:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3848:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3848:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3798:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3821:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3829:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3818:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3818:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3795:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:38:4"
															},
															"nodeType": "YulIf",
															"src": "3792:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3597:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3606:6:4",
														"type": ""
													}
												],
												"src": "3562:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3931:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3941:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3963:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3993:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3971:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3971:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3945:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4110:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4112:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4112:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4112:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4053:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4065:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4050:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4050:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4089:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4101:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4086:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4086:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4047:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:62:4"
															},
															"nodeType": "YulIf",
															"src": "4044:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4148:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4152:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4141:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4141:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4141:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3917:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3925:4:4",
														"type": ""
													}
												],
												"src": "3888:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4203:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4220:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4223:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4213:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4213:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4317:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4320:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4310:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4310:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4334:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4334:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4334:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4175:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4389:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4406:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4409:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4399:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4399:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4399:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4503:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4496:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4496:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4496:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4527:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4530:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4520:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "4361:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4575:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4592:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4595:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4585:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4585:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4689:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4692:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4682:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4682:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4713:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4716:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4706:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4706:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4547:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4822:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4839:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4842:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4832:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4832:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4733:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4945:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4965:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4955:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4856:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5068:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5085:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5078:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5078:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4979:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5191:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5208:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5211:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5201:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5201:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5102:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5273:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5283:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5301:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5308:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5297:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5297:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5317:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5313:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5313:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5293:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5283:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5256:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5266:6:4",
														"type": ""
													}
												],
												"src": "5225:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5376:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5433:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5442:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5445:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5435:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5435:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5435:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5399:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5424:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5406:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5406:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5396:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5396:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5389:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5389:43:4"
															},
															"nodeType": "YulIf",
															"src": "5386:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5369:5:4",
														"type": ""
													}
												],
												"src": "5333:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200123a3803806200123a83398181016040528101906200003791906200030b565b82600090805190602001906200004f929190620001c6565b50816001908051906020019062000068929190620001c6565b506200007b33826200008460201b60201c565b50505062000607565b620000a081600254620001ae60201b6200053d1790919060201c565b600281905550620000ff81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620001ae60201b6200053d1790919060201c565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001a29190620003b6565b60405180910390a35050565b60008183620001be919062000432565b905092915050565b828054620001d490620004cf565b90600052602060002090601f016020900481019282620001f8576000855562000244565b82601f106200021357805160ff191683800117855562000244565b8280016001018555821562000244579182015b828111156200024357825182559160200191906001019062000226565b5b50905062000253919062000257565b5090565b5b808211156200027257600081600090555060010162000258565b5090565b60006200028d6200028784620003fc565b620003d3565b905082815260208101848484011115620002ac57620002ab620005cd565b5b620002b984828562000499565b509392505050565b600082601f830112620002d957620002d8620005c8565b5b8151620002eb84826020860162000276565b91505092915050565b6000815190506200030581620005ed565b92915050565b600080600060608486031215620003275762000326620005d7565b5b600084015167ffffffffffffffff811115620003485762000347620005d2565b5b6200035686828701620002c1565b935050602084015167ffffffffffffffff8111156200037a5762000379620005d2565b5b6200038886828701620002c1565b92505060406200039b86828701620002f4565b9150509250925092565b620003b0816200048f565b82525050565b6000602082019050620003cd6000830184620003a5565b92915050565b6000620003df620003f2565b9050620003ed828262000505565b919050565b6000604051905090565b600067ffffffffffffffff8211156200041a576200041962000599565b5b6200042582620005dc565b9050602081019050919050565b60006200043f826200048f565b91506200044c836200048f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200048457620004836200053b565b5b828201905092915050565b6000819050919050565b60005b83811015620004b95780820151818401526020810190506200049c565b83811115620004c9576000848401525b50505050565b60006002820490506001821680620004e857607f821691505b60208210811415620004ff57620004fe6200056a565b5b50919050565b6200051082620005dc565b810181811067ffffffffffffffff8211171562000532576200053162000599565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620005f8816200048f565b81146200060457600080fd5b50565b610c2380620006176000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610993565b60405180910390f35b6100d060048036038101906100cb91906108d2565b61028e565b6040516100dd9190610978565b60405180910390f35b6100ee6102a5565b6040516100fb91906109b5565b60405180910390f35b61011e6004803603810190610119919061087f565b6102ab565b60405161012b9190610978565b60405180910390f35b61013c610456565b60405161014991906109d0565b60405180910390f35b61016c60048036038101906101679190610812565b61045b565b60405161017991906109b5565b60405180910390f35b61018a610473565b6040516101979190610993565b60405180910390f35b6101ba60048036038101906101b591906108d2565b610501565b6040516101c79190610978565b60405180910390f35b6101ea60048036038101906101e5919061083f565b610518565b6040516101f791906109b5565b60405180910390f35b6000805461020d90610b19565b80601f016020809104026020016040519081016040528092919081815260200182805461023990610b19565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b505050505081565b600061029b338484610553565b6001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610440576103bf82600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461063e90919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61044b848484610654565b600190509392505050565b601281565b60036020528060005260406000206000915090505481565b6001805461048090610b19565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac90610b19565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b505050505081565b600061050e338484610654565b6001905092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b6000818361054b9190610a07565b905092915050565b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161063191906109b5565b60405180910390a3505050565b6000818361064c9190610a5d565b905092915050565b6106a681600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461063e90919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061073b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053d90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107db91906109b5565b60405180910390a3505050565b6000813590506107f781610bbf565b92915050565b60008135905061080c81610bd6565b92915050565b60006020828403121561082857610827610ba9565b5b6000610836848285016107e8565b91505092915050565b6000806040838503121561085657610855610ba9565b5b6000610864858286016107e8565b9250506020610875858286016107e8565b9150509250929050565b60008060006060848603121561089857610897610ba9565b5b60006108a6868287016107e8565b93505060206108b7868287016107e8565b92505060406108c8868287016107fd565b9150509250925092565b600080604083850312156108e9576108e8610ba9565b5b60006108f7858286016107e8565b9250506020610908858286016107fd565b9150509250929050565b61091b81610aa3565b82525050565b600061092c826109eb565b61093681856109f6565b9350610946818560208601610ae6565b61094f81610bae565b840191505092915050565b61096381610acf565b82525050565b61097281610ad9565b82525050565b600060208201905061098d6000830184610912565b92915050565b600060208201905081810360008301526109ad8184610921565b905092915050565b60006020820190506109ca600083018461095a565b92915050565b60006020820190506109e56000830184610969565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610a1282610acf565b9150610a1d83610acf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a5257610a51610b4b565b5b828201905092915050565b6000610a6882610acf565b9150610a7383610acf565b925082821015610a8657610a85610b4b565b5b828203905092915050565b6000610a9c82610aaf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610b04578082015181840152602081019050610ae9565b83811115610b13576000848401525b50505050565b60006002820490506001821680610b3157607f821691505b60208210811415610b4557610b44610b7a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b610bc881610a91565b8114610bd357600080fd5b50565b610bdf81610acf565b8114610bea57600080fd5b5056fea26469706673582212203630a2e27ddcbd4e938135b6c80b3408ae055844b13ec230c0392c90967f028664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x123A CODESIZE SUB DUP1 PUSH3 0x123A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x30B JUMP JUMPDEST DUP3 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x1C6 JUMP JUMPDEST POP DUP2 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x1C6 JUMP JUMPDEST POP PUSH3 0x7B CALLER DUP3 PUSH3 0x84 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x607 JUMP JUMPDEST PUSH3 0xA0 DUP2 PUSH1 0x2 SLOAD PUSH3 0x1AE PUSH1 0x20 SHL PUSH3 0x53D OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0xFF DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x1AE PUSH1 0x20 SHL PUSH3 0x53D OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x1A2 SWAP2 SWAP1 PUSH3 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x1BE SWAP2 SWAP1 PUSH3 0x432 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1D4 SWAP1 PUSH3 0x4CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1F8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x244 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x213 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x244 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x244 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x243 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x226 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x253 SWAP2 SWAP1 PUSH3 0x257 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x272 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x258 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28D PUSH3 0x287 DUP5 PUSH3 0x3FC JUMP JUMPDEST PUSH3 0x3D3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x2AC JUMPI PUSH3 0x2AB PUSH3 0x5CD JUMP JUMPDEST JUMPDEST PUSH3 0x2B9 DUP5 DUP3 DUP6 PUSH3 0x499 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2D9 JUMPI PUSH3 0x2D8 PUSH3 0x5C8 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2EB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x276 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x305 DUP2 PUSH3 0x5ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x327 JUMPI PUSH3 0x326 PUSH3 0x5D7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x348 JUMPI PUSH3 0x347 PUSH3 0x5D2 JUMP JUMPDEST JUMPDEST PUSH3 0x356 DUP7 DUP3 DUP8 ADD PUSH3 0x2C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x37A JUMPI PUSH3 0x379 PUSH3 0x5D2 JUMP JUMPDEST JUMPDEST PUSH3 0x388 DUP7 DUP3 DUP8 ADD PUSH3 0x2C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x39B DUP7 DUP3 DUP8 ADD PUSH3 0x2F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x3B0 DUP2 PUSH3 0x48F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x3CD PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x3A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DF PUSH3 0x3F2 JUMP JUMPDEST SWAP1 POP PUSH3 0x3ED DUP3 DUP3 PUSH3 0x505 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x41A JUMPI PUSH3 0x419 PUSH3 0x599 JUMP JUMPDEST JUMPDEST PUSH3 0x425 DUP3 PUSH3 0x5DC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x43F DUP3 PUSH3 0x48F JUMP JUMPDEST SWAP2 POP PUSH3 0x44C DUP4 PUSH3 0x48F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x484 JUMPI PUSH3 0x483 PUSH3 0x53B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4B9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x49C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x4C9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4E8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4FF JUMPI PUSH3 0x4FE PUSH3 0x56A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x510 DUP3 PUSH3 0x5DC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x532 JUMPI PUSH3 0x531 PUSH3 0x599 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5F8 DUP2 PUSH3 0x48F JUMP JUMPDEST DUP2 EQ PUSH3 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC23 DUP1 PUSH3 0x617 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x20D SWAP1 PUSH2 0xB19 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x239 SWAP1 PUSH2 0xB19 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x286 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x286 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x269 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B CALLER DUP5 DUP5 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x440 JUMPI PUSH2 0x3BF DUP3 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x63E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x44B DUP5 DUP5 DUP5 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x480 SWAP1 PUSH2 0xB19 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0xB19 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E CALLER DUP5 DUP5 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A6 DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x63E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x73B DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x53D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7F7 DUP2 PUSH2 0xBBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x80C DUP2 PUSH2 0xBD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x828 JUMPI PUSH2 0x827 PUSH2 0xBA9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP5 DUP3 DUP6 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0xBA9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x864 DUP6 DUP3 DUP7 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x875 DUP6 DUP3 DUP7 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x898 JUMPI PUSH2 0x897 PUSH2 0xBA9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP7 DUP3 DUP8 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x8B7 DUP7 DUP3 DUP8 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x8C8 DUP7 DUP3 DUP8 ADD PUSH2 0x7FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0xBA9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8F7 DUP6 DUP3 DUP7 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x908 DUP6 DUP3 DUP7 ADD PUSH2 0x7FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B DUP2 PUSH2 0xAA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92C DUP3 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x936 DUP2 DUP6 PUSH2 0x9F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x946 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x94F DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x963 DUP2 PUSH2 0xACF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x912 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AD DUP2 DUP5 PUSH2 0x921 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x969 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 DUP3 PUSH2 0xACF JUMP JUMPDEST SWAP2 POP PUSH2 0xA1D DUP4 PUSH2 0xACF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA52 JUMPI PUSH2 0xA51 PUSH2 0xB4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA68 DUP3 PUSH2 0xACF JUMP JUMPDEST SWAP2 POP PUSH2 0xA73 DUP4 PUSH2 0xACF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xA86 JUMPI PUSH2 0xA85 PUSH2 0xB4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9C DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB04 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAE9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB13 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xB31 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0xB7A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC8 DUP2 PUSH2 0xA91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBDF DUP2 PUSH2 0xACF JUMP JUMPDEST DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE ADDRESS LOG2 0xE2 PUSH30 0xDCBD4E938135B6C80B3408AE055844B13EC230C0392C90967F028664736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "118:2111:1:-:0;;;467:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;589:5;582:4;:12;;;;;;;;;;;;:::i;:::-;;613:4;604:6;:13;;;;;;;;;;;;:::i;:::-;;627:31;633:10;645:12;627:5;;;:31;;:::i;:::-;467:198;;;118:2111;;671:200;746:22;762:5;746:11;;:15;;;;;;:22;;;;:::i;:::-;732:11;:36;;;;794:24;812:5;794:9;:13;804:2;794:13;;;;;;;;;;;;;;;;:17;;;;;;:24;;;;:::i;:::-;778:9;:13;788:2;778:13;;;;;;;;;;;;;;;:40;;;;854:2;833:31;;850:1;833:31;;;858:5;833:31;;;;;;:::i;:::-;;;;;;;;671:200;;:::o;2740:96:3:-;2798:7;2828:1;2824;:5;;;;:::i;:::-;2817:12;;2740:96;;;;:::o;118:2111:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:4:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:143::-;866:5;897:6;891:13;882:22;;913:33;940:5;913:33;:::i;:::-;809:143;;;;:::o;958:1009::-;1066:6;1074;1082;1131:2;1119:9;1110:7;1106:23;1102:32;1099:119;;;1137:79;;:::i;:::-;1099:119;1278:1;1267:9;1263:17;1257:24;1308:18;1300:6;1297:30;1294:117;;;1330:79;;:::i;:::-;1294:117;1435:74;1501:7;1492:6;1481:9;1477:22;1435:74;:::i;:::-;1425:84;;1228:291;1579:2;1568:9;1564:18;1558:25;1610:18;1602:6;1599:30;1596:117;;;1632:79;;:::i;:::-;1596:117;1737:74;1803:7;1794:6;1783:9;1779:22;1737:74;:::i;:::-;1727:84;;1529:292;1860:2;1886:64;1942:7;1933:6;1922:9;1918:22;1886:64;:::i;:::-;1876:74;;1831:129;958:1009;;;;;:::o;1973:118::-;2060:24;2078:5;2060:24;:::i;:::-;2055:3;2048:37;1973:118;;:::o;2097:222::-;2190:4;2228:2;2217:9;2213:18;2205:26;;2241:71;2309:1;2298:9;2294:17;2285:6;2241:71;:::i;:::-;2097:222;;;;:::o;2325:129::-;2359:6;2386:20;;:::i;:::-;2376:30;;2415:33;2443:4;2435:6;2415:33;:::i;:::-;2325:129;;;:::o;2460:75::-;2493:6;2526:2;2520:9;2510:19;;2460:75;:::o;2541:308::-;2603:4;2693:18;2685:6;2682:30;2679:56;;;2715:18;;:::i;:::-;2679:56;2753:29;2775:6;2753:29;:::i;:::-;2745:37;;2837:4;2831;2827:15;2819:23;;2541:308;;;:::o;2855:305::-;2895:3;2914:20;2932:1;2914:20;:::i;:::-;2909:25;;2948:20;2966:1;2948:20;:::i;:::-;2943:25;;3102:1;3034:66;3030:74;3027:1;3024:81;3021:107;;;3108:18;;:::i;:::-;3021:107;3152:1;3149;3145:9;3138:16;;2855:305;;;;:::o;3166:77::-;3203:7;3232:5;3221:16;;3166:77;;;:::o;3249:307::-;3317:1;3327:113;3341:6;3338:1;3335:13;3327:113;;;3426:1;3421:3;3417:11;3411:18;3407:1;3402:3;3398:11;3391:39;3363:2;3360:1;3356:10;3351:15;;3327:113;;;3458:6;3455:1;3452:13;3449:101;;;3538:1;3529:6;3524:3;3520:16;3513:27;3449:101;3298:258;3249:307;;;:::o;3562:320::-;3606:6;3643:1;3637:4;3633:12;3623:22;;3690:1;3684:4;3680:12;3711:18;3701:81;;3767:4;3759:6;3755:17;3745:27;;3701:81;3829:2;3821:6;3818:14;3798:18;3795:38;3792:84;;;3848:18;;:::i;:::-;3792:84;3613:269;3562:320;;;:::o;3888:281::-;3971:27;3993:4;3971:27;:::i;:::-;3963:6;3959:40;4101:6;4089:10;4086:22;4065:18;4053:10;4050:34;4047:62;4044:88;;;4112:18;;:::i;:::-;4044:88;4152:10;4148:2;4141:22;3931:238;3888:281;;:::o;4175:180::-;4223:77;4220:1;4213:88;4320:4;4317:1;4310:15;4344:4;4341:1;4334:15;4361:180;4409:77;4406:1;4399:88;4506:4;4503:1;4496:15;4530:4;4527:1;4520:15;4547:180;4595:77;4592:1;4585:88;4692:4;4689:1;4682:15;4716:4;4713:1;4706:15;4733:117;4842:1;4839;4832:12;4856:117;4965:1;4962;4955:12;4979:117;5088:1;5085;5078:12;5102:117;5211:1;5208;5201:12;5225:102;5266:6;5317:2;5313:7;5308:2;5301:5;5297:14;5293:28;5283:38;;5225:102;;;:::o;5333:122::-;5406:24;5424:5;5406:24;:::i;:::-;5399:5;5396:35;5386:63;;5445:1;5442;5435:12;5386:63;5333:122;:::o;118:2111:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_226": {
									"entryPoint": 1363,
									"id": 226,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_264": {
									"entryPoint": 1620,
									"id": 264,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_535": {
									"entryPoint": 1341,
									"id": 535,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_108": {
									"entryPoint": 1304,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_284": {
									"entryPoint": 654,
									"id": 284,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_101": {
									"entryPoint": 1115,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_93": {
									"entryPoint": 1110,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_88": {
									"entryPoint": 512,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_550": {
									"entryPoint": 1598,
									"id": 550,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_90": {
									"entryPoint": 1139,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_96": {
									"entryPoint": 677,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_352": {
									"entryPoint": 683,
									"id": 352,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_304": {
									"entryPoint": 1281,
									"id": 304,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 2790,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2985,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6919:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:4"
															},
															"nodeType": "YulIf",
															"src": "725:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:4",
														"type": ""
													}
												],
												"src": "632:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:4"
															},
															"nodeType": "YulIf",
															"src": "1222:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:4",
														"type": ""
													}
												],
												"src": "1112:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:4"
															},
															"nodeType": "YulIf",
															"src": "1830:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:4",
														"type": ""
													}
												],
												"src": "1737:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:4",
														"type": ""
													}
												],
												"src": "2217:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:4",
														"type": ""
													}
												],
												"src": "2332:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2784:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2807:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2789:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2789:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2755:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2762:3:4",
														"type": ""
													}
												],
												"src": "2702:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2887:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2904:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2925:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2909:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2909:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2897:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2897:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2897:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2875:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2882:3:4",
														"type": ""
													}
												],
												"src": "2826:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3036:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3046:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3058:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3069:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3054:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3046:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3120:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3133:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3144:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3129:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3082:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3082:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3008:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3020:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3031:4:4",
														"type": ""
													}
												],
												"src": "2944:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3278:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3288:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3300:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3311:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3296:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3296:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3288:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3335:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3346:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3331:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3331:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3354:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3350:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3350:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3324:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3324:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3452:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3461:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3388:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3250:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3262:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3273:4:4",
														"type": ""
													}
												],
												"src": "3160:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3577:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3587:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3610:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3595:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3587:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3667:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3680:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3691:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3676:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3676:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3623:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3623:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3549:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3561:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3572:4:4",
														"type": ""
													}
												],
												"src": "3479:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3801:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3811:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3823:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3834:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3811:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3887:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3900:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3911:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3847:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3847:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3847:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3773:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3785:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3796:4:4",
														"type": ""
													}
												],
												"src": "3707:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3967:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3977:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3993:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3987:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3960:6:4",
														"type": ""
													}
												],
												"src": "3927:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4067:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4078:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4094:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4088:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4050:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4060:6:4",
														"type": ""
													}
												],
												"src": "4008:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4209:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4226:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4231:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4219:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4219:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4219:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4247:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4266:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4271:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4262:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4262:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4247:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4181:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4186:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4197:11:4",
														"type": ""
													}
												],
												"src": "4113:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4332:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4342:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4365:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4347:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4342:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4376:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4399:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4381:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4376:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4541:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4460:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4467:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4535:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4463:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4463:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4457:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:81:4"
															},
															"nodeType": "YulIf",
															"src": "4454:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4571:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4582:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4585:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4578:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4571:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4319:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4322:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4328:3:4",
														"type": ""
													}
												],
												"src": "4288:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4644:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4654:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4677:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4659:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4654:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4688:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4711:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4693:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4693:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4688:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4735:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4737:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4737:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4737:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4729:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4732:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4726:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4726:8:4"
															},
															"nodeType": "YulIf",
															"src": "4723:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4767:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4779:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4782:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4775:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4767:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4630:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4633:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4639:4:4",
														"type": ""
													}
												],
												"src": "4599:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4851:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4880:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4862:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4862:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4851:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4823:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4833:7:4",
														"type": ""
													}
												],
												"src": "4796:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4940:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4950:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4975:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4968:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4968:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4961:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4961:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4950:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4922:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4932:7:4",
														"type": ""
													}
												],
												"src": "4898:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5039:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5049:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5064:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5071:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5060:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5049:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5021:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5031:7:4",
														"type": ""
													}
												],
												"src": "4994:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5171:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5181:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5192:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5181:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5153:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5163:7:4",
														"type": ""
													}
												],
												"src": "5126:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5252:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5262:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5277:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5284:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5273:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5262:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5234:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5244:7:4",
														"type": ""
													}
												],
												"src": "5209:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5350:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5360:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5369:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5364:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5429:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5454:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5459:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5450:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5450:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5473:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5478:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5469:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5469:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5463:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5463:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5443:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5443:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5443:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5390:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5387:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5387:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5401:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5403:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5412:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5415:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5408:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5408:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5403:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5383:3:4",
																"statements": []
															},
															"src": "5379:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5526:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5576:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5581:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5572:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5572:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5590:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5565:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5565:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5565:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5507:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5510:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5504:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5504:13:4"
															},
															"nodeType": "YulIf",
															"src": "5501:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5332:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5337:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5342:6:4",
														"type": ""
													}
												],
												"src": "5301:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5665:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5675:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5689:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5695:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5685:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5675:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5736:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5732:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5732:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5710:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5783:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5797:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5811:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5819:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5807:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5807:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5797:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5763:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5756:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:26:4"
															},
															"nodeType": "YulIf",
															"src": "5753:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5886:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "5900:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5900:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5900:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5850:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5873:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5881:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5870:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5870:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5847:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:38:4"
															},
															"nodeType": "YulIf",
															"src": "5844:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5649:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5658:6:4",
														"type": ""
													}
												],
												"src": "5614:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5968:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5985:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5988:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5978:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5978:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5978:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6082:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6085:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6075:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6075:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6075:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6106:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6109:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6099:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6099:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5940:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6154:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6171:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6174:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6164:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6164:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6164:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6268:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6271:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6261:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6261:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6261:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6292:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6295:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6285:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6285:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6285:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6126:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6401:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6418:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6421:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6411:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6411:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6411:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6312:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6524:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6541:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6544:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6534:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6534:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6435:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6606:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6616:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6634:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6641:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6630:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6630:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6650:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6646:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6646:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6616:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6589:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6599:6:4",
														"type": ""
													}
												],
												"src": "6558:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6709:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6766:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6775:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6778:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6768:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6768:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6768:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6732:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6757:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6739:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6739:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6729:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6729:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6722:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6722:43:4"
															},
															"nodeType": "YulIf",
															"src": "6719:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6702:5:4",
														"type": ""
													}
												],
												"src": "6666:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6837:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6894:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6903:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6906:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6896:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6896:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6896:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6860:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6885:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6867:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6867:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6857:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6857:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6850:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:43:4"
															},
															"nodeType": "YulIf",
															"src": "6847:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6830:5:4",
														"type": ""
													}
												],
												"src": "6794:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610993565b60405180910390f35b6100d060048036038101906100cb91906108d2565b61028e565b6040516100dd9190610978565b60405180910390f35b6100ee6102a5565b6040516100fb91906109b5565b60405180910390f35b61011e6004803603810190610119919061087f565b6102ab565b60405161012b9190610978565b60405180910390f35b61013c610456565b60405161014991906109d0565b60405180910390f35b61016c60048036038101906101679190610812565b61045b565b60405161017991906109b5565b60405180910390f35b61018a610473565b6040516101979190610993565b60405180910390f35b6101ba60048036038101906101b591906108d2565b610501565b6040516101c79190610978565b60405180910390f35b6101ea60048036038101906101e5919061083f565b610518565b6040516101f791906109b5565b60405180910390f35b6000805461020d90610b19565b80601f016020809104026020016040519081016040528092919081815260200182805461023990610b19565b80156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b505050505081565b600061029b338484610553565b6001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610440576103bf82600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461063e90919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61044b848484610654565b600190509392505050565b601281565b60036020528060005260406000206000915090505481565b6001805461048090610b19565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac90610b19565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b505050505081565b600061050e338484610654565b6001905092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b6000818361054b9190610a07565b905092915050565b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161063191906109b5565b60405180910390a3505050565b6000818361064c9190610a5d565b905092915050565b6106a681600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461063e90919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061073b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053d90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107db91906109b5565b60405180910390a3505050565b6000813590506107f781610bbf565b92915050565b60008135905061080c81610bd6565b92915050565b60006020828403121561082857610827610ba9565b5b6000610836848285016107e8565b91505092915050565b6000806040838503121561085657610855610ba9565b5b6000610864858286016107e8565b9250506020610875858286016107e8565b9150509250929050565b60008060006060848603121561089857610897610ba9565b5b60006108a6868287016107e8565b93505060206108b7868287016107e8565b92505060406108c8868287016107fd565b9150509250925092565b600080604083850312156108e9576108e8610ba9565b5b60006108f7858286016107e8565b9250506020610908858286016107fd565b9150509250929050565b61091b81610aa3565b82525050565b600061092c826109eb565b61093681856109f6565b9350610946818560208601610ae6565b61094f81610bae565b840191505092915050565b61096381610acf565b82525050565b61097281610ad9565b82525050565b600060208201905061098d6000830184610912565b92915050565b600060208201905081810360008301526109ad8184610921565b905092915050565b60006020820190506109ca600083018461095a565b92915050565b60006020820190506109e56000830184610969565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610a1282610acf565b9150610a1d83610acf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a5257610a51610b4b565b5b828201905092915050565b6000610a6882610acf565b9150610a7383610acf565b925082821015610a8657610a85610b4b565b5b828203905092915050565b6000610a9c82610aaf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610b04578082015181840152602081019050610ae9565b83811115610b13576000848401525b50505050565b60006002820490506001821680610b3157607f821691505b60208210811415610b4557610b44610b7a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b610bc881610a91565b8114610bd357600080fd5b50565b610bdf81610acf565b8114610bea57600080fd5b5056fea26469706673582212203630a2e27ddcbd4e938135b6c80b3408ae055844b13ec230c0392c90967f028664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x87F JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x8D2 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x20D SWAP1 PUSH2 0xB19 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x239 SWAP1 PUSH2 0xB19 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x286 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x286 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x269 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B CALLER DUP5 DUP5 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x440 JUMPI PUSH2 0x3BF DUP3 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x63E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x44B DUP5 DUP5 DUP5 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x480 SWAP1 PUSH2 0xB19 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0xB19 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50E CALLER DUP5 DUP5 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0xA07 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A6 DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x63E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x73B DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x53D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7F7 DUP2 PUSH2 0xBBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x80C DUP2 PUSH2 0xBD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x828 JUMPI PUSH2 0x827 PUSH2 0xBA9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP5 DUP3 DUP6 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0xBA9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x864 DUP6 DUP3 DUP7 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x875 DUP6 DUP3 DUP7 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x898 JUMPI PUSH2 0x897 PUSH2 0xBA9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A6 DUP7 DUP3 DUP8 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x8B7 DUP7 DUP3 DUP8 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x8C8 DUP7 DUP3 DUP8 ADD PUSH2 0x7FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0xBA9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8F7 DUP6 DUP3 DUP7 ADD PUSH2 0x7E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x908 DUP6 DUP3 DUP7 ADD PUSH2 0x7FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x91B DUP2 PUSH2 0xAA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92C DUP3 PUSH2 0x9EB JUMP JUMPDEST PUSH2 0x936 DUP2 DUP6 PUSH2 0x9F6 JUMP JUMPDEST SWAP4 POP PUSH2 0x946 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x94F DUP2 PUSH2 0xBAE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x963 DUP2 PUSH2 0xACF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x972 DUP2 PUSH2 0xAD9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x98D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x912 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9AD DUP2 DUP5 PUSH2 0x921 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x95A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x969 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 DUP3 PUSH2 0xACF JUMP JUMPDEST SWAP2 POP PUSH2 0xA1D DUP4 PUSH2 0xACF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xA52 JUMPI PUSH2 0xA51 PUSH2 0xB4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA68 DUP3 PUSH2 0xACF JUMP JUMPDEST SWAP2 POP PUSH2 0xA73 DUP4 PUSH2 0xACF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xA86 JUMPI PUSH2 0xA85 PUSH2 0xB4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9C DUP3 PUSH2 0xAAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB04 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAE9 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB13 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xB31 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0xB7A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC8 DUP2 PUSH2 0xA91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBDF DUP2 PUSH2 0xACF JUMP JUMPDEST DUP2 EQ PUSH2 0xBEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE ADDRESS LOG2 0xE2 PUSH30 0xDCBD4E938135B6C80B3408AE055844B13EC230C0392C90967F028664736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "118:2111:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1551:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;287:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1867:360;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;246:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;328:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1713:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;196:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1551:156::-;1627:4;1643:36;1652:10;1664:7;1673:5;1643:8;:36::i;:::-;1696:4;1689:11;;1551:156;;;;:::o;287:35::-;;;;:::o;1867:360::-;1987:4;2038:1;2007:9;:15;2017:4;2007:15;;;;;;;;;;;;;;;:27;2023:10;2007:27;;;;;;;;;;;;;;;;:32;2003:161;;2085:68;2134:5;2085:9;:15;2095:4;2085:15;;;;;;;;;;;;;;;:27;2101:10;2085:27;;;;;;;;;;;;;;;;:31;;:68;;;;:::i;:::-;2055:9;:15;2065:4;2055:15;;;;;;;;;;;;;;;:27;2071:10;2055:27;;;;;;;;;;;;;;;:98;;;;2003:161;2173:26;2183:4;2189:2;2193:5;2173:9;:26::i;:::-;2216:4;2209:11;;1867:360;;;;;:::o;246:35::-;279:2;246:35;:::o;328:53::-;;;;;;;;;;;;;;;;;:::o;220:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1713:148::-;1785:4;1801:32;1811:10;1823:2;1827:5;1801:9;:32::i;:::-;1850:4;1843:11;;1713:148;;;;:::o;387:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2740:96:3:-;2798:7;2828:1;2824;:5;;;;:::i;:::-;2817:12;;2740:96;;;;:::o;1091:199:1:-;1232:5;1204:9;:16;1214:5;1204:16;;;;;;;;;;;;;;;:25;1221:7;1204:25;;;;;;;;;;;;;;;:33;;;;1268:7;1252:31;;1261:5;1252:31;;;1277:5;1252:31;;;;;;:::i;:::-;;;;;;;;1091:199;;;:::o;3107:96:3:-;3165:7;3195:1;3191;:5;;;;:::i;:::-;3184:12;;3107:96;;;;:::o;1296:249:1:-;1422:26;1442:5;1422:9;:15;1432:4;1422:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1404:9;:15;1414:4;1404:15;;;;;;;;;;;;;;;:44;;;;1474:24;1492:5;1474:9;:13;1484:2;1474:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1458:9;:13;1468:2;1458:13;;;;;;;;;;;;;;;:40;;;;1528:2;1513:25;;1522:4;1513:25;;;1532:5;1513:25;;;;;;:::i;:::-;;;;;;;;1296:249;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:118::-;2789:24;2807:5;2789:24;:::i;:::-;2784:3;2777:37;2702:118;;:::o;2826:112::-;2909:22;2925:5;2909:22;:::i;:::-;2904:3;2897:35;2826:112;;:::o;2944:210::-;3031:4;3069:2;3058:9;3054:18;3046:26;;3082:65;3144:1;3133:9;3129:17;3120:6;3082:65;:::i;:::-;2944:210;;;;:::o;3160:313::-;3273:4;3311:2;3300:9;3296:18;3288:26;;3360:9;3354:4;3350:20;3346:1;3335:9;3331:17;3324:47;3388:78;3461:4;3452:6;3388:78;:::i;:::-;3380:86;;3160:313;;;;:::o;3479:222::-;3572:4;3610:2;3599:9;3595:18;3587:26;;3623:71;3691:1;3680:9;3676:17;3667:6;3623:71;:::i;:::-;3479:222;;;;:::o;3707:214::-;3796:4;3834:2;3823:9;3819:18;3811:26;;3847:67;3911:1;3900:9;3896:17;3887:6;3847:67;:::i;:::-;3707:214;;;;:::o;4008:99::-;4060:6;4094:5;4088:12;4078:22;;4008:99;;;:::o;4113:169::-;4197:11;4231:6;4226:3;4219:19;4271:4;4266:3;4262:14;4247:29;;4113:169;;;;:::o;4288:305::-;4328:3;4347:20;4365:1;4347:20;:::i;:::-;4342:25;;4381:20;4399:1;4381:20;:::i;:::-;4376:25;;4535:1;4467:66;4463:74;4460:1;4457:81;4454:107;;;4541:18;;:::i;:::-;4454:107;4585:1;4582;4578:9;4571:16;;4288:305;;;;:::o;4599:191::-;4639:4;4659:20;4677:1;4659:20;:::i;:::-;4654:25;;4693:20;4711:1;4693:20;:::i;:::-;4688:25;;4732:1;4729;4726:8;4723:34;;;4737:18;;:::i;:::-;4723:34;4782:1;4779;4775:9;4767:17;;4599:191;;;;:::o;4796:96::-;4833:7;4862:24;4880:5;4862:24;:::i;:::-;4851:35;;4796:96;;;:::o;4898:90::-;4932:7;4975:5;4968:13;4961:21;4950:32;;4898:90;;;:::o;4994:126::-;5031:7;5071:42;5064:5;5060:54;5049:65;;4994:126;;;:::o;5126:77::-;5163:7;5192:5;5181:16;;5126:77;;;:::o;5209:86::-;5244:7;5284:4;5277:5;5273:16;5262:27;;5209:86;;;:::o;5301:307::-;5369:1;5379:113;5393:6;5390:1;5387:13;5379:113;;;5478:1;5473:3;5469:11;5463:18;5459:1;5454:3;5450:11;5443:39;5415:2;5412:1;5408:10;5403:15;;5379:113;;;5510:6;5507:1;5504:13;5501:101;;;5590:1;5581:6;5576:3;5572:16;5565:27;5501:101;5350:258;5301:307;;;:::o;5614:320::-;5658:6;5695:1;5689:4;5685:12;5675:22;;5742:1;5736:4;5732:12;5763:18;5753:81;;5819:4;5811:6;5807:17;5797:27;;5753:81;5881:2;5873:6;5870:14;5850:18;5847:38;5844:84;;;5900:18;;:::i;:::-;5844:84;5665:269;5614:320;;;:::o;5940:180::-;5988:77;5985:1;5978:88;6085:4;6082:1;6075:15;6109:4;6106:1;6099:15;6126:180;6174:77;6171:1;6164:88;6271:4;6268:1;6261:15;6295:4;6292:1;6285:15;6435:117;6544:1;6541;6534:12;6558:102;6599:6;6650:2;6646:7;6641:2;6634:5;6630:14;6626:28;6616:38;;6558:102;;;:::o;6666:122::-;6739:24;6757:5;6739:24;:::i;:::-;6732:5;6729:35;6719:63;;6778:1;6775;6768:12;6719:63;6666:122;:::o;6794:::-;6867:24;6885:5;6867:24;:::i;:::-;6860:5;6857:35;6847:63;;6906:1;6903;6896:12;6847:63;6794:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "621400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2836",
								"decimals()": "335",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2474",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 665,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 665,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 467,
									"end": 665,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 467,
									"end": 665,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 467,
									"end": 665,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 467,
									"end": 665,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 467,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 467,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 589,
									"end": 594,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 582,
									"end": 586,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 582,
									"end": 594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 594,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 582,
									"end": 594,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 582,
									"end": 594,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 594,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 582,
									"end": 594,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 582,
									"end": 594,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 613,
									"end": 617,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 604,
									"end": 610,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 604,
									"end": 617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 604,
									"end": 617,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 604,
									"end": 617,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 604,
									"end": 617,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 604,
									"end": 617,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 617,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 627,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 633,
									"end": 643,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 645,
									"end": 657,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 627,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 627,
									"end": 632,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 627,
									"end": 632,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 627,
									"end": 658,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 627,
									"end": 658,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 627,
									"end": 658,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 627,
									"end": 658,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 627,
									"end": 658,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 467,
									"end": 665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 671,
									"end": 871,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 671,
									"end": 871,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 746,
									"end": 768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 746,
									"end": 757,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 746,
									"end": 757,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 746,
									"end": 761,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 746,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 746,
									"end": 761,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 746,
									"end": 761,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551669"
								},
								{
									"begin": 746,
									"end": 761,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 746,
									"end": 761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 746,
									"end": 768,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 746,
									"end": 768,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 746,
									"end": 768,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 746,
									"end": 768,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 746,
									"end": 768,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 746,
									"end": 768,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 746,
									"end": 768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 732,
									"end": 743,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 732,
									"end": 768,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 732,
									"end": 768,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 732,
									"end": 768,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 732,
									"end": 768,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 794,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 812,
									"end": 817,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 794,
									"end": 803,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 794,
									"end": 807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 804,
									"end": 806,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 794,
									"end": 807,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 794,
									"end": 807,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 794,
									"end": 807,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 794,
									"end": 807,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 794,
									"end": 807,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 794,
									"end": 807,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 794,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 794,
									"end": 811,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 794,
									"end": 811,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 794,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551669"
								},
								{
									"begin": 794,
									"end": 811,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 794,
									"end": 811,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 794,
									"end": 818,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 794,
									"end": 818,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 794,
									"end": 818,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 794,
									"end": 818,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 794,
									"end": 818,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 794,
									"end": 818,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 794,
									"end": 818,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 778,
									"end": 787,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 778,
									"end": 791,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 788,
									"end": 790,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 778,
									"end": 791,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 778,
									"end": 791,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 778,
									"end": 791,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 778,
									"end": 791,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 791,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 778,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 818,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 778,
									"end": 818,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 778,
									"end": 818,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 854,
									"end": 856,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 833,
									"end": 864,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 850,
									"end": 851,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 864,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 833,
									"end": 864,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 858,
									"end": 863,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 864,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 833,
									"end": 864,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 833,
									"end": 864,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 833,
									"end": 864,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 833,
									"end": 864,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 864,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 833,
									"end": 864,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 671,
									"end": 871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 671,
									"end": 871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 671,
									"end": 871,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2740,
									"end": 2836,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2740,
									"end": 2836,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2798,
									"end": 2805,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2828,
									"end": 2829,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2824,
									"end": 2825,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2824,
									"end": 2829,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2824,
									"end": 2829,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2824,
									"end": 2829,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2824,
									"end": 2829,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2824,
									"end": 2829,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2824,
									"end": 2829,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2824,
									"end": 2829,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2817,
									"end": 2829,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2817,
									"end": 2829,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2740,
									"end": 2836,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2740,
									"end": 2836,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2740,
									"end": 2836,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2740,
									"end": 2836,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2740,
									"end": 2836,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 952,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 809,
									"end": 952,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 866,
									"end": 871,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 903,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 891,
									"end": 904,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 882,
									"end": 904,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 882,
									"end": 904,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 913,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 940,
									"end": 945,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 913,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 913,
									"end": 946,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 913,
									"end": 946,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 913,
									"end": 946,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 809,
									"end": 952,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 809,
									"end": 952,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 809,
									"end": 952,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 952,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 952,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 958,
									"end": 1967,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 958,
									"end": 1967,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1066,
									"end": 1072,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1080,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1088,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1119,
									"end": 1128,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1110,
									"end": 1117,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1106,
									"end": 1129,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1102,
									"end": 1134,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1099,
									"end": 1218,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1099,
									"end": 1218,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 1099,
									"end": 1218,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1137,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1099,
									"end": 1218,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 1099,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1278,
									"end": 1279,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1267,
									"end": 1276,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1263,
									"end": 1280,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1257,
									"end": 1281,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1308,
									"end": 1326,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1300,
									"end": 1306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1327,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1294,
									"end": 1411,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1294,
									"end": 1411,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1294,
									"end": 1411,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1330,
									"end": 1409,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1330,
									"end": 1409,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1330,
									"end": 1409,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1330,
									"end": 1409,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1330,
									"end": 1409,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1294,
									"end": 1411,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1294,
									"end": 1411,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1501,
									"end": 1508,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1492,
									"end": 1498,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1481,
									"end": 1490,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1477,
									"end": 1499,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1425,
									"end": 1509,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1425,
									"end": 1509,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1228,
									"end": 1519,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1579,
									"end": 1581,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1568,
									"end": 1577,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1564,
									"end": 1582,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1558,
									"end": 1583,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1628,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1602,
									"end": 1608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1599,
									"end": 1629,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1596,
									"end": 1713,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1596,
									"end": 1713,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1596,
									"end": 1713,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1632,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1632,
									"end": 1711,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1632,
									"end": 1711,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1632,
									"end": 1711,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1632,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1596,
									"end": 1713,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1596,
									"end": 1713,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1737,
									"end": 1811,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1803,
									"end": 1810,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1794,
									"end": 1800,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1783,
									"end": 1792,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1779,
									"end": 1801,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1737,
									"end": 1811,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1737,
									"end": 1811,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1737,
									"end": 1811,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1737,
									"end": 1811,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1727,
									"end": 1811,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1727,
									"end": 1811,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1529,
									"end": 1821,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1860,
									"end": 1862,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1886,
									"end": 1950,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1942,
									"end": 1949,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1933,
									"end": 1939,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1922,
									"end": 1931,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1918,
									"end": 1940,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1886,
									"end": 1950,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1886,
									"end": 1950,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1886,
									"end": 1950,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1886,
									"end": 1950,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1876,
									"end": 1950,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1876,
									"end": 1950,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1831,
									"end": 1960,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 958,
									"end": 1967,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 958,
									"end": 1967,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 958,
									"end": 1967,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 958,
									"end": 1967,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 958,
									"end": 1967,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 958,
									"end": 1967,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1973,
									"end": 2091,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1973,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2060,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2078,
									"end": 2083,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2060,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2060,
									"end": 2084,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2060,
									"end": 2084,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2060,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2055,
									"end": 2058,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2085,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1973,
									"end": 2091,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1973,
									"end": 2091,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1973,
									"end": 2091,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2097,
									"end": 2319,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2097,
									"end": 2319,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2190,
									"end": 2194,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2217,
									"end": 2226,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2213,
									"end": 2231,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2205,
									"end": 2231,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2205,
									"end": 2231,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2241,
									"end": 2312,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2298,
									"end": 2307,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2294,
									"end": 2311,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2285,
									"end": 2291,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2241,
									"end": 2312,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2241,
									"end": 2312,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2241,
									"end": 2312,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2241,
									"end": 2312,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2097,
									"end": 2319,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2097,
									"end": 2319,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2097,
									"end": 2319,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2097,
									"end": 2319,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2097,
									"end": 2319,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2325,
									"end": 2454,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 2325,
									"end": 2454,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2359,
									"end": 2365,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2386,
									"end": 2406,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2386,
									"end": 2406,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2386,
									"end": 2406,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2386,
									"end": 2406,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2386,
									"end": 2406,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2376,
									"end": 2406,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2376,
									"end": 2406,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2415,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 2443,
									"end": 2447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2435,
									"end": 2441,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2415,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2415,
									"end": 2448,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2415,
									"end": 2448,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 2415,
									"end": 2448,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2325,
									"end": 2454,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2325,
									"end": 2454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2325,
									"end": 2454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2325,
									"end": 2454,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2460,
									"end": 2535,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2460,
									"end": 2535,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2493,
									"end": 2499,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2526,
									"end": 2528,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2520,
									"end": 2529,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2510,
									"end": 2529,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2510,
									"end": 2529,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2460,
									"end": 2535,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2460,
									"end": 2535,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2541,
									"end": 2849,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 2541,
									"end": 2849,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2603,
									"end": 2607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2693,
									"end": 2711,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2685,
									"end": 2691,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2682,
									"end": 2712,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2679,
									"end": 2735,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2679,
									"end": 2735,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 2679,
									"end": 2735,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2715,
									"end": 2733,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2715,
									"end": 2733,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 2715,
									"end": 2733,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2715,
									"end": 2733,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2715,
									"end": 2733,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2679,
									"end": 2735,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 2679,
									"end": 2735,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2753,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 2775,
									"end": 2781,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2753,
									"end": 2782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 2753,
									"end": 2782,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2753,
									"end": 2782,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 2753,
									"end": 2782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2745,
									"end": 2782,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2745,
									"end": 2782,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 2841,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2831,
									"end": 2835,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2827,
									"end": 2842,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2819,
									"end": 2842,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2819,
									"end": 2842,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2541,
									"end": 2849,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2541,
									"end": 2849,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2541,
									"end": 2849,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2541,
									"end": 2849,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2855,
									"end": 3160,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2855,
									"end": 3160,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2895,
									"end": 2898,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2914,
									"end": 2934,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 2932,
									"end": 2933,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2914,
									"end": 2934,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2914,
									"end": 2934,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2914,
									"end": 2934,
									"name": "tag",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 2914,
									"end": 2934,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2909,
									"end": 2934,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2909,
									"end": 2934,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2948,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 2966,
									"end": 2967,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2948,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2948,
									"end": 2968,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2948,
									"end": 2968,
									"name": "tag",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 2948,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2943,
									"end": 2968,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2943,
									"end": 2968,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3102,
									"end": 3103,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3034,
									"end": 3100,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3027,
									"end": 3028,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3024,
									"end": 3105,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3021,
									"end": 3128,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3021,
									"end": 3128,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 3021,
									"end": 3128,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3108,
									"end": 3126,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 3108,
									"end": 3126,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 3108,
									"end": 3126,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3108,
									"end": 3126,
									"name": "tag",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 3108,
									"end": 3126,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3021,
									"end": 3128,
									"name": "tag",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 3021,
									"end": 3128,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3152,
									"end": 3153,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3149,
									"end": 3150,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3145,
									"end": 3154,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3138,
									"end": 3154,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2855,
									"end": 3160,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2855,
									"end": 3160,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2855,
									"end": 3160,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2855,
									"end": 3160,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2855,
									"end": 3160,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3166,
									"end": 3243,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 3166,
									"end": 3243,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3232,
									"end": 3237,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3221,
									"end": 3237,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3221,
									"end": 3237,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3166,
									"end": 3243,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3166,
									"end": 3243,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3166,
									"end": 3243,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3166,
									"end": 3243,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3249,
									"end": 3556,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 3249,
									"end": 3556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3317,
									"end": 3318,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3327,
									"end": 3440,
									"name": "tag",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 3327,
									"end": 3440,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3341,
									"end": 3347,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3338,
									"end": 3339,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3335,
									"end": 3348,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3327,
									"end": 3440,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3327,
									"end": 3440,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 3327,
									"end": 3440,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3426,
									"end": 3427,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3421,
									"end": 3424,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3417,
									"end": 3428,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3411,
									"end": 3429,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3407,
									"end": 3408,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3402,
									"end": 3405,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3398,
									"end": 3409,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3391,
									"end": 3430,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3363,
									"end": 3365,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3360,
									"end": 3361,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3356,
									"end": 3366,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3351,
									"end": 3366,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3351,
									"end": 3366,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3327,
									"end": 3440,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "92"
								},
								{
									"begin": 3327,
									"end": 3440,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3327,
									"end": 3440,
									"name": "tag",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 3327,
									"end": 3440,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3458,
									"end": 3464,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3455,
									"end": 3456,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3452,
									"end": 3465,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3449,
									"end": 3550,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3449,
									"end": 3550,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 3449,
									"end": 3550,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3538,
									"end": 3539,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3529,
									"end": 3535,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3524,
									"end": 3527,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3520,
									"end": 3536,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3513,
									"end": 3540,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3449,
									"end": 3550,
									"name": "tag",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 3449,
									"end": 3550,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3298,
									"end": 3556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3249,
									"end": 3556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3249,
									"end": 3556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3249,
									"end": 3556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3249,
									"end": 3556,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3562,
									"end": 3882,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3562,
									"end": 3882,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3606,
									"end": 3612,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3643,
									"end": 3644,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3637,
									"end": 3641,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3633,
									"end": 3645,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 3623,
									"end": 3645,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3623,
									"end": 3645,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3690,
									"end": 3691,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3684,
									"end": 3688,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3680,
									"end": 3692,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3711,
									"end": 3729,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3701,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "97"
								},
								{
									"begin": 3701,
									"end": 3782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3767,
									"end": 3771,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 3759,
									"end": 3765,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3755,
									"end": 3772,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3745,
									"end": 3772,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3745,
									"end": 3772,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3701,
									"end": 3782,
									"name": "tag",
									"source": 4,
									"value": "97"
								},
								{
									"begin": 3701,
									"end": 3782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3829,
									"end": 3831,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3821,
									"end": 3827,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3818,
									"end": 3832,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3798,
									"end": 3816,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3795,
									"end": 3833,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 3792,
									"end": 3876,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3792,
									"end": 3876,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "98"
								},
								{
									"begin": 3792,
									"end": 3876,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3848,
									"end": 3866,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 3848,
									"end": 3866,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3848,
									"end": 3866,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3848,
									"end": 3866,
									"name": "tag",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 3848,
									"end": 3866,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3792,
									"end": 3876,
									"name": "tag",
									"source": 4,
									"value": "98"
								},
								{
									"begin": 3792,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3613,
									"end": 3882,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3562,
									"end": 3882,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3562,
									"end": 3882,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3562,
									"end": 3882,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3562,
									"end": 3882,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3888,
									"end": 4169,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 3888,
									"end": 4169,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3971,
									"end": 3998,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "102"
								},
								{
									"begin": 3993,
									"end": 3997,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3971,
									"end": 3998,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3971,
									"end": 3998,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3971,
									"end": 3998,
									"name": "tag",
									"source": 4,
									"value": "102"
								},
								{
									"begin": 3971,
									"end": 3998,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3963,
									"end": 3969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3959,
									"end": 3999,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4101,
									"end": 4107,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4089,
									"end": 4099,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4086,
									"end": 4108,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4065,
									"end": 4083,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4053,
									"end": 4063,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4050,
									"end": 4084,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 4047,
									"end": 4109,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 4044,
									"end": 4132,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4044,
									"end": 4132,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 4044,
									"end": 4132,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4112,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 4112,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 4112,
									"end": 4130,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 4112,
									"end": 4130,
									"name": "tag",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 4112,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4044,
									"end": 4132,
									"name": "tag",
									"source": 4,
									"value": "103"
								},
								{
									"begin": 4044,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4152,
									"end": 4162,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4148,
									"end": 4150,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4141,
									"end": 4163,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3931,
									"end": 4169,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3888,
									"end": 4169,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3888,
									"end": 4169,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3888,
									"end": 4169,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 4175,
									"end": 4355,
									"name": "tag",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 4175,
									"end": 4355,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4223,
									"end": 4300,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4220,
									"end": 4221,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4213,
									"end": 4301,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4320,
									"end": 4324,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 4317,
									"end": 4318,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 4310,
									"end": 4325,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4344,
									"end": 4348,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 4341,
									"end": 4342,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4334,
									"end": 4349,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4361,
									"end": 4541,
									"name": "tag",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 4361,
									"end": 4541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4409,
									"end": 4486,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4406,
									"end": 4407,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4399,
									"end": 4487,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4506,
									"end": 4510,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 4503,
									"end": 4504,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 4496,
									"end": 4511,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4530,
									"end": 4534,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 4527,
									"end": 4528,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4520,
									"end": 4535,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4547,
									"end": 4727,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 4547,
									"end": 4727,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4595,
									"end": 4672,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4592,
									"end": 4593,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4585,
									"end": 4673,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4692,
									"end": 4696,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 4689,
									"end": 4690,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 4682,
									"end": 4697,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4716,
									"end": 4720,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 4713,
									"end": 4714,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4706,
									"end": 4721,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4733,
									"end": 4850,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 4733,
									"end": 4850,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4842,
									"end": 4843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4839,
									"end": 4840,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4832,
									"end": 4844,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4856,
									"end": 4973,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 4856,
									"end": 4973,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4965,
									"end": 4966,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4962,
									"end": 4963,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4955,
									"end": 4967,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4979,
									"end": 5096,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 4979,
									"end": 5096,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5088,
									"end": 5089,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5085,
									"end": 5086,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5078,
									"end": 5090,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5102,
									"end": 5219,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 5102,
									"end": 5219,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5211,
									"end": 5212,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5208,
									"end": 5209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5201,
									"end": 5213,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5225,
									"end": 5327,
									"name": "tag",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 5225,
									"end": 5327,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5266,
									"end": 5272,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5317,
									"end": 5319,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 5313,
									"end": 5320,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 5308,
									"end": 5310,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 5301,
									"end": 5306,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5297,
									"end": 5311,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5293,
									"end": 5321,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5283,
									"end": 5321,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5283,
									"end": 5321,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5225,
									"end": 5327,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5225,
									"end": 5327,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5225,
									"end": 5327,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5225,
									"end": 5327,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 5333,
									"end": 5455,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 5333,
									"end": 5455,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5406,
									"end": 5430,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 5424,
									"end": 5429,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5406,
									"end": 5430,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 5406,
									"end": 5430,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 5406,
									"end": 5430,
									"name": "tag",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 5406,
									"end": 5430,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5399,
									"end": 5404,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5396,
									"end": 5431,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 5386,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 5386,
									"end": 5449,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5445,
									"end": 5446,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5435,
									"end": 5447,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5386,
									"end": 5449,
									"name": "tag",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 5386,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5333,
									"end": 5455,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5333,
									"end": 5455,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 2229,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203630a2e27ddcbd4e938135b6c80b3408ae055844b13ec230c0392c90967f028664736f6c63430008070033",
									".code": [
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 2229,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 214,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1652,
											"end": 1662,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1671,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1678,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1643,
											"end": 1679,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1643,
											"end": 1679,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1643,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1689,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1707,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2016,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2033,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2034,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2039,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2003,
											"end": 2164,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2134,
											"end": 2139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2099,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2100,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2111,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2085,
											"end": 2116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2153,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2153,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2085,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2085,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2069,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2081,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2082,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2153,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2055,
											"end": 2153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2003,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2191,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2173,
											"end": 2199,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2173,
											"end": 2199,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2173,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2209,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 246,
											"end": 281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 246,
											"end": 281,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 381,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1811,
											"end": 1821,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1832,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1801,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1843,
											"end": 1854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1861,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 460,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2798,
											"end": 2805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2824,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2740,
											"end": 2836,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1290,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1091,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1237,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1219,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1220,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1229,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1237,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1283,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1290,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1296,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1296,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1431,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1436,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1422,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1448,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1448,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1422,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1448,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1492,
											"end": 1497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1483,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1486,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1487,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1474,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1467,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1470,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1471,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1498,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1545,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2789,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2784,
											"end": 2787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2820,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2925,
											"end": 2930,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2909,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2907,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2932,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2938,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3031,
											"end": 3035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3071,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3144,
											"end": 3145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3120,
											"end": 3126,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3082,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3154,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3273,
											"end": 3277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3313,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3314,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3358,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3370,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3347,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3344,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3461,
											"end": 3465,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3452,
											"end": 3458,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3388,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3466,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3473,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3612,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3673,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3623,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3701,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3911,
											"end": 3912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3909,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3887,
											"end": 3893,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3847,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3921,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4088,
											"end": 4100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4107,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4197,
											"end": 4208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4237,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4226,
											"end": 4229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4238,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4275,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4266,
											"end": 4269,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4262,
											"end": 4276,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4282,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4328,
											"end": 4331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4342,
											"end": 4367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4342,
											"end": 4367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4399,
											"end": 4400,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4381,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4376,
											"end": 4401,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4376,
											"end": 4401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4467,
											"end": 4533,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4463,
											"end": 4537,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4457,
											"end": 4538,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4454,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4582,
											"end": 4583,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4571,
											"end": 4587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4571,
											"end": 4587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4593,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4677,
											"end": 4678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4659,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4711,
											"end": 4712,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4693,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4713,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4732,
											"end": 4733,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4730,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4726,
											"end": 4734,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4737,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4782,
											"end": 4783,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4767,
											"end": 4784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4790,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4880,
											"end": 4885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4862,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4851,
											"end": 4886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4851,
											"end": 4886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4796,
											"end": 4892,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4981,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4961,
											"end": 4982,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4982,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4988,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5038,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5064,
											"end": 5069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5060,
											"end": 5114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5049,
											"end": 5114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4994,
											"end": 5120,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5163,
											"end": 5170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5203,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5244,
											"end": 5251,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5288,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5277,
											"end": 5282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5289,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5295,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5400,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5478,
											"end": 5479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5476,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5480,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5459,
											"end": 5460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5450,
											"end": 5461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5443,
											"end": 5482,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5408,
											"end": 5418,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5379,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5510,
											"end": 5516,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5507,
											"end": 5508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5517,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5590,
											"end": 5591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5587,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5576,
											"end": 5579,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5572,
											"end": 5588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5501,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5350,
											"end": 5608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5608,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5614,
											"end": 5934,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5614,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5658,
											"end": 5664,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5689,
											"end": 5693,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 5697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5675,
											"end": 5697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5742,
											"end": 5743,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5736,
											"end": 5740,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5732,
											"end": 5744,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5753,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5753,
											"end": 5834,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 5811,
											"end": 5817,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5797,
											"end": 5824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5797,
											"end": 5824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5753,
											"end": 5834,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5753,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5881,
											"end": 5883,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5884,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5850,
											"end": 5868,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5847,
											"end": 5885,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5844,
											"end": 5928,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5844,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5844,
											"end": 5928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5844,
											"end": 5928,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5844,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5665,
											"end": 5934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5934,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5940,
											"end": 6120,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5940,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6065,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5985,
											"end": 5986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5978,
											"end": 6066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6085,
											"end": 6089,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6082,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6075,
											"end": 6090,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6113,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6106,
											"end": 6107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6099,
											"end": 6114,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6306,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6126,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6251,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6171,
											"end": 6172,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6275,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 6268,
											"end": 6269,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6261,
											"end": 6276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6295,
											"end": 6299,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6292,
											"end": 6293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6300,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6435,
											"end": 6552,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6435,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6542,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6546,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6660,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 6558,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6605,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6650,
											"end": 6652,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6641,
											"end": 6643,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6634,
											"end": 6639,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 6644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6626,
											"end": 6654,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6616,
											"end": 6654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6616,
											"end": 6654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6660,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6666,
											"end": 6788,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 6666,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6757,
											"end": 6762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6739,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6732,
											"end": 6737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6764,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6719,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6719,
											"end": 6782,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6768,
											"end": 6780,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6719,
											"end": 6782,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6719,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6666,
											"end": 6788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6666,
											"end": 6788,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6794,
											"end": 6916,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6794,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6867,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6885,
											"end": 6890,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6867,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6867,
											"end": 6891,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6867,
											"end": 6891,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6867,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6860,
											"end": 6865,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6857,
											"end": 6892,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6847,
											"end": 6910,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 6907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6896,
											"end": 6908,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6847,
											"end": 6910,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6847,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6916,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sym\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"allowance\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"return\":\"The current allowance granted by `owner` to `spender`\",\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"balanceOf\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"return\":\"The number of tokens held by the account\",\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20/vSwapERC20TEST.sol\":\"vSwapERC20TEST\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x9c68bfd77adffd9844d42df6f11148a215b3498b97406b094a55fbaaa541b0d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f8bbe55530a7dcf1242e1b2c786dcb68b3634a9b6de1a7d4dad8dd93e455ba\",\"dweb:/ipfs/QmR42LuC14UJuRLTh83S3rq7E59pJ2ZTm7MowcYrY2WmKb\"]},\"contracts/ERC20/vSwapERC20TEST.sol\":{\"keccak256\":\"0xaca68613d3bc758d387b6af37300e4fcda9058f033806b58e6c45a6853d79d5b\",\"urls\":[\"bzz-raw://d9e4b5afdb9b9a9cbede9159160114b566dc76d8e52b6f42c375e2b352e9ce72\",\"dweb:/ipfs/QmVTq95qxk88vFvZcyNAKwPuro3jxiLusywDabQ5iCAoKn\"]},\"contracts/interfaces/IvSwapERC20.sol\":{\"keccak256\":\"0xb86e118569a97d7abc96df6f6b44cecbc9ca83f11688d31da90f611466892dba\",\"urls\":[\"bzz-raw://0b22e7442ff04dc1bc8d5a0c5362b30acc20e48f5db435f70808bfac4150ab55\",\"dweb:/ipfs/QmNvWTSDsxH933P4Y7WyDsiDbGQrgTZxYjgzgqgt7dsDc8\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6eb8d3261b64ae6965528bfc2a38aad6f104deb7417751137dee1ecca372ad41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9912fafaa104512e52fb83a0a1d4a9f2f04addf06d0d26b4aa6ae35a4291a8af\",\"dweb:/ipfs/QmUKP5UDCk2yjUb23pohxyoF63UwM6dPrn7RTS2xW6bdoV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 88,
								"contract": "contracts/ERC20/vSwapERC20TEST.sol:vSwapERC20TEST",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 90,
								"contract": "contracts/ERC20/vSwapERC20TEST.sol:vSwapERC20TEST",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 96,
								"contract": "contracts/ERC20/vSwapERC20TEST.sol:vSwapERC20TEST",
								"label": "totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 101,
								"contract": "contracts/ERC20/vSwapERC20TEST.sol:vSwapERC20TEST",
								"label": "balanceOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 108,
								"contract": "contracts/ERC20/vSwapERC20TEST.sol:vSwapERC20TEST",
								"label": "allowance",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IvSwapERC20.sol": {
				"IvSwapERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IvSwapERC20.sol\":\"IvSwapERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x9c68bfd77adffd9844d42df6f11148a215b3498b97406b094a55fbaaa541b0d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95f8bbe55530a7dcf1242e1b2c786dcb68b3634a9b6de1a7d4dad8dd93e455ba\",\"dweb:/ipfs/QmR42LuC14UJuRLTh83S3rq7E59pJ2ZTm7MowcYrY2WmKb\"]},\"contracts/interfaces/IvSwapERC20.sol\":{\"keccak256\":\"0xb86e118569a97d7abc96df6f6b44cecbc9ca83f11688d31da90f611466892dba\",\"urls\":[\"bzz-raw://0b22e7442ff04dc1bc8d5a0c5362b30acc20e48f5db435f70808bfac4150ab55\",\"dweb:/ipfs/QmNvWTSDsxH933P4Y7WyDsiDbGQrgTZxYjgzgqgt7dsDc8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":467:6767  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":467:6767  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202d56f358c245f5f74f908330580e1f5834eca17e527deb5c2dcc50d748f5677664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d56f358c245f5f74f908330580e1f5834eca17e527deb5c2dcc50d748f5677664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D JUMP RETURN PC 0xC2 GASLIMIT CREATE2 0xF7 0x4F SWAP1 DUP4 ADDRESS PC 0xE 0x1F PC CALLVALUE 0xEC LOG1 PUSH31 0x527DEB5C2DCC50D748F5677664736F6C634300080700330000000000000000 ",
							"sourceMap": "467:6300:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d56f358c245f5f74f908330580e1f5834eca17e527deb5c2dcc50d748f5677664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D JUMP RETURN PC 0xC2 GASLIMIT CREATE2 0xF7 0x4F SWAP1 DUP4 ADDRESS PC 0xE 0x1F PC CALLVALUE 0xEC LOG1 PUSH31 0x527DEB5C2DCC50D748F5677664736F6C634300080700330000000000000000 ",
							"sourceMap": "467:6300:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d56f358c245f5f74f908330580e1f5834eca17e527deb5c2dcc50d748f5677664736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x6eb8d3261b64ae6965528bfc2a38aad6f104deb7417751137dee1ecca372ad41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9912fafaa104512e52fb83a0a1d4a9f2f04addf06d0d26b4aa6ae35a4291a8af\",\"dweb:/ipfs/QmUKP5UDCk2yjUb23pohxyoF63UwM6dPrn7RTS2xW6bdoV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ERC20/vSwapERC20TEST.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ERC20/vSwapERC20TEST.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IvSwapERC20.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interfaces/IvSwapERC20.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "197:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:0"
									},
									"scope": 77,
									"src": "281:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "342:201:0",
										"text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "607:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:9:0"
									},
									"scope": 77,
									"src": "548:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "622:333:0",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "969:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "986:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "978:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "978:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1005:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "997:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "977:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1047:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:6:0"
									},
									"scope": 77,
									"src": "960:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1059:250:0",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1323:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1341:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1333:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1356:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1348:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1412:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:9:0"
									},
									"scope": 77,
									"src": "1314:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1427:343:0",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1784:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1800:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1792:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1817:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1809:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1791:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1843:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1842:6:0"
									},
									"scope": 77,
									"src": "1775:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1855:371:0",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2240:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2270:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2262:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2294:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2286:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2321:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2313:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2252:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2352:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2351:6:0"
									},
									"scope": 77,
									"src": "2231:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2364:369:0",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2744:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2753:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2791:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2775:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:57:0"
									},
									"src": "2738:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2816:321:0",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "3148:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3182:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3166:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3213:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3197:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3238:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3230:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:93:0"
									},
									"src": "3142:108:0"
								}
							],
							"scope": 78,
							"src": "187:3065:0",
							"usedErrors": []
						}
					],
					"src": "91:3162:0"
				},
				"id": 0
			},
			"contracts/ERC20/vSwapERC20TEST.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20/vSwapERC20TEST.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IvSwapERC20": [
							359
						],
						"SafeMath": [
							671
						],
						"vSwapERC20TEST": [
							353
						]
					},
					"id": 354,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "contracts/interfaces/IvSwapERC20.sol",
							"file": "../interfaces/IvSwapERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 354,
							"sourceUnit": 360,
							"src": "25:39:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 354,
							"sourceUnit": 672,
							"src": "65:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 82,
										"name": "IvSwapERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 359,
										"src": "145:11:1"
									},
									"id": 83,
									"nodeType": "InheritanceSpecifier",
									"src": "145:11:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 353,
							"linearizedBaseContracts": [
								353,
								359,
								77
							],
							"name": "vSwapERC20TEST",
							"nameLocation": "127:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 86,
									"libraryName": {
										"id": 84,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 671,
										"src": "169:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "163:27:1",
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "182:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 88,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "210:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "196:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 87,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "196:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 90,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "234:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "220:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 89,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "220:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 93,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "268:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "246:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 91,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "246:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 92,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "279:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										8
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 96,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "311:11:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 95,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "295:8:1"
									},
									"scope": 353,
									"src": "287:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 94,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "287:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"constant": false,
									"functionSelector": "70a08231",
									"id": 101,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "372:9:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "356:8:1"
									},
									"scope": 353,
									"src": "328:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 99,
										"keyType": {
											"id": 97,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "336:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "328:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 98,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "347:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										36
									],
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 108,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "451:9:1",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 107,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "435:8:1"
									},
									"scope": 353,
									"src": "387:73:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 106,
										"keyType": {
											"id": 102,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "395:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "387:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 105,
											"keyType": {
												"id": 103,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "414:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "406:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 104,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "425:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "572:93:1",
										"statements": [
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 117,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "582:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 118,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "589:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "582:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "582:12:1"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "604:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "_sym",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "613:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "604:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "604:13:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 126,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "633:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "633:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 128,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "645:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 125,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "627:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "627:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "627:31:1"
											}
										]
									},
									"id": 132,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "502:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "488:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 109,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "488:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "_sym",
												"nameLocation": "531:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "517:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 111,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "517:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "_totalSupply",
												"nameLocation": "553:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "545:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:93:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:0:1"
									},
									"scope": 353,
									"src": "467:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "722:149:1",
										"statements": [
											{
												"expression": {
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 139,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "732:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 142,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "762:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 140,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "746:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 535,
															"src": "746:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "746:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "732:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "732:36:1"
											},
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 146,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "778:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 148,
														"indexExpression": {
															"id": 147,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "788:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "778:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 153,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "812:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 149,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "794:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 151,
																"indexExpression": {
																	"id": 150,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "804:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "794:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 535,
															"src": "794:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "794:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "778:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "778:40:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "850:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "842:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "842:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "842:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 162,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "854:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 163,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "858:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "833:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "833:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "EmitStatement",
												"src": "828:36:1"
											}
										]
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "680:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "694:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "686:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "706:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "698:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:27:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "722:0:1"
									},
									"scope": 353,
									"src": "671:200:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "930:155:1",
										"statements": [
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 174,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "940:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 176,
														"indexExpression": {
															"id": 175,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "950:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "940:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "978:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 177,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "958:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 179,
																"indexExpression": {
																	"id": 178,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "968:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "958:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 550,
															"src": "958:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "958:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "940:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "940:44:1"
											},
											{
												"expression": {
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "994:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 188,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "1024:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 186,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1008:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 550,
															"src": "1008:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1008:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "994:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "994:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 193,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "1054:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1060:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 194,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1060:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1060:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 198,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1072:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 192,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "1045:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "EmitStatement",
												"src": "1040:38:1"
											}
										]
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "886:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "900:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "892:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "914:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "906:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:29:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:1"
									},
									"scope": 353,
									"src": "877:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "1194:96:1",
										"statements": [
											{
												"expression": {
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 211,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "1204:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 214,
															"indexExpression": {
																"id": 212,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "1214:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1204:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 215,
														"indexExpression": {
															"id": 213,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "1221:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1204:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 216,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1232:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1204:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "1204:33:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 220,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "1261:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "1268:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1277:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 219,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1252:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1252:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "EmitStatement",
												"src": "1247:36:1"
											}
										]
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "1100:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1126:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1118:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1149:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1141:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1174:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1166:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:77:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1194:0:1"
									},
									"scope": 353,
									"src": "1091:199:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "1394:151:1",
										"statements": [
											{
												"expression": {
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 235,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1404:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 237,
														"indexExpression": {
															"id": 236,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "1414:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1404:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 242,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1442:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 238,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "1422:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 240,
																"indexExpression": {
																	"id": 239,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "1432:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1422:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 550,
															"src": "1422:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1422:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1404:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "1404:44:1"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 246,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1458:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 248,
														"indexExpression": {
															"id": 247,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1468:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1458:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 253,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1492:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 249,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "1474:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 251,
																"indexExpression": {
																	"id": 250,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "1484:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1474:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 535,
															"src": "1474:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1474:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1458:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "1458:40:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 258,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "1522:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 259,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1528:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 260,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "1532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "1513:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1513:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "EmitStatement",
												"src": "1508:30:1"
											}
										]
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "1305:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1354:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1346:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1374:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1366:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1314:71:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1394:0:1"
									},
									"scope": 353,
									"src": "1296:249:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										46
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1633:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 275,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1652:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1652:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 277,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "1664:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 278,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "1673:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 274,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1643:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1643:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "1643:36:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1696:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 273,
												"id": 282,
												"nodeType": "Return",
												"src": "1689:11:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1560:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 270,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1609:8:1"
									},
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1576:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1568:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1593:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1585:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1627:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1627:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:6:1"
									},
									"scope": 353,
									"src": "1551:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1791:70:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1811:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1811:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "1823:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1827:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 294,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1801:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "1801:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 293,
												"id": 302,
												"nodeType": "Return",
												"src": "1843:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1722:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 290,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1767:8:1"
									},
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1739:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1731:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1751:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1743:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:27:1"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1785:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1785:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:6:1"
									},
									"scope": 353,
									"src": "1713:148:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "1993:234:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 316,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "2007:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 318,
															"indexExpression": {
																"id": 317,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "2017:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2007:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 321,
														"indexExpression": {
															"expression": {
																"id": 319,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2023:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2023:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2007:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2038:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2007:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 342,
												"nodeType": "IfStatement",
												"src": "2003:161:1",
												"trueBody": {
													"id": 341,
													"nodeType": "Block",
													"src": "2041:123:1",
													"statements": [
														{
															"expression": {
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 324,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 108,
																			"src": "2055:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 328,
																		"indexExpression": {
																			"id": 325,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "2065:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2055:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 329,
																	"indexExpression": {
																		"expression": {
																			"id": 326,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2071:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2071:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2055:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 337,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2134:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 330,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 108,
																					"src": "2085:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 332,
																				"indexExpression": {
																					"id": 331,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 306,
																					"src": "2095:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2085:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 335,
																			"indexExpression": {
																				"expression": {
																					"id": 333,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2101:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2101:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2085:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 550,
																		"src": "2085:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2085:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2055:98:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 340,
															"nodeType": "ExpressionStatement",
															"src": "2055:98:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 344,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "2183:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2189:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "2193:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 343,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2173:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2173:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "2173:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2216:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 315,
												"id": 350,
												"nodeType": "Return",
												"src": "2209:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1876:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 312,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1969:8:1"
									},
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1906:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1898:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1928:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1920:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1948:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1940:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:71:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1987:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1987:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:6:1"
									},
									"scope": 353,
									"src": "1867:360:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 354,
							"src": "118:2111:1",
							"usedErrors": []
						}
					],
					"src": "0:2230:1"
				},
				"id": 1
			},
			"contracts/interfaces/IvSwapERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IvSwapERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IvSwapERC20": [
							359
						]
					},
					"id": 360,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "contracts/ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 360,
							"sourceUnit": 78,
							"src": "25:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 357,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "80:6:2"
									},
									"id": 358,
									"nodeType": "InheritanceSpecifier",
									"src": "80:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 359,
							"linearizedBaseContracts": [
								359,
								77
							],
							"name": "IvSwapERC20",
							"nameLocation": "65:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 360,
							"src": "55:34:2",
							"usedErrors": []
						}
					],
					"src": "0:90:2"
				},
				"id": 2
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							671
						]
					},
					"id": 672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 362,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 671,
							"linearizedBaseContracts": [
								671
							],
							"name": "SafeMath",
							"nameLocation": "475:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "702:140:3",
										"statements": [
											{
												"id": 392,
												"nodeType": "UncheckedBlock",
												"src": "712:124:3",
												"statements": [
													{
														"assignments": [
															375
														],
														"declarations": [
															{
																"constant": false,
																"id": 375,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 392,
																"src": "736:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 379,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 376,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "748:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 377,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "752:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 380,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "771:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 381,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "775:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 387,
														"nodeType": "IfStatement",
														"src": "767:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 373,
															"id": 386,
															"nodeType": "Return",
															"src": "778:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 389,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "823:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 390,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 373,
														"id": 391,
														"nodeType": "Return",
														"src": "809:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "642:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "653:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "687:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:3"
									},
									"scope": 671,
									"src": "626:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1063:113:3",
										"statements": [
											{
												"id": 420,
												"nodeType": "UncheckedBlock",
												"src": "1073:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "1101:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 407,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "1105:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1101:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 413,
														"nodeType": "IfStatement",
														"src": "1097:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1116:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1123:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 411,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1115:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 405,
															"id": 412,
															"nodeType": "Return",
															"src": "1108:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1147:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 415,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "1153:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 416,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "1157:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1153:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 418,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1146:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 405,
														"id": 419,
														"nodeType": "Return",
														"src": "1139:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "848:134:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "996:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1011:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1003:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1022:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1014:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:22:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1048:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1048:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1054:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:15:3"
									},
									"scope": 671,
									"src": "987:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1400:417:3",
										"statements": [
											{
												"id": 462,
												"nodeType": "UncheckedBlock",
												"src": "1410:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1668:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1673:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1668:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 441,
														"nodeType": "IfStatement",
														"src": "1664:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1684:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1690:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 439,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1683:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 433,
															"id": 440,
															"nodeType": "Return",
															"src": "1676:16:3"
														}
													},
													{
														"assignments": [
															443
														],
														"declarations": [
															{
																"constant": false,
																"id": 443,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1714:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 462,
																"src": "1706:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 442,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1706:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 447,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 444,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 445,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "1722:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1718:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1706:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 448,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "1741:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 449,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "1745:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1741:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 451,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "1750:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1741:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 457,
														"nodeType": "IfStatement",
														"src": "1737:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1761:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1768:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1760:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 433,
															"id": 456,
															"nodeType": "Return",
															"src": "1753:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1792:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 459,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "1798:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 460,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1791:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 433,
														"id": 461,
														"nodeType": "Return",
														"src": "1784:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "1182:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1333:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1348:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1340:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1359:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1351:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:22:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1385:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1385:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1391:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:15:3"
									},
									"scope": 671,
									"src": "1324:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "2042:114:3",
										"statements": [
											{
												"id": 490,
												"nodeType": "UncheckedBlock",
												"src": "2052:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 476,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "2080:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2085:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2080:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 483,
														"nodeType": "IfStatement",
														"src": "2076:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2096:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2103:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 481,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2095:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 475,
															"id": 482,
															"nodeType": "Return",
															"src": "2088:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2127:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 485,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "2133:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 486,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "2137:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2133:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 488,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2126:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 475,
														"id": 489,
														"nodeType": "Return",
														"src": "2119:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1823:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1975:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1990:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1982:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2001:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1993:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:22:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2027:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2033:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:15:3"
									},
									"scope": 671,
									"src": "1966:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "2391:114:3",
										"statements": [
											{
												"id": 518,
												"nodeType": "UncheckedBlock",
												"src": "2401:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 504,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2429:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2434:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2429:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 511,
														"nodeType": "IfStatement",
														"src": "2425:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2445:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2452:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 509,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2444:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 503,
															"id": 510,
															"nodeType": "Return",
															"src": "2437:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2476:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 513,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "2482:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 514,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "2486:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2482:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 516,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2475:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 503,
														"id": 517,
														"nodeType": "Return",
														"src": "2468:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "2162:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2324:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2339:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2331:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2350:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2342:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2330:22:3"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "2382:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:15:3"
									},
									"scope": 671,
									"src": "2315:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "2807:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 530,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "2824:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 531,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2828:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2824:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 529,
												"id": 533,
												"nodeType": "Return",
												"src": "2817:12:3"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "2511:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2749:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2761:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2753:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2772:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2764:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:22:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2798:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:9:3"
									},
									"scope": 671,
									"src": "2740:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "3174:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 545,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3191:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 546,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "3195:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3191:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 544,
												"id": 548,
												"nodeType": "Return",
												"src": "3184:12:3"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "2842:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3116:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3128:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3120:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3139:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3131:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:22:3"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3165:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:9:3"
									},
									"scope": 671,
									"src": "3107:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "3517:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 560,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "3534:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 561,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "3538:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3534:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 559,
												"id": 563,
												"nodeType": "Return",
												"src": "3527:12:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "3209:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3459:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3471:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3463:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3482:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3474:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3462:22:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3508:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:9:3"
									},
									"scope": 671,
									"src": "3450:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "3902:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 575,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "3919:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 576,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "3923:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3919:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 574,
												"id": 578,
												"nodeType": "Return",
												"src": "3912:12:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "3552:278:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3844:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3856:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3848:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3867:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3859:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3859:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:22:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3893:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:9:3"
									},
									"scope": 671,
									"src": "3835:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "4451:29:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 590,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "4468:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 591,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "4472:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4468:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "4461:12:3"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "3937:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4393:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4405:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "4397:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4416:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "4408:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4396:22:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "4442:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4441:9:3"
									},
									"scope": 671,
									"src": "4384:96:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "5069:106:3",
										"statements": [
											{
												"id": 618,
												"nodeType": "UncheckedBlock",
												"src": "5079:90:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 608,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "5111:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 609,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "5116:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5111:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 611,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "5119:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 607,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5103:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5103:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 613,
														"nodeType": "ExpressionStatement",
														"src": "5103:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "5153:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 615,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "5157:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5153:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 606,
														"id": 617,
														"nodeType": "Return",
														"src": "5146:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "4486:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4953:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4974:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4966:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4966:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4993:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "4985:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5018:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "5004:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5004:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:80:3"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "5060:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5059:9:3"
									},
									"scope": 671,
									"src": "4944:231:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5784:105:3",
										"statements": [
											{
												"id": 643,
												"nodeType": "UncheckedBlock",
												"src": "5794:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 633,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "5826:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5830:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5826:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 636,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "5833:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 632,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5818:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5818:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 638,
														"nodeType": "ExpressionStatement",
														"src": "5818:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 639,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "5867:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 640,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "5871:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5867:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 631,
														"id": 642,
														"nodeType": "Return",
														"src": "5860:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "5181:473:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5668:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5689:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5681:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5708:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5700:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5700:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5733:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5719:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 626,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5719:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5671:80:3"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5775:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5774:9:3"
									},
									"scope": 671,
									"src": "5659:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "6660:105:3",
										"statements": [
											{
												"id": 668,
												"nodeType": "UncheckedBlock",
												"src": "6670:89:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 658,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "6702:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6706:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6702:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 661,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "6709:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 657,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6694:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6694:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 663,
														"nodeType": "ExpressionStatement",
														"src": "6694:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 664,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "6743:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 665,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "6747:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 656,
														"id": 667,
														"nodeType": "Return",
														"src": "6736:12:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5895:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6544:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6565:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6557:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6557:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6584:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6576:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6609:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6595:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 651,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6595:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6547:80:3"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "6651:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6651:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6650:9:3"
									},
									"scope": 671,
									"src": "6535:230:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 672,
							"src": "467:6300:3",
							"usedErrors": []
						}
					],
					"src": "92:6675:3"
				},
				"id": 3
			}
		}
	}
}